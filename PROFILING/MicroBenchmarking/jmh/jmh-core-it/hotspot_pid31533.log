<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='31533' time_ms='1560356625526'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
25.71-b00-fastdebug
</release>
<info>
OpenJDK 64-Bit Server VM (25.71-b00-fastdebug) for linux-amd64 JRE (1.8.0-internal-suryasnata_2019_06_08_22_39-b00), built on Jun  8 2019 23:17:25 by &quot;suryasnata&quot; with gcc 7.4.0
</info>
</vm_version>
<vm_arguments>
<args>
-Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+PrintInlining -XX:CompileCommandFile=/tmp/jmh6944384681507288541compilecommand 
</args>
<command>
org.openjdk.jmh.runner.ForkedMain 127.0.0.1 34543
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.71-b00-fastdebug
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/endorsed
sun.boot.library.path=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/usr/lib/jvm/java-8-openjdkdebug/jre
java.class.path=/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core-it/target/test-classes:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core-it/target/classes:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core/target/jmh-core-1.18-SNAPSHOT.jar:/home/suryasnata/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/suryasnata/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/suryasnata/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/suryasnata/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-generator-annprocess/target/jmh-generator-annprocess-1.18-SNAPSHOT.jar:
sun.boot.class.path=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
jmh.ignoreLock=true
jmh.core.it.profile=default
sun.java.command=org.openjdk.jmh.runner.ForkedMain 127.0.0.1 34543
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='139812892006144'/>
<writer thread='139812461811456'/>
    673    1       3       java.lang.String::hashCode (55 bytes)
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='177714'/>
</blob>
    704    2       3       java.lang.String::equals (81 bytes)
    718    3       3       java.lang.String::length (6 bytes)
    724    4       3       java.lang.Object::&lt;init&gt; (1 bytes)
    724    5       3       java.lang.String::charAt (29 bytes)
                              @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812892006144'/>
    725    8     n 0       java.lang.System::arraycopy (native)   (static)
<writer thread='139812461811456'/>
    725    6       3       java.lang.String::indexOf (70 bytes)
                              @ 66   java.lang.String::indexOfSupplementary (71 bytes)   callee is too large
    727    7       3       java.lang.Math::min (11 bytes)
    733    9       3       java.util.Arrays::copyOfRange (63 bytes)
                              @ 16   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 32   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 35   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 54   java.lang.Math::min (11 bytes)
                              @ 57   java.lang.System::arraycopy (0 bytes)   intrinsic
    808   10       3       java.lang.String::getChars (62 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 43  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 58   java.lang.System::arraycopy (0 bytes)   intrinsic
    829   11       3       java.lang.CharacterData::of (120 bytes)
    831   12       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)
    838   13       3       java.util.jar.Attributes$Name::isValid (32 bytes)
                              @ 1   java.util.jar.Attributes$Name::isAlpha (30 bytes)   not inlineable
                              @ 8   java.util.jar.Attributes$Name::isDigit (18 bytes)   not inlineable
    840   14       3       java.util.jar.Attributes$Name::isAlpha (30 bytes)
    859   15       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                              @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                              @ 20   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
    870   16       3       java.lang.System::getSecurityManager (4 bytes)
    872   17       3       java.lang.String::indexOf (7 bytes)
                              @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
    874   18       3       java.lang.String::lastIndexOf (52 bytes)
                              @ 16   java.lang.Math::min (11 bytes)
                              @ 48   java.lang.String::lastIndexOfSupplementary (70 bytes)   callee is too large
    876   19       3       java.lang.String::startsWith (72 bytes)
    880   20       3       java.lang.AbstractStringBuilder::append (50 bytes)
                              @ 5   java.lang.AbstractStringBuilder::appendNull (56 bytes)   callee is too large
                              @ 10   java.lang.String::length (6 bytes)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 35   java.lang.String::getChars (62 bytes)   callee is too large
    887   21       3       java.lang.StringBuilder::append (8 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
    890   22       3       java.lang.String::&lt;init&gt; (82 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 13  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 30  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 65  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 75   java.util.Arrays::copyOfRange (63 bytes)   callee is too large
    895   23       3       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                              @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
<writer thread='139812892006144'/>
    897   24     n 0       sun.misc.Unsafe::getObjectVolatile (native)   
<writer thread='139812461811456'/>
    920   25       3       sun.nio.cs.UTF_8$Decoder::decode (779 bytes)
                              @ 12   java.lang.Math::min (11 bytes)
                              @ 117   sun.nio.cs.UTF_8$Decoder::isNotContinuation (17 bytes)
                              @ 124   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 143   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 147   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 182   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 201   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 205   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 251   sun.nio.cs.UTF_8$Decoder::isMalformed3 (45 bytes)   callee is too large
                              @ 258   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 277   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 281   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 292   sun.nio.cs.UTF_8$Decoder::getByteBuffer (17 bytes)
                                @ 5   java.nio.ByteBuffer::wrap (8 bytes)
               !                  @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                    @ 7   java.nio.HeapByteBuffer::&lt;init&gt; (14 bytes)
                                      @ 10   java.nio.ByteBuffer::&lt;init&gt; (45 bytes)   callee is too large
                                    @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 11   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 301   sun.nio.cs.UTF_8$Decoder::malformedN (192 bytes)   callee is too large
                              @ 304   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 334   java.lang.Character::isSurrogate (18 bytes)
                              @ 341   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 360   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 364   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 385   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 407   sun.nio.cs.UTF_8$Decoder::isMalformed3_2 (34 bytes)
                              @ 421   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 425   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 440   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 444   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 523   sun.nio.cs.UTF_8$Decoder::isMalformed4 (39 bytes)   callee is too large
                              @ 531   java.lang.Character::isSupplementaryCodePoint (18 bytes)
                              @ 601   java.lang.Character::highSurrogate (9 bytes)
                              @ 614   java.lang.Character::lowSurrogate (10 bytes)
        
<writer thread='139812462864128'/>
    942   26       4       java.lang.String::charAt (29 bytes)
    945    5       3       java.lang.String::charAt (29 bytes)   made not entrant
<writer thread='139812461811456'/>
                      @ 538   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 557   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 561   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 572   sun.nio.cs.UTF_8$Decoder::getByteBuffer (17 bytes)
                                @ 5   java.nio.ByteBuffer::wrap (8 bytes)
               !                  @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                    @ 7   java.nio.HeapByteBuffer::&lt;init&gt; (14 bytes)
                                      @ 10   java.nio.ByteBuffer::&lt;init&gt; (45 bytes)   callee is too large
                                    @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 11   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 581   sun.nio.cs.UTF_8$Decoder::malformedN (192 bytes)   callee is too large
                              @ 584   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 622   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 664   sun.nio.cs.UTF_8$Decoder::isMalformed4_2 (56 bytes)   callee is too large
                              @ 701   sun.nio.cs.UTF_8$Decoder::isMalformed4_3 (17 bytes)
                              @ 715   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 719   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 734   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 738   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 678   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 682   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 746   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 765   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 769   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812892006144'/>
   1075   29     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLL)L (native)   (static)
   1097   30     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (native)   (static)
   1117   34     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)L (native)   (static)
<writer thread='139812461811456'/>
   1158   27       1       java.lang.Object::&lt;init&gt; (1 bytes)
   1159    4       3       java.lang.Object::&lt;init&gt; (1 bytes)   made not entrant
   1159   28       3       java.lang.Number::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1160   32       1       java.lang.reflect.Method::getName (5 bytes)
   1161   33       1       java.lang.ref.Reference::get (5 bytes)
   1162   31       1       java.lang.Class::getClassLoader0 (5 bytes)
   1164   35       3       java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812892006144'/>
   1167   36     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)V (native)   (static)
   1170   37     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)J (native)   (static)
<writer thread='139812461811456'/>
   1171   38       3       java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1174   39       1       java.lang.String::length (6 bytes)
   1175    3       3       java.lang.String::length (6 bytes)   made not entrant
<writer thread='139812892006144'/>
   1177   40     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)L (native)   (static)
   1177   41     n 0       java.lang.Object::hashCode (native)   
<writer thread='139812461811456'/>
   1178   42       3       java.util.Arrays::copyOf (19 bytes)
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   1181   43       3       java.lang.String::replace (127 bytes)
                              @ 121   java.lang.String::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1188   44       1       java.lang.Enum::ordinal (5 bytes)
<writer thread='139812892006144'/>
   1190   45     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LLL)L (native)   (static)
<writer thread='139812461811456'/>
   1191   46       3       java.lang.StringBuilder::toString (17 bytes)
                              @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   1193   47       3       java.lang.invoke.MemberName::testFlags (16 bytes)
   1196   48       3       java.lang.AbstractStringBuilder::newCapacity (39 bytes)
                              @ 31   java.lang.AbstractStringBuilder::hugeCapacity (28 bytes)
                                @ 11   java.lang.OutOfMemoryError::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   1206   49       3       java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1208   50       3       java.lang.AbstractStringBuilder::append (29 bytes)
                              @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
<writer thread='139812892006144'/>
   1210   52     n 0       java.lang.Class::isPrimitive (native)   
<writer thread='139812461811456'/>
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   1216   51       3       java.lang.Class::getName (21 bytes)
                              @ 11   java.lang.Class::getName0 (0 bytes)   native method
   1221   53       3       java.lang.Class::getClassLoader (28 bytes)
                              @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 11   java.lang.System::getSecurityManager (4 bytes)
                              @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)
                                @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                  @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                  @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
   1241   56       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 15   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 41   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 83   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 125   jdk.internal.org.objectweb.asm.ByteVector::encodeUTF8 (335 bytes)   callee is too large
   1256   59       3       jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)
                              @ 33   jdk.internal.org.objectweb.asm.Item::isEqualTo (354 bytes)   callee is too large
   1271   58       3       jdk.internal.org.objectweb.asm.Item::set (143 bytes)
                              @ 104   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 108   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 90   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 123   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 127   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 133   java.lang.String::hashCode (55 bytes)   callee is too large
   1278   60       3       jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
   1286   65       1       java.util.ArrayList::access$000 (5 bytes)
   1287   57       1       java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode (5 bytes)
   1288   64       1       java.util.ArrayList::size (5 bytes)
   1288   61       1       java.util.SubList::access$000 (5 bytes)
<writer thread='139812463916800'/>
   1289   66       4       java.lang.String::indexOf (70 bytes)
<writer thread='139812892006144'/>
   1295   68     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)V (native)   (static)
<writer thread='139812463916800'/>
   1296    6       3       java.lang.String::indexOf (70 bytes)   made not entrant
<writer thread='139812461811456'/>
   1297   67       3       java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                              @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
   1299   55       1       java.lang.invoke.MemberName::getDeclaringClass (5 bytes)
   1299   54       1       java.lang.invoke.MethodType::returnType (5 bytes)
   1300   62       1       java.util.AbstractList$ListItr::nextIndex (5 bytes)
   1300   63       1       java.util.SubList::access$200 (5 bytes)
   1306   69       3       jdk.internal.org.objectweb.asm.ClassWriter::newUTF8 (70 bytes)
                              @ 8   jdk.internal.org.objectweb.asm.Item::set (143 bytes)   callee is too large
                              @ 16   jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)   callee is too large
                              @ 29   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 33   jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)   callee is too large
                              @ 56   jdk.internal.org.objectweb.asm.Item::&lt;init&gt; (66 bytes)   callee is too large
                              @ 62   jdk.internal.org.objectweb.asm.ClassWriter::put (152 bytes)   callee is too large
<writer thread='139812892006144'/>
   1310   72     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)L (native)   (static)
<writer thread='139812461811456'/>
   1311   71       3       java.lang.invoke.MethodType::hashCode (53 bytes)
                              @ 6   java.lang.Object::hashCode (0 bytes)   native method
                              @ 40   java.lang.Object::hashCode (0 bytes)   native method
   1321   70       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
<writer thread='139812892006144'/>
   1324   73     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)L (native)   
<writer thread='139812461811456'/>
   1324   74       3       java.lang.invoke.MethodType::checkSlotCount (33 bytes)
                              @ 13   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 18   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 22   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 28   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139812892006144'/>
   1330   75     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)L (native)   (static)
<writer thread='139812461811456'/>
   1334   77       3       java.lang.String::indexOf (166 bytes)
   1341   78       3       java.lang.invoke.MemberName::isInvocable (7 bytes)
                              @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
<writer thread='139812892006144'/>
   1342   79     n 0       java.lang.invoke.MethodHandle::linkToStatic(L)L (native)   (static)
<writer thread='139812461811456'/>
   1343   76       3       java.lang.invoke.MemberName::testAllFlags (7 bytes)
                              @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
   1345   80       3       jdk.internal.org.objectweb.asm.Item::&lt;init&gt; (66 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812892006144'/>
   1345   82     n 0       java.lang.invoke.MethodHandle::invokeBasic()L (native)   
<writer thread='139812461811456'/>
   1346   81       3       jdk.internal.org.objectweb.asm.ClassWriter::put (152 bytes)
<writer thread='139812892006144'/>
   1346   84     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)L (native)   (static)
   1352   88     n 0       java.lang.invoke.MethodHandle::invokeBasic(LL)L (native)   
   1353   89     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)L (native)   (static)
<writer thread='139812461811456'/>
   1355   85       3       jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
   1356   86       3       java.util.Objects::requireNonNull (14 bytes)
<writer thread='139812892006144'/>
   1356   92     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLL)L (native)   
<writer thread='139812461811456'/>
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='139812892006144'/>
   1357   94     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLL)L (native)   (static)
<writer thread='139812461811456'/>
   1358   90       3       java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812892006144'/>
   1360   97     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)L (native)   (static)
<writer thread='139812461811456'/>
   1360   95       3       java.lang.StringBuilder::append (8 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                     
<writer thread='139812892006144'/>
   1361   99     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLL)L (native)   
<writer thread='139812461811456'/>
             @ 20   java.util.Arrays::copyOf (19 bytes)
<writer thread='139812892006144'/>
   1362  100     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLL)L (native)   (static)
<writer thread='139812461811456'/>
                                    @ 11   java.lang.Math::min (11 bytes)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='139812463916800'/>
   1363  103       4       java.lang.String::hashCode (55 bytes)
<writer thread='139812461811456'/>
   1366  101       3       java.lang.String::lastIndexOf (13 bytes)
                              @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
   1368   93   !   3       java.lang.ref.ReferenceQueue::poll (28 bytes)
                              @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
<writer thread='139812463916800'/>
<writer thread='139812461811456'/>
   1371   91       1       java.lang.invoke.LambdaForm$Name::index (5 bytes)
   1371   96       1       sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
   1372   98       1       java.lang.invoke.LambdaForm$Name::type (5 bytes)
   1372   83       1       java.lang.invoke.MethodType::form (5 bytes)
   1373   87       1       java.lang.invoke.MethodType::ptypes (5 bytes)
   1373  104       1       java.lang.invoke.LambdaForm$BasicType::basicTypeChar (5 bytes)
<writer thread='139812463916800'/>
   1374    1       3       java.lang.String::hashCode (55 bytes)   made not entrant
<writer thread='139812461811456'/>
   1374  105       1       java.lang.invoke.LambdaForm$BasicType::access$100 (5 bytes)
<writer thread='139812892006144'/>
   1374  107     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLL)L (native)   (static)
<writer thread='139812461811456'/>
   1375  102       1       java.lang.invoke.LambdaForm$Name::access$000 (5 bytes)
   1375  109   !   3       java.lang.invoke.MemberName::getMethodType (208 bytes)
<writer thread='139812892006144'/>
   1376  110     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLL)L (native)   
<writer thread='139812461811456'/>
                              @ 8  
<writer thread='139812892006144'/>
   1376  111     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLL)L (native)   (static)
<writer thread='139812461811456'/>
 java.lang.invoke.MemberName::expandFromVM (21 bytes)
                                @ 9   java.lang.invoke.MemberName::isResolved (13 bytes)
                                @ 17   java.lang.invoke.MethodHandleNatives::expand (0 bytes)   native method
                              @ 21   java.lang.invoke.MemberName::isInvocable (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 29   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 74   java.lang.invoke.MemberName::getClassLoader (8 bytes)
                                @ 4   java.lang.Class::getClassLoader (28 bytes)
                                  @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 11   java.lang.System::getSecurityManager (4 bytes)
                                  @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)   callee is too large
                              @ 77   java.lang.invoke.MethodType::fromMethodDescriptorString (97 bytes)   callee is too large
<writer thread='139812892006144'/>
   1388  116     n 0       sun.misc.Unsafe::putObjectVolatile (native)   
<writer thread='139812461811456'/>
                              @ 131   java.lang.invoke.MethodType::methodType (7 bytes)
                                @ 3   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
   1415  108       3       java.lang.Object::equals (11 bytes)
   1416  112       3       java.lang.String::substring (79 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 44  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 75   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   1421  115       3       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                              @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
   1424  113       3       java.lang.reflect.Modifier::isStatic (13 bytes)
   1425  114       3       java.lang.invoke.MemberName::isStatic (8 bytes)
                              @ 4   java.lang.reflect.Modifier::isStatic (13 bytes)
<writer thread='139812892006144'/>
   1426  117     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLL)L (native)   
<writer thread='139812461811456'/>
   1427  106       1       java.lang.invoke.LambdaForm$BasicType::basicTypeClass (5 bytes)
<writer thread='139812892006144'/>
   1433  118     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLL)L (native)   (static)
   1434  119     n 0       java.lang.Class::isArray (native)   
<writer thread='139812461811456'/>
   1438  120       3       java.lang.invoke.LambdaForm$BasicType::basicType (19 bytes)
                              @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 12   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 15   java.lang.invoke.LambdaForm$BasicType::basicType (10 bytes)
                                @ 1   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
                                @ 6   java.lang.invoke.LambdaForm$BasicType::basicType (172 bytes)   callee is too large
   1441  121   !   3       java.util.AbstractList$Itr::next (45 bytes)
                              @ 1   java.util.AbstractList$Itr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 14   java.util.AbstractList::get (0 bytes)   no static binding
                              @ 34   java.util.AbstractList$Itr::checkForComodification (23 bytes)
<writer thread='139812892006144'/>
   1445  124     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLL)L (native)   (static)
   1448  125     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLL)L (native)   
   1449  127     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLL)L (native)   (static)
<writer thread='139812461811456'/>
                                @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 41  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
   1457  122       3       java.lang.invoke.MethodType::parameterType (7 bytes)
   1458  126       3       java.lang.invoke.MethodType::checkPtype (19 bytes)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 14   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   1460  123       3       jdk.internal.org.objectweb.asm.ByteVector::put12 (64 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
<writer thread='139812892006144'/>
   1469  133     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLL)L (native)   (static)
   1470  134     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLL)L (native)   
   1471  135     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLL)L (native)   (static)
   1473  136     n 0       java.lang.Object::getClass (native)   
<writer thread='139812461811456'/>
   1479  131       3       java.lang.String::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1480  130       3       java.lang.invoke.MemberName::isConstructor (7 bytes)
                              @ 3   java.lang.invoke.MemberName::testAllFlags (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
   1481  128       3       java.lang.invoke.MethodTypeForm::canonicalize (233 bytes)
                              @ 10   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 53   sun.invoke.util.Wrapper::asPrimitiveType (20 bytes)
                                @ 1   sun.invoke.util.Wrapper::findWrapperType (25 bytes)
                                  @ 4   sun.invoke.util.Wrapper::hashWrap (62 bytes)   callee is too large
                                @ 10   sun.invoke.util.Wrapper::primitiveType (5 bytes)
                                @ 14   sun.invoke.util.Wrapper::forceType (165 bytes)   callee is too large
                              @ 149   sun.invoke.util.Wrapper::asWrapperType (18 bytes)
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                                @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                                @ 12   sun.invoke.util.Wrapper::wrapperType (52 bytes)   callee is too large
<writer thread='139812892006144'/>
   1501  137     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLL)L (native)   (static)
   1504  139     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLL)L (native)   
   1504  140     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLL)L (native)   (static)
   1507  143     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLL)L (native)   (static)
   1508  144     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLL)L (native)   
   1509  145     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLL)L (native)   (static)
<writer thread='139812461811456'/>
   1513  141       3       jdk.internal.org.objectweb.asm.Type::getType (269 bytes)
                              @ 249   jdk.internal.org.objectweb.asm.Type::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 214   jdk.internal.org.objectweb.asm.Type::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 265   jdk.internal.org.objectweb.asm.Type::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812892006144'/>
   1520  150     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLLL)L (native)   (static)
   1522  151     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLLLL)L (native)   (static)
<writer thread='139812461811456'/>
   1526  148       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)
               !m             @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 17   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
   1529  147       3       java.lang.invoke.MemberName::getMethodOrFieldType (72 bytes)
                              @ 1   java.lang.invoke.MemberName::isInvocable (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
<writer thread='139812892006144'/>
   1536  153     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)V (native)   (static)
   1537  154     n 0       java.lang.Object::clone (native)   
   1537  155     n 0       java.lang.invoke.MethodHandle::linkToStatic(ILL)I (native)   (static)
<writer thread='139812462864128'/>
   1546  156       4       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)
<writer thread='139812461811456'/>
               !m             @ 8   java.lang.invoke.MemberName::getMethodType (208 bytes)   callee is too large
                              @ 13   java.lang.invoke.MemberName::isGetter (8 bytes)
                                @ 1   java.lang.invoke.MemberName::getReferenceKind (12 bytes)
                                @ 4   java.lang.invoke.MethodHandleNatives::refKindIsGetter (32 bytes)   callee is too large
               !m             @ 20   java.lang.invoke.MemberName::getFieldType (177 bytes)   callee is too large
                              @ 23   java.lang.invoke.MethodType::methodType (9 bytes)
                                @ 5   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
                              @ 28   java.lang.invoke.MemberName::isSetter (8 bytes)
                                @ 1   java.lang.invoke.MemberName::getReferenceKind (12 bytes)
                                @ 4   java.lang.invoke.MethodHandleNatives::refKindIsSetter (20 bytes)
                                  @ 1   java.lang.invoke.MethodHandleNatives::refKindIsField (32 bytes)   callee is too large
                                  @ 8   java.lang.invoke.MethodHandleNatives::refKindIsGetter (32 bytes)   callee is too large
               !m             @ 38   java.lang.invoke.MemberName::getFieldType (177 bytes)   callee is too large
                              @ 41   java.lang.invoke.MethodType::methodType (14 bytes)
                                @ 10   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
                              @ 53   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 58   java.lang.StringBuilder::append (8 bytes)
<writer thread='139812462864128'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 41   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   executed &lt; MinInliningThreshold times
                              @ 83   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139812461811456'/>
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 62   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.invoke.MemberName::toString (160 bytes)   callee is too large
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 65   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 68  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812892006144'/>
   1581  157     n 0       java.lang.invoke.MethodHandle::linkToStatic(ILLL)L (native)   (static)
<writer thread='139812462864128'/>
   1587   56       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)   made not entrant
<writer thread='139812892006144'/>
   1589  159     n 0       java.lang.invoke.MethodHandle::invokeBasic(ILL)L (native)   
   1590  160     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LILLL)L (native)   (static)
<writer thread='139812461811456'/>
   1613  146       3       jdk.internal.org.objectweb.asm.Frame::execute (2252 bytes)
                              @ 822   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 955   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 979   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 964   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 970   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 988   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 994   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1006   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1010   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1022   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1026   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1038   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1042   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1054   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1058   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 831   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 840   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 846   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 855   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 864   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 870   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1067   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1070   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1112   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1118   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1146   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1150   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1161   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1078   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1084   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1246   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1250   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1259   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1268   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1279   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1329   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1304   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1168   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1177   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1188   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1238   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1213   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1345   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1337   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1368   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1376   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1382   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1389   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1395   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1403   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1409   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1415   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1422   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1428   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1434   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1442   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1448   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1454   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1460   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1467   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1473   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1481   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1487   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1493   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1499   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1506   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1512   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1518   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1526   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1532   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1538   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1544   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1550   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1557   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1563   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1569   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1575   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1583   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1589   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1595   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1601   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1607   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1613   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1620   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1626   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1634   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1640   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1696   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1702   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1708   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1716   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1722   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1728   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1662   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1668   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1674   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1738   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1766   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1772   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1126   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1132   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1138   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1746   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1752   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1758   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1780   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1786   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1792   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1092   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1098   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1104   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1682   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1688   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1648   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1654   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1814   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1820   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1832   java.lang.RuntimeException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 1361   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1843   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1855   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1863   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1873   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1885   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1889   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1902   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1913   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1931   java.lang.String::charAt (29 bytes)
<writer thread='139812463916800'/>
   1665  164       4       java.lang.String::equals (81 bytes)
<writer thread='139812461811456'/>
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812463916800'/>
<writer thread='139812461811456'/>
                              @ 1942   jdk.internal.org.objectweb.asm.Frame::init (77 bytes)   callee is too large
                              @ 1952   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1964   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1974   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1990   jdk.internal.org.objectweb.asm.ClassWriter::addUninitializedType (71 bytes)   callee is too large
                              @ 1994   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2001   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2051   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2060   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2096   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2105   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2069   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2078   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2087   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2114   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2128   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2135   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 2149   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                
<writer thread='139812463916800'/>
   1684    2       3       java.lang.String::equals (81 bytes)   made not entrant
<writer thread='139812461811456'/>
@ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 2154   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 2159   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 2162   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 2165   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2177   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 2181   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2195   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2202   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 2214   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2226   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 2230   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1800   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1806   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1353   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 2238   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 2248   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
<writer thread='139812462864128'/>
   1880  174       4       java.lang.String::replace (127 bytes)
                              @ 121   java.lang.String::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
<writer thread='139812463916800'/>
   1960  183       4       java.lang.String::lastIndexOf (52 bytes)
                              @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
   1967   18       3       java.lang.String::lastIndexOf (52 bytes)   made not entrant
<writer thread='139812462864128'/>
   1970   43       3       java.lang.String::replace (127 bytes)   made not entrant
<writer thread='139812463916800'/>
   2012  186       4       java.lang.String::indexOf (166 bytes)
   2058   77       3       java.lang.String::indexOf (166 bytes)   made not entrant
<writer thread='139812461811456'/>
   2113  178       3       java.util.HashMap::getNode (148 bytes)
                              @ 59   java.lang.Object::equals (11 bytes)   no static binding
                              @ 94   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   not inlineable
                              @ 126   java.lang.Object::equals (11 bytes)   no static binding
   2119  184       1       java.lang.reflect.Field::getName (5 bytes)
   2119  181       3       java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)
                              @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
   2121  182  s    3       java.io.ByteArrayOutputStream::write (32 bytes)
                              @ 7   java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)
                                @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
   2123  191       3       sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                              @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   2125  192       3       sun.reflect.ByteVectorImpl::add (38 bytes)
                              @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   callee is too large
   2126  180       3       java.io.DataOutputStream::incCount (20 bytes)
   2127  175       1       java.lang.Short::shortValue (5 bytes)
   2127  152       3       jdk.internal.org.objectweb.asm.Item::isEqualTo (354 bytes)
                              @ 234   java.lang.String::equals (81 bytes)   callee is too large
                              @ 248   java.lang.String::equals (81 bytes)   callee is too large
                              @ 280   java.lang.String::equals (81 bytes)   callee is too large
                              @ 294   java.lang.String::equals (81 bytes)   callee is too large
                              @ 156   java.lang.String::equals (81 bytes)   callee is too large
                              @ 214   java.lang.String::equals (81 bytes)   callee is too large
                              @ 314   java.lang.String::equals (81 bytes)   callee is too large
                              @ 328   java.lang.String::equals (81 bytes)   callee is too large
                              @ 342   java.lang.String::equals (81 bytes)   callee is too large
   2138  177       3       java.util.HashMap::hash (20 bytes)
                              @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
   2140  179       3       java.util.HashMap::get (23 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
   2144  166       1       java.net.URL::getProtocol (5 bytes)
   2146  158       3       jdk.internal.org.objectweb.asm.Frame::push (110 bytes)
                              @ 38   java.lang.Math::max (11 bytes)
                              @ 52   java.lang.System::arraycopy (0 bytes)   intrinsic
   2152  167       1       java.net.URL::getHost (5 bytes)
   2153  142  s    3       java.lang.StringBuffer::append (13 bytes)
                              @ 7   java.lang.AbstractStringBuilder::append (29 bytes)
                                @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                  @ 20   java.util.Arrays::copyOf (19 bytes)
                                    @ 11   java.lang.Math::min (11 bytes)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   2160  194       3       java.lang.String::startsWith (7 bytes)
                              @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
   2162  168       1       java.net.URL::getPath (5 bytes)
   2162  169       1       java.net.URL::getAuthority (5 bytes)
   2163  171       1       java.net.URL::getRef (5 bytes)
   2164  170       1       java.net.URL::getFile (5 bytes)
   2165  172       1       java.net.URL::getQuery (5 bytes)
   2165  173       1       java.net.URL::getPort (5 bytes)
   2166  195       3       sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                              @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   2170  196       3       java.lang.String::indexOf (25 bytes)
                              @ 21   java.lang.String::indexOf (166 bytes)   callee is too large
   2172  190       1       java.security.ProtectionDomain::getCodeSource (5 bytes)
   2173  129       3       java.lang.invoke.MemberName::getInvocationType (56 bytes)
                              @ 1   java.lang.invoke.MemberName::getMethodOrFieldType (72 bytes)   callee is too large
                              @ 6   java.lang.invoke.MemberName::isConstructor (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testAllFlags (7 bytes)
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 13   java.lang.invoke.MemberName::getReferenceKind (12 bytes)
                              @ 26   java.lang.invoke.MethodType::changeReturnType (20 bytes)
             
<writer thread='139812463916800'/>
   2182  204       4       sun.reflect.ByteVectorImpl::add (38 bytes)
<writer thread='139812462864128'/>
   2183  203       4       sun.reflect.ClassFileAssembler::emitByte (11 bytes)
<writer thread='139812461811456'/>
                   @ 1   java.lang.invoke.MethodType::returnType (5 bytes)
                                @ 16   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
                              @ 31   java.lang.invoke.MemberName::isStatic (8 bytes)
<writer thread='139812463916800'/>
                              @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
<writer thread='139812461811456'/>
                                @ 4   java.lang.reflect.Modifier::isStatic (13 bytes)
                              @ 50   java.lang.invoke.MethodType::insertParameterTypes (106 bytes)   callee is too large
<writer thread='139812463916800'/>
   2186  192       3       sun.reflect.ByteVectorImpl::add (38 bytes)   made not entrant
<writer thread='139812462864128'/>
                              @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                               \-&gt; TypeProfile (5193/5193 counts) = sun/reflect/ByteVectorImpl
                                @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
   2189  191       3       sun.reflect.ClassFileAssembler::emitByte (11 bytes)   made not entrant
<writer thread='139812461811456'/>
   2202  200       1       java.io.ObjectStreamField::getName (5 bytes)
   2203  202       3       java.lang.ref.SoftReference::get (29 bytes)
                              @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
   2205  198       3       java.util.ArrayList::elementData (7 bytes)
   2207  197       3       java.util.ArrayList::rangeCheck (22 bytes)
                              @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)
                                @ 4   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 25   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 28   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   2232  205       3       sun.reflect.ClassFileAssembler::cpi (22 bytes)
                              @ 13   java.lang.RuntimeException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   2251  207       3       sun.reflect.UTF8::utf8Length (81 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   2255  206       3       sun.reflect.ByteVectorImpl::getLength (7 bytes)
   2255  208       3       java.util.ArrayList::ensureCapacityInternal (13 bytes)
                              @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                @ 10   java.lang.Math::max (11 bytes)
                              @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
   2266  216       1       java.lang.System::getSecurityManager (4 bytes)
   2266   16       3       java.lang.System::getSecurityManager (4 bytes)   made not entrant
   2266  213   !   3       sun.reflect.UTF8::encode (191 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   callee is too large
                              @ 26   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 185  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   2272  214       3       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)
               !              @ 1   sun.reflect.UTF8::encode (191 bytes)   callee is too large
                              @ 7   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 14   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 29   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   2277  212       3       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)
                              @ 14   java.lang.Math::min (11 bytes)
                              @ 139   java.lang.Character::isSurrogate (18 bytes)
                              @ 157  sun/nio/cs/Surrogate$Parser::&lt;init&gt; (not loaded)   not inlineable
                              @ 175  sun/nio/cs/Surrogate$Parser::parse (not loaded)   not inlineable
                              @ 186   java.nio.charset.CharsetEncoder::malformedInputAction (5 bytes)
<writer thread='139812892006144'/>
   2282  174       4       java.lang.String::replace (127 bytes)   made not entrant
<writer thread='139812461811456'/>
   2303  222       1       java.lang.CharacterDataLatin1::getProperties (11 bytes)
   2303   12       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)   made not entrant
   2303  221       3       java.lang.CharacterDataLatin1::toLowerCase (39 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
   2305  220       3       java.lang.Character::toLowerCase (9 bytes)
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
   2306  215       3       sun.reflect.ByteVectorImpl::get (26 bytes)
                              @ 11   sun.reflect.ByteVectorImpl::resize (44 bytes)   callee is too large
<writer thread='139812892006144'/>
   2307  186       4       java.lang.String::indexOf (166 bytes)   made not entrant
<writer thread='139812461811456'/>
   2312  224       3       java.lang.String::indexOf (166 bytes)
   2317  209       3       java.util.ArrayList::calculateCapacity (16 bytes)
                              @ 10   java.lang.Math::max (11 bytes)
   2318  217       3       java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                              @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   2320  218       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
   2321  223       1       java.lang.ThreadLocal::access$400 (5 bytes)
   2321  201       1       java.io.ObjectStreamField::getField (5 bytes)
   2322  185       1       sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
   2323  211       1       java.lang.reflect.Field::getModifiers (5 bytes)
   2323  219       1       java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
   2324  210       1       java.lang.reflect.Field::getType (5 bytes)
   2325  226       3       java.util.HashMap::putVal (300 bytes)
                              @ 20   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 56   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 91   java.lang.Object::equals (11 bytes)   no static binding
                              @ 123   java.util.HashMap$TreeNode::putTreeVal (314 bytes)   not inlineable
                              @ 152   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 169   java.util.HashMap::treeifyBin (110 bytes)   callee is too large
                              @ 203   java.lang.Object::equals (11 bytes)   no static binding
                              @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   no static binding
                              @ 288   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 295   java.util.HashMap::afterNodeInsertion (1 bytes)   no static binding
<writer thread='139812892006144'/>
   2337  229     n 0       java.lang.String::intern (native)   
<writer thread='139812461811456'/>
   2346  227       3       java.util.HashMap::put (13 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
   2348  231       3       java.lang.String::substring (56 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 30  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 52   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   2352  228       3       java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2354  230       3       java.lang.String::indexOf (7 bytes)
                              @ 3   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   callee is too large
   2355  225       3       java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)
   2356  232       3       java.lang.Character::toUpperCaseEx (30 bytes)
                              @ 22   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 26   java.lang.CharacterData::toUpperCaseEx (6 bytes)   no static binding
   2358  233       3       java.lang.CharacterDataLatin1::toUpperCaseEx (71 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
<writer thread='139812463916800'/>
   2359  237       4       java.lang.CharacterData::of (120 bytes)
   2361   11       3       java.lang.CharacterData::of (120 bytes)   made not entrant
<writer thread='139812461811456'/>
   2362  236       3       java.lang.String::toLowerCase (439 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 49   java.lang.String::codePointAt (36 bytes)   callee is too large
                              @ 58   java.lang.Character::toLowerCase (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 70   java.lang.Character::charCount (12 bytes)
                              @ 82   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 116   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 120   java.util.Locale::getLanguage (8 bytes)
                                @ 4   sun.util.locale.BaseLocale::getLanguage (5 bytes)
                              @ 190   java.lang.String::codePointAt (36 bytes)   callee is too large
                              @ 197   java.lang.Character::charCount (12 bytes)
                              @ 243   java.lang.Character::toLowerCase (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 233  java/lang/ConditionalSpecialCasing::toLowerCaseEx (not loaded)   not inlineable
                              @ 271  java/lang/ConditionalSpecialCasing::toLowerCaseCharArray (not loaded)   not inlineable
                              @ 296   java.lang.Character::toChars (37 bytes)   callee is too large
                              @ 310   java.lang.Character::toChars (43 bytes)   callee is too large
                              @ 351   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 435   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
<writer thread='139812892006144'/>
   2411  245     n 0       sun.misc.Unsafe::compareAndSwapObject (native)   
<writer thread='139812461811456'/>
   2416  243       3       java.lang.String::replace (127 bytes)
                              @ 121   java.lang.String::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2421  244       3       java.lang.String::endsWith (17 bytes)
                              @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
   2426  247  s!   3       sun.misc.URLClassPath::getLoader (243 bytes)
                              @ 13   java.util.ArrayList::size (5 bytes)
                              @ 33   java.util.Stack::empty (13 bytes)
              s                 @ 1   java.util.Vector::size (5 bytes)
              s               @ 47   java.util.Stack::pop (19 bytes)
              s                 @ 1   java.util.Vector::size (5 bytes)
              s                 @ 6   java.util.Stack::peek (25 bytes)
              s                   @ 1   java.util.Vector::size (5 bytes)
                                  @ 13  java/util/EmptyStackException::&lt;init&gt; (not loaded)   not inlineable
              s                   @ 21   java.util.Vector::elementAt (48 bytes)   callee is too large
<writer thread='139812892006144'/>
   2428  250     n 0       java.lang.Class::isInterface (native)   
<writer thread='139812461811456'/>
              s                 @ 14   java.util.Vector::removeElementAt (115 bytes)   callee is too large
                              @ 67   sun.net.util.URLUtil::urlNoFragString (114 bytes)   callee is too large
                              @ 76   java.util.HashMap::containsKey (18 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
               !              @ 87   sun.misc.URLClassPath::getLoader (29 bytes)
                                @ 6   sun.misc.URLClassPath$3::&lt;init&gt; (15 bytes)
                                  @ 11   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 22  java/security/PrivilegedActionException::getException (not loaded)   not inlineable
                              @ 94   sun.misc.URLClassPath$Loader::getClassPath (2 bytes)   no static binding
               !m             @ 107   sun.misc.URLClassPath::push (46 bytes)   callee is too large
                              @ 169   java.util.ArrayList::size (5 bytes)
              s               @ 173   sun.misc.URLClassPath::validateLookupCache (80 bytes)   callee is too large
                              @ 182   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 193   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 236   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
   2481  251       1       sun.reflect.ByteVectorImpl::getLength (7 bytes)
   2482  206       3       sun.reflect.ByteVectorImpl::getLength (7 bytes)   made not entrant
   2482  246  s    3       sun.misc.URLClassPath::getNextLoader (88 bytes)
                              @ 26   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
              s!m             @ 84   sun.misc.URLClassPath::getLoader (243 bytes)   callee is too large
   2486  238       3       java.lang.Character::toLowerCase (6 bytes)
                              @ 1   java.lang.Character::toLowerCase (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
   2487  241       3       java.util.ArrayList::get (11 bytes)
                              @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 7   java.util.ArrayList::elementData (7 bytes)
   2490  252       3       java.io.ObjectStreamField::isPrimitive (27 bytes)
                              @ 5   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   2492  255       3       java.util.ArrayList::add (29 bytes)
<writer thread='139812462864128'/>
   2492  257       4       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='139812461811456'/>
                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
<writer thread='139812462864128'/>
                              @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   2495  254       1       java.io.ObjectStreamField::getOffset (5 bytes)
   2496  253       1       java.io.ObjectStreamField::isUnshared (5 bytes)
   2496  248       3       java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2497  256       1       java.io.ObjectStreamField::getSignature (5 bytes)
   2498  240       3       java.util.Arrays::copyOf (19 bytes)
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   2502  249       1       sun.reflect.ClassFileAssembler::getStack (5 bytes)
<writer thread='139812462864128'/>
   2503    9       3       java.util.Arrays::copyOfRange (63 bytes)   made not entrant
<writer thread='139812892006144'/>
   2503  261     n 0       sun.reflect.Reflection::getCallerClass (native)   (static)
<writer thread='139812461811456'/>
   2506  258       3       java.lang.String::compareTo (78 bytes)
                              @ 14   java.lang.Math::min (11 bytes)
   2508  259       3       java.io.ObjectStreamField::getTypeCode (9 bytes)
                              @ 5   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   2509  260       3       java.io.ObjectStreamField::setOffset (6 bytes)
   2510  263       3       sun.reflect.AccessorGenerator::sub (5 bytes)
   2510  265       3       java.util.HashMap::newNode (13 bytes)
                              @ 9   java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2511  266       3       java.util.HashMap::afterNodeInsertion (1 bytes)
<writer thread='139812463916800'/>
   2513  267       4       java.lang.AbstractStringBuilder::append (50 bytes)
                              @ 10   java.lang.String::length (6 bytes)   inline (hot)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                  @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   2531  264       3       java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2533  262       3       java.lang.reflect.AccessibleObject::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812462864128'/>
   2534  268       4       java.lang.String::getChars (62 bytes)
<writer thread='139812461811456'/>
   2539  234       1       java.util.LinkedHashMap::removeEldestEntry (2 bytes)
<writer thread='139812462864128'/>
                              @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   2544  269   !   3       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)
                              @ 17   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)
<writer thread='139812892006144'/>
   2545  275     n 0       java.lang.Class::getSuperclass (native)   
<writer thread='139812461811456'/>
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 121   java.util.concurrent.ConcurrentHashMap::helpTransfer (132 bytes)   callee is too large
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 192   java.lang.Object::equals (11 bytes)   no static binding
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 282  java/util/concurrent/ConcurrentHashMap$TreeBin::putTreeVal (not loaded)   not inlineable
               !m             @ 339   java.util.concurrent.ConcurrentHashMap::treeifyBin (164 bytes)   callee is too large
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   callee is too large
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   callee is too large
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
<writer thread='139812462864128'/>
   2556   10       3       java.lang.String::getChars (62 bytes)   made not entrant
<writer thread='139812463916800'/>
   2569   20       3       java.lang.AbstractStringBuilder::append (50 bytes)   made not entrant
<writer thread='139812462864128'/>
   2572  283       4       java.lang.String::&lt;init&gt; (82 bytes)
<writer thread='139812463916800'/>
   2572  284       4       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                              @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                              @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   2576  278       3       java.io.ObjectInputStream$PeekInputStream::readFully (48 bytes)
<writer thread='139812462864128'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
                              @ 19   java.io.ObjectInputStream$PeekInputStream::read (115 bytes)   callee is too large
                              @ 33  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812463916800'/>
   2583   15       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   made not entrant
   2586  285       4       java.lang.StringBuilder::append (8 bytes)
<writer thread='139812461811456'/>
   2597  279  s    3       java.io.BufferedInputStream::read (113 bytes)
                              @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
<writer thread='139812463916800'/>
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                    @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 26  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 49   java.io.BufferedInputStream::read1 (108 bytes)   callee is too large
                              @ 101   java.io.InputStream::available (2 bytes)   no static binding
   2603  276       3       java.lang.Class::reflectionData (49 bytes)
                              @ 21   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 45   java.lang.Class::newReflectionData (74 bytes)   callee is too large
   2606  277       3       java.lang.Class::checkInitted (19 bytes)
<writer thread='139812462864128'/>
   2606   22       3       java.lang.String::&lt;init&gt; (82 bytes)   made not entrant
<writer thread='139812461811456'/>
                              @ 11   java.lang.Class$3::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
   2608  274       3       sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                              @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
   2609  271       3       sun.reflect.ClassFileAssembler::emitConstantPoolClass (23 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
<writer thread='139812462864128'/>
   2611  287       4       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)
<writer thread='139812463916800'/>
   2615   21       3       java.lang.StringBuilder::append (8 bytes)   made not entrant
<writer thread='139812892006144'/>
   2626  288     n 0       java.lang.Class::isAssignableFrom (native)   
<writer thread='139812461811456'/>
   2626  286       3       sun.reflect.ClassFileAssembler::setStack (25 bytes)
   2626  280       3       java.io.BufferedInputStream::read1 (108 bytes)
                              @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
               !              @ 39   java.io.InputStream::read (109 bytes)   no static binding
                              @ 44   java.io.BufferedInputStream::fill (233 bytes)   callee is too large
<writer thread='139812463916800'/>
   2628  290       4       sun.reflect.ClassFileAssembler::emitShort (24 bytes)
<writer thread='139812461811456'/>
                              @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 91   java.lang.System::arraycopy (0 bytes)   intrinsic
   2632  281       3       java.io.ObjectInputStream$PeekInputStream::read (115 bytes)
               !              @ 20   java.io.InputStream::read (109 bytes)   no static binding
               !              @ 75   java.io.InputStream::read (109 bytes)   no static binding
   2635  289  s    3       java.io.BufferedInputStream::read (49 bytes)
                              @ 12   java.io.BufferedInputStream::fill (233 bytes)   callee is too large
                              @ 29   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   2640  282       3       java.lang.AbstractStringBuilder::append (40 bytes)
                              @ 11   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 25   java.lang.System::arraycopy (0 bytes)   intrinsic
   2644  296       3       sun.reflect.ClassFileAssembler::emitConstantPoolMethodref (28 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 13   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::
<writer thread='139812892006144'/>
   2646  298     n 0       java.lang.Throwable::fillInStackTrace (native)   
<writer thread='139812463916800'/>
                              @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (26462/26462 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (26462/26462 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
   2655  195       3       sun.reflect.ClassFileAssembler::emitShort (24 bytes)   made not entrant
   2656  294       4       sun.reflect.UTF8::utf8Length (81 bytes)
<writer thread='139812461811456'/>
emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   2661  299       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 73   java.lang.Object::equals (11 bytes)   no static binding
                              @ 93   java.util.concurrent.ConcurrentHashMap$Node::find (52 bytes)   no static binding
                              @ 149   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='139812463916800'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139812461811456'/>
   2667  292       3       java.io.ObjectInputStream$BlockDataInputStream::readByte (20 bytes)
                              @ 1   java.io.ObjectInputStream$BlockDataInputStream::read (62 bytes)   callee is too large
                              @ 13  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
   2669  293       3       java.io.ObjectInputStream$PeekInputStream::read (47 bytes)
                              @ 23   java.io.InputStream::read (0 bytes)   no static binding
   2670  297  s    3       java.lang.Throwable::fillInStackTrace (29 bytes)
                              @ 16   java.lang.Throwable::fillInStackTrace (0 bytes)   native method
   2672  302       3       java.lang.ClassLoader::checkName (43 bytes)
                              @ 5   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 23   sun.misc.VM::allowArraySyntax (4 bytes)
                              @ 31   java.lang.String::charAt (29 bytes)
<writer thread='139812463916800'/>
   2683  207       3       sun.reflect.UTF8::utf8Length (81 bytes)   made not entrant
   2683  295   !   4       sun.reflect.UTF8::encode (191 bytes)
<writer thread='139812461811456'/>
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   2688  303       3       sun.misc.VM::allowArraySyntax (4 bytes)
   2689  291       3       java.lang.Long::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2690  272       3       java.util.ArrayList$Itr::next (66 bytes)
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 14   java.util.ArrayList::access$000 (5 bytes)
                              @ 24  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
                              @ 46  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
   2698  273       3       java.util.ArrayList$Itr::checkForComodification (23 bytes)
                              @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
   2699  270       1       java.lang.reflect.Constructor::getModifiers (5 bytes)
   2699  300       1       java.io.ObjectInputStream$BlockDataInputStream::getBlockDataMode (5 bytes)
   2700  301       1       java.io.ObjectStreamClass$WeakClassKey::hashCode (5 bytes)
<writer thread='139812462864128'/>
               !              @ 1   sun.reflect.UTF8::encode (191 bytes)   inline (hot)
                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   inline (hot)
                                  @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
                                @ 26   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 7   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (25216/25216 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 14   sun.reflect.ClassFileAssembler::emitShort (24 bytes)   inline (hot)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                   \-&gt; TypeProfile (25216/25216 counts) = sun/reflect/ByteVectorImpl
                                    @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                   \-&gt; TypeProfile (25216/25216 counts) = sun/reflect/ByteVectorImpl
                                    @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 29   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (25216/25216 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
<writer thread='139812892006144'/>
   2706  304     n 0       java.lang.System::nanoTime (native)   (static)
<writer thread='139812463916800'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   inline (hot)
                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 26   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139812461811456'/>
   2717  305       3       sun.misc.MetaIndex::mayContain (51 bytes)
                              @ 10   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 35   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
   2729  306       3       sun.net.www.ParseUtil::encodePath (336 bytes)
<writer thread='139812463916800'/>
   2730  213   !   3       sun.reflect.UTF8::encode (191 bytes)   made not entrant
<writer thread='139812461811456'/>
                              @ 1   java.lang.String::length (6 bytes)
                              @ 15   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 21   java.lang.String::length (6 bytes)
                              @ 142   java.util.BitSet::get (69 bytes)   callee is too large
                              @ 152   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 193   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 212   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 230   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 252   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 270   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 313   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 332   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   2741  307       1       java.net.URLStreamHandler::getDefaultPort (2 bytes)
<writer thread='139812462864128'/>
   2743  214       3       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)   made not entrant
<writer thread='139812463916800'/>
   2746  308       4       java.lang.String::startsWith (72 bytes)
<writer thread='139812461811456'/>
   2748  309       3       java.lang.String::regionMatches (149 bytes)
                              @ 107   java.lang.Character::toUpperCase (6 bytes)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 114   java.lang.Character::toUpperCase (6 bytes)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 131   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 136   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
<writer thread='139812463916800'/>
<writer thread='139812461811456'/>
   2757  311       3       java.util.zip.ZStreamRef::address (5 bytes)
<writer thread='139812463916800'/>
   2761   19       3       java.lang.String::startsWith (72 bytes)   made not entrant
<writer thread='139812461811456'/>
   2774  318   !   3       sun.misc.URLClassPath$JarLoader::getResource (85 bytes)
                              @ 12   sun.misc.MetaIndex::mayContain (51 bytes)   callee is too large
               !              @ 21   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                              @ 33  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 42   java.util.jar.JarFile::getJarEntry (9 bytes)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)
               !m                 @ 2   java.util.zip.ZipFile::getEntry (101 bytes)   callee is too large
                                  @ 16   java.util.jar.JarFile$JarFileEntry::&lt;init&gt; (11 bytes)
                                    @ 7   java.util.jar.JarEntry::&lt;init&gt; (6 bytes)
                                      @ 2   java.util.zip.ZipEntry::&lt;init&gt; (146 bytes)   callee is too large
               !              @ 54   sun.misc.URLClassPath$JarLoader::checkResource (55 bytes)   callee is too large
                              @ 71   java.util.HashSet::&lt;init&gt; (16 bytes)
                                @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.HashMap::&lt;init&gt; (11 bytes)
                                  @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !              @ 81   sun.misc.URLClassPath$JarLoader::getResource (353 bytes)   callee is too large
   2791  317       3       java.lang.CharacterDataLatin1::toUpperCase (53 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
   2793  315       3       java.util.BitSet::wordIndex (5 bytes)
   2798  310       3       java.util.zip.Inflater::ensureOpen (47 bytes)
                              @ 28   java.util.zip.ZStreamRef::address (5 bytes)
                              @ 42   java.lang.NullPointerException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   2800  314       1       java.util.zip.ZipFile::access$000 (5 bytes)
   2801  316       1       java.net.URL::getUserInfo (5 bytes)
   2801  312       1       java.net.URLClassLoader::access$000 (5 bytes)
   2807  320       3       java.io.UnixFileSystem::normalize (75 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 19   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 44   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
                              @ 69   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
   2813  313       1       java.util.zip.ZipCoder::isUTF8 (5 bytes)
   2814  319       1       java.security.CodeSource::getLocation (5 bytes)
<writer thread='139812892006144'/>
   2816  322     n 0       java.lang.Thread::currentThread (native)   (static)
<writer thread='139812461811456'/>
   2818  325   !   3       java.net.URL::&lt;init&gt; (543 bytes)
<writer thread='139812892006144'/>
   2820  327     n 0       sun.misc.Unsafe::compareAndSwapLong (native)   
<writer thread='139812461811456'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 33   java.lang.System::getSecurityManager (4 bytes)
                              @ 46   java.net.URL::checkSpecifyHandler (8 bytes)
                                @ 4   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 50   java.lang.String::length (6 bytes)
                              @ 65   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 89   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 111   java.lang.String::regionMatches (149 bytes)   callee is too large
                              @ 123   java.lang.String::length (6 bytes)
                              @ 132   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 162   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 185   java.lang.String::substring (79 bytes)   callee is too large
                              @ 188   java.lang.String::toLowerCase (8 bytes)
                                @ 1   java.util.Locale::getDefault (4 bytes)
                                @ 4   java.lang.String::toLowerCase (439 bytes)   callee is too large
<writer thread='139812462864128'/>
   2828  332 %     4       java.lang.String::indexOf @ 69 (166 bytes)
<writer thread='139812461811456'/>
                              @ 196   java.net.URL::isValidProtocol (78 bytes)   callee is too large
                              @ 242   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 270   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 358   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 363   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 368   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 371   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 374   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
               !m             @ 386   java.net.URL::getURLStreamHandler (313 bytes)   callee is too large
                              @ 402   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812462864128'/>
<writer thread='139812461811456'/>
                              @ 407   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 414   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 417   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 420   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
                              @ 434   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 452   java.lang.String::substring (79 bytes)   callee is too large
                              @ 504   java.net.URLStreamHandler::parseURL (1193 bytes)   no static binding
                              @ 523   java.lang.Throwable::getMessage (5 bytes)
                              @ 526   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
              s               @ 535   java.lang.Throwable::initCause (64 bytes)   no static binding
<writer thread='139812463916800'/>
   2871  335       4       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                              @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
   2873  115       3       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   made not entrant
   2873  337       4       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                              @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
   2875   23       3       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   made not entrant
   2876  338 %     4       java.lang.String::indexOf @ 53 (166 bytes)
<writer thread='139812461811456'/>
   2948  328       3       java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)
                              @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   intrinsic
                              @ 58  java/util/concurrent/ThreadLocalRandom::getProbe (not loaded)   not inlineable
                              @ 91   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   intrinsic
                              @ 115   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
                              @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)
                                @ 1   java.lang.Integer::numberOfLeadingZeros (76 bytes)   callee is too large
                              @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
               !m             @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   callee is too large
                              @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
               !m             @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   callee is too large
                              @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
               !              @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (487 bytes)   callee is too large
   2964  330       3       java.nio.Buffer::checkIndex (22 bytes)
<writer thread='139812462864128'/>
   2964  339       4       java.lang.String::indexOf (166 bytes)
<writer thread='139812461811456'/>
                              @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   2966  331       3       java.nio.DirectLongBufferU::ix (10 bytes)
   2967  336       3       java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                              @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
   2968  333       3       java.lang.String::toCharArray (25 bytes)
                              @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
   2969  323       3       java.lang.String::equalsIgnoreCase (48 bytes)
                              @ 36   java.lang.String::regionMatches (149 bytes)   callee is too large
   2970  324       3       java.net.URL::&lt;init&gt; (8 bytes)
               !              @ 4   java.net.URL::&lt;init&gt; (543 bytes)   callee is too large
   2971  326       3       java.net.URLStreamHandler::setURL (40 bytes)
                              @ 14  java/lang/SecurityException::&lt;init&gt; (not loaded)   not inlineable
                              @ 20   java.net.URL::getProtocol (5 bytes)
               !m             @ 36   java.net.URL::set (114 bytes)   callee is too large
<writer thread='139812462864128'/>
<writer thread='139812461811456'/>
   2973  321       3       java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2974  334       1       sun.misc.URLClassPath$JarLoader::access$700 (5 bytes)
   2974  329       1       java.lang.StringCoding$StringEncoder::requestedCharsetName (5 bytes)
   2986  340       3       java.io.InputStream::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2987  341       3       java.util.WeakHashMap::maskNull (12 bytes)
   2988  342       3       java.util.WeakHashMap::hash (28 bytes)
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
   2989  343       3       java.util.WeakHashMap::getTable (9 bytes)
               !m             @ 1   java.util.WeakHashMap::expungeStaleEntries (139 bytes)   callee is too large
   2990  344   !   3       java.util.WeakHashMap::expungeStaleEntries (139 bytes)
<writer thread='139812892006144'/>
   2990  346     n 0       java.security.AccessController::doPrivileged (native)   (static)
<writer thread='139812461811456'/>
               !m             @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 33   java.util.WeakHashMap::indexFor (6 bytes)
<writer thread='139812462864128'/>
   2999  224       3       java.lang.String::indexOf (166 bytes)   made not entrant
<writer thread='139812461811456'/>
   3013  350  s    3       java.lang.StringBuffer::append (13 bytes)
<writer thread='139812892006144'/>
   3018  352     n 0       sun.misc.Unsafe::putLong (native)   
<writer thread='139812461811456'/>
                              @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
   3020  353  s    3       sun.misc.PerfCounter::add (18 bytes)
              s               @ 1   sun.misc.PerfCounter::get (9 bytes)
<writer thread='139812463916800'/>
   3020  356 %     4       sun.nio.cs.UTF_8$Encoder::encode @ 20 (359 bytes)
<writer thread='139812461811456'/>
                                @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                              @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
   3022  354  s    3       sun.misc.PerfCounter::get (9 bytes)
                              @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
   3023  355       3       java.nio.DirectLongBufferU::get (16 bytes)
                              @ 6   java.nio.Buffer::checkIndex (22 bytes)   intrinsic
                              @ 9   java.nio.DirectLongBufferU::ix (10 bytes)
                              @ 12   sun.misc.Unsafe::getLong (0 bytes)   intrinsic
   3024  347       3       java.lang.String::concat (47 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 24   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='139812463916800'/>
<writer thread='139812461811456'/>
                              @ 33   java.lang.String::getChars (16 bytes)
                                @ 12   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 43   java.lang.String::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   3058  362       3       java.lang.Math::max (11 bytes)
   3059  359       3       java.lang.ThreadLocal::getMap (5 bytes)
   3060  360       3       java.lang.ThreadLocal::get (38 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 6   java.lang.ThreadLocal::getMap (5 bytes)   no static binding
                              @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)
                                @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   callee is too large
                              @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   callee is too large
   3063  361       3       java.util.BitSet::get (69 bytes)
                              @ 12   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 17   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 21   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 24   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 27  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 32   java.util.BitSet::checkInvariants (111 bytes)   callee is too large
                              @ 36   java.util.BitSet::wordIndex (5 bytes)
   3076  358       3       java.net.URLStreamHandler::parseURL (1193 bytes)
                              @ 1   java.net.URL::getProtocol (5 bytes)
                              @ 7   java.net.URL::getAuthority (5 bytes)
                              @ 13   java.net.URL::getUserInfo (5 bytes)
                              @ 19   java.net.URL::getHost (5 bytes)
                              @ 25   java.net.URL::getPort (5 bytes)
                              @ 31   java.net.URL::getPath (5 bytes)
                              @ 37   java.net.URL::getQuery (5 bytes)
                              @ 43   java.net.URL::getRef (5 bytes)
                              @ 63   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 101   java.lang.String::substring (79 bytes)   callee is too large
                              @ 121   java.lang.String::substring (79 bytes)   callee is too large
                              @ 138   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 150   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 162   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 174   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 204   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 216   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 231   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 252   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 277   java.lang.String::substring (79 bytes)   callee is too large
                              @ 289   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 306   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 326   java.lang.String::substring (79 bytes)   callee is too large
                              @ 337   java.lang.String::substring (56 bytes)   callee is too large
                              @ 355   java.lang.String::length (6 bytes)
                              @ 364   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 376   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 397   java.lang.String::substring (79 bytes)   callee is too large
                              @ 407   java.lang.String::substring (79 bytes)   callee is too large
                              @ 410   sun.net.util.IPAddressUtil::isIPv6LiteralAddress (13 bytes)
                                @ 1   sun.net.util.IPAddressUtil::textToNumericFormatV6 (500 bytes)   callee is too large
                              @ 424   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 429   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 434   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 437   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 440   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 449   java.lang.String::length (6 bytes)
                              @ 465   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 478   java.lang.String::length (6 bytes)
                              @ 494   java.lang.String::substring (56 bytes)   callee is too large
                              @ 497   java.lang.Integer::parseInt (7 bytes)
                                @ 3   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 513   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='139812463916800'/>
   3107  367       4       java.lang.Math::min (11 bytes)
<writer thread='139812461811456'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 518   java.lang.StringBuilder::append (8 bytes)
<writer thread='139812463916800'/>
<writer thread='139812461811456'/>
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 523   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 526   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 529   java.lang.IllegalArgumentException::&lt;init&gt;
<writer thread='139812463916800'/>
   3108    7       3       java.lang.Math::min (11 bytes)   made not entrant
<writer thread='139812461811456'/>
 (6 bytes)   don&apos;t inline Throwable constructors
                              @ 544   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 549   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 554   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 557   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 560   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 568   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 583   java.lang.String::length (6 bytes)
                              @ 599   java.lang.String::substring (56 bytes)   callee is too large
                              @ 602   java.lang.Integer::parseInt (7 bytes)
                                @ 3   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 612   java.lang.String::substring (79 bytes)   callee is too large
                              @ 638   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 643   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 648   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 651   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 654   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 668   java.lang.String::length (6 bytes)
                              @ 695   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 707   java.lang.String::substring (79 bytes)   callee is too large
                              @ 722   java.lang.String::length (6 bytes)
                              @ 735   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 763   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 773   java.lang.String::substring (79 bytes)   callee is too large
                              @ 776   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 781   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 788   java.lang.String::substring (79 bytes)   callee is too large
                              @ 791   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 794   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 820   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 825   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 832   java.lang.String::substring (79 bytes)   callee is too large
                              @ 835   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 838   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 860   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 877   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 885   java.lang.String::substring (79 bytes)   callee is too large
                              @ 888   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 893   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 896   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 919   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 932   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
<writer thread='139812462864128'/>
   3134  371       4       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)
                              @ 14   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139812461811456'/>
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 940   java.lang.String::substring (79 bytes)   callee is too large
                              @ 943   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 952   java.lang.String::substring (56 bytes)   callee is too large
                              @ 955   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 958   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 975   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 997   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 1012   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1022   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 1030   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1033   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1042   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1045   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1048   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 1072   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1082   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1095   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 1111   java.lang.String::substring (79 bytes)   callee is too large
<writer thread='139812462864128'/>
   3150  212       3       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   made not entrant
<writer thread='139812461811456'/>
                              @ 1123   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1131   java.lang.String::length (6 bytes)
                              @ 1141   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1150   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1161   java.lang.String::length (6 bytes)
                              @ 1166   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1189   java.net.URLStreamHandler::setURL (40 bytes)   callee is too large
<writer thread='139812892006144'/>
   3272  381     n 0       java.lang.System::identityHashCode (native)   (static)
<writer thread='139811587356416'/>
   3498  401     n 0       sun.misc.Unsafe::compareAndSwapInt (native)   
<writer thread='139812892006144'/>
   3570  404     n 0       sun.misc.Unsafe::getObject (native)   
<writer thread='139812461811456'/>
   3644  386       2       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)
                              @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   native method
   3646  364       2       java.lang.Class::searchFields (41 bytes)
                              @ 1   java.lang.String::intern (0 bytes)   native method
                              @ 16   java.lang.reflect.Field::getName (5 bytes)
                              @ 23   java.lang.Class::getReflectionFactory (26 bytes)
<writer thread='139812462864128'/>
   3648  422       4       java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)
<writer thread='139812463916800'/>
   3653  423       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)
<writer thread='139812461811456'/>
                                @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 29   sun.reflect.ReflectionFactory::copyField (10 bytes)
                                @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                  @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                                @ 4   java.lang.reflect.ReflectAccess::copyField (5 bytes)
                                  @ 1   java.lang.reflect.Field::copy (76 bytes)   callee is too large
   3665  370       2       java.io.ObjectStreamClass::requireInitialized (18 bytes)
                              @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812462864128'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812463916800'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   3729  388       2       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                              @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   3732  387       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                              @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   3736  389       3       java.io.Bits::putInt (36 bytes)
   3737  391       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)
                              @ 21   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 42   java.io.DataOutputStream::writeInt (65 bytes)   callee is too large
   3739  390  s    3       java.io.BufferedOutputStream::write (67 bytes)
                              @ 10   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 39   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 53   java.lang.System::arraycopy (0 bytes)   intrinsic
   3743  385       2       java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                              @ 1   java.lang.System::identityHashCode (0 bytes)   native method
   3748  426   !   3       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)
                              @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 15   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 25   java.lang.ClassCastException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
        
<writer thread='139812462864128'/>
   3758  436       4       java.io.ObjectStreamClass::requireInitialized (18 bytes)
   3760  370       2       java.io.ObjectStreamClass::requireInitialized (18 bytes)   made not entrant
<writer thread='139812461811456'/>
                        @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                  @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
        
<writer thread='139812463916800'/>
   3763  437       4       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)
<writer thread='139812461811456'/>
                      @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)
                              @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   callee is too large
                              @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   callee is too large
                              @ 90   java.io.ObjectStreamClass::getFields (22 bytes)
                              @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)
                              @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   callee is too large
                              @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)
               !              @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
<writer thread='139812463916800'/>
                              @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
<writer thread='139812892006144'/>
   3809  439     n 0       java.lang.Class::isInstance (native)   
<writer thread='139812463916800'/>
   3811  386       2       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   made not entrant
<writer thread='139812892006144'/>
   3825  444     n 0       sun.misc.Unsafe::getBoolean (native)   
<writer thread='139812461811456'/>
   3835  429       3       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 187   sun.misc.Unsafe::getByte (0 bytes)   intrinsic
                              @ 203   sun.misc.Unsafe::getChar (0 bytes)   intrinsic
                              @ 206   java.io.Bits::putChar (16 bytes)
<writer thread='139812462864128'/>
   3843  446       4       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
<writer thread='139812461811456'/>
                              @ 293   sun.misc.Unsafe::getDouble (0 bytes)   intrinsic
                              @ 296   java.io.Bits::putDouble (10 bytes)
                                @ 3   java.lang.Double::doubleToLongBits (33 bytes)   callee is too large
<writer thread='139812462864128'/>
                              @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                 @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                 \-&gt; TypeProfile (2486/2486 counts) = java/io/BufferedOutputStream
                                  @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
                                @ 6   java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 257   sun.misc.Unsafe::getFloat (0 bytes)   intrinsic
                              @ 260   java.io.Bits::putFloat (10 bytes)
                                @ 3   java.lang.Float::floatToIntBits (26 bytes)
                                  @ 1   java.lang.Float::floatToRawIntBits (0 bytes)   intrinsic
                                @ 6   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 239   sun.misc.Unsafe::getInt (0 bytes)   intrinsic
                              @ 242   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 275   sun.misc.Unsafe::getLong (0 bytes)   intrinsic
                              @ 278   java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 221   sun.misc.Unsafe::getShort (0 bytes)   intrinsic
                              @ 224   java.io.Bits::putShort (16 bytes)
                              @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   intrinsic
                              @ 172   java.io.Bits::putBoolean (14 bytes)
                              @ 306  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812463916800'/>
   3854  447       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
   3856  387       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   made not entrant
<writer thread='139812462864128'/>
   3859  388       2       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   made not entrant
   3866  450       4       java.io.Bits::putInt (36 bytes)
   3872  389       3       java.io.Bits::putInt (36 bytes)   made not entrant
<writer thread='139812461811456'/>
   3877  432       3       java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 77   sun.misc.Unsafe::getObject (0 bytes)   intrinsic
                              @ 88  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812463916800'/>
   3884  452  s    4       java.io.BufferedOutputStream::write (67 bytes)
<writer thread='139812461811456'/>
   3886  392   !   3       java.io.ObjectOutputStream::writeObject0 (619 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)
<writer thread='139812463916800'/>
                              @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   3892  390  s    3       java.io.BufferedOutputStream::write (67 bytes)   made not entrant
<writer thread='139812462864128'/>
   3894  453       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)
                              @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
<writer thread='139812461811456'/>
   callee is too large
                              @ 24   java.io.ObjectOutputStream$ReplaceTable::lookup (24 bytes)
                                @ 5   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
<writer thread='139812462864128'/>
   3899  391       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   made not entrant
<writer thread='139812461811456'/>
                              @ 33   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 51   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 65   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 78   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 114   java.io.ObjectOutputStream::writeClass (37 bytes)   callee is too large
                              @ 132   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 150   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 168   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 177   java.lang.Object::getClass (0 bytes)   intrinsic
               !              @ 185   java.io.ObjectStreamClass::lookup (335 bytes)   callee is too large
                              @ 192   java.io.ObjectStreamClass::hasWriteReplaceMethod (17 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
               !              @ 201   java.io.ObjectStreamClass::invokeWriteReplace (73 bytes)   callee is too large
                              @ 210   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 240   java.io.ObjectOutputStream::replaceObject (2 bytes)
                              @ 287   java.io.ObjectOutputStream$ReplaceTable::assign (33 bytes)
                                @ 5   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                                @ 19   java.io.ObjectOutputStream$ReplaceTable::grow (34 bytes)   callee is too large
                              @ 295   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 313   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 327   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 340   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 358   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 376   java.io.ObjectOutputStream::writeClass (37 bytes)   callee is too large
                              @ 394   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 412   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 430   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 448   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
                              @ 456   java.lang.Class::isArray (0 bytes)   native method
               !              @ 467   java.io.ObjectOutputStream::writeArray (611 bytes)   callee is too large
                              @ 488   java.io.ObjectOutputStream::writeEnum (63 bytes)   callee is too large
               !              @ 506   java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   callee is too large
                              @ 587   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 565   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 568  java/io/NotSerializableException::&lt;init&gt; (not loaded)   not inlineable
                              @ 611   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
<writer thread='139812463916800'/>
   4034  462       4       java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                              @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
   4036  385       2       java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   made not entrant
   4053  464       4       java.lang.ref.SoftReference::get (29 bytes)
                              @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
   4056  202       3       java.lang.ref.SoftReference::get (29 bytes)   made not entrant
   4147  465   !   4       java.lang.ref.ReferenceQueue::poll (28 bytes)
   4149   93   !   3       java.lang.ref.ReferenceQueue::poll (28 bytes)   made not entrant
<writer thread='139812461811456'/>
   4164  463   !   3       java.io.ObjectOutputStream::writeSerialData (221 bytes)
                              @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)
                                @ 9   java.io.ObjectStreamClass::getClassDataLayout0 (296 bytes)   callee is too large
                              @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 15   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
               !              @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   callee is too large
                              @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)
                              @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)
               !              @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   callee is too large
<writer thread='139811587356416'/>
   4218  469     n 0       java.lang.Thread::isInterrupted (native)   
<writer thread='139812463916800'/>
   4221  470   !   4       java.io.ObjectOutputStream::writeObject0 (619 bytes)
<writer thread='139812461811456'/>
   4238  393       2       java.io.ObjectOutputStream$ReplaceTable::lookup (24 bytes)
                              @ 5   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
   4241  394       2       java.io.ObjectOutputStream::writeHandle (21 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
   4254  395       2       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
   4261  400       2       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)
                              @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   callee is too large
                              @ 36   java.io.OutputStream::write (79 bytes)   no static binding
   4262  441       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)
                              @ 22   java.io.Bits::putShort (16 bytes)
                              @ 43   java.io.DataOutputStream::writeShort (35 bytes)
                                @ 12   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 26   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 31   java.io.DataOutputStream::incCount (20 bytes)
   4265  442       3       java.io.Bits::putShort (16 bytes)
<writer thread='139812462864128'/>
   4265  471       4       java.io.ObjectStreamField::isPrimitive (27 bytes)
                              @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
   4268  252       3       java.io.ObjectStreamField::isPrimitive (27 bytes)   made not entrant
   4279  472       4       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
                              @ 1   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
   4295  299       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)   made not entrant
<writer thread='139812461811456'/>
   4297  445       3       java.io.Bits::putBoolean (14 bytes)
   4298  403       2       java.io.ObjectStreamClass::forClass (52 bytes)
                              @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 13   java.lang.System::getSecurityManager (4 bytes)
                              @ 19   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 24   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 31   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 34   sun.reflect.misc.ReflectUtil::needsPackageAccessCheck (31 bytes)
                                @ 19   sun.reflect.misc.ReflectUtil::isAncestor (20 bytes)
                                  @ 3   java.lang.ClassLoader::getParent (32 bytes)   callee is too large
                              @ 44   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 4   sun.reflect.misc.ReflectUtil::checkPackageAccess (77 bytes)   callee is too large
                                @ 8   sun.reflect.misc.ReflectUtil::isNonPublicProxyClass (51 bytes)   callee is too large
                                @ 15   sun.reflect.misc.ReflectUtil::checkProxyPackageAccess (50 bytes)   callee is too large
<writer thread='139812462864128'/>
   4330  474   !   4       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)
<writer thread='139812461811456'/>
   4414  406       2       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
   4415  402       2       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)
                              @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   native method
   4417  382       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
   4417  438       2       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)
                              @ 13   java.io.ObjectOutputStream$HandleTable::growEntries (58 bytes)   callee is too large
                              @ 28   java.io.ObjectOutputStream$HandleTable::growSpine (67 bytes)   callee is too large
                              @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   callee is too large
   4429  434       2       java.io.ObjectStreamClass::getFields (22 bytes)
                              @ 8   java.lang.Object::clone (0 bytes)   no static binding
   4430  425       2       java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   4449  427       2       java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
   4497  479       1       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
   4497  395       2       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   made not entrant
   4497  428       2       java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)
                              @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   callee is too large
   4498  430       2       java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)
                              @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 23   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 42   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 68   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   callee is too large
                              @ 80   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 107   java.lang.Math::min (11 bytes)
                              @ 124   java.lang.System::arraycopy (0 bytes)   intrinsic
   4535  431       2       java.io.ObjectStreamClass::getObjFieldValues (10 bytes)
                              @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   callee is too large
   4536  433       2       java.io.ObjectOutputStream::writeClassDesc (60 bytes)
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 47   java.io.ObjectOutputStream::writeProxyDesc (136 bytes)   callee is too large
                              @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   callee is too large
   4540  451       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
<writer thread='139812462864128'/>
                              @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 15   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                              @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)   accessor
                              @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   inline (hot)
                                  @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                                  @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                                  @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                                  @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                                  @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                  @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                                  @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                                  @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                                  @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                                  @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                                  @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                    @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                    @ 6   java.io.Bits::putLong (86 bytes)   too big
                                  @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                                  @ 206   java.io.Bits::putChar (16 bytes)   never executed
                                  @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                              @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   inline (hot)
                                @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4848/4848 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                 @ 23   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                 \-&gt; TypeProfile (5124/5124 counts) = java/io/BufferedOutputStream
                                  @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 90   java.io.ObjectStreamClass::getFields (22 bytes)   inline (hot)
                              @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)   accessor
                              @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   inline (hot)
                                  @ 77   sun.misc.Unsafe::getObject (0 bytes)   (intrinsic)
                              @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)   accessor
               !              @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
<writer thread='139812461811456'/>
   4540  424       2       java.io.ObjectStreamClass::processQueue (21 bytes)
               !m             @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 11   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
   4574  487       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
   4574  406       2       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   made not entrant
   4574  443       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)
                              @ 12  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
                              @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   callee is too large
                              @ 24   java.lang.String::length (6 bytes)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   callee is too large
                              @ 42   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTFBody (386 bytes)   callee is too large
   4586  435   !   2       java.io.ObjectStreamClass::lookup (335 bytes)
                              @ 7   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 15   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
                              @ 21   java.io.ObjectStreamClass::processQueue (21 bytes)
               !m               @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                                @ 11   java.util.concurrent.ConcurrentHashMap::remove (8 bytes)
               !m                 @ 4   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 29   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
                              @ 32   java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)
                                @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   java.lang.System::identityHashCode (0 bytes)   native method
                              @ 40   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   callee is too large
                              @ 57   java.lang.ref.Reference::get (5 bytes)   no static binding
                              @ 75   java.io.ObjectStreamClass$EntryFuture::&lt;init&gt; (5 bytes)
                                @ 1   java.io.ObjectStreamClass$EntryFuture::&lt;init&gt; (19 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 5   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 86   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 100   java.util.concurrent.ConcurrentHashMap::remove (32 bytes)
               !m               @ 20   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 112   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 126   java.lang.ref.Reference::get (5 bytes)   no static binding
                              @ 180   java.io.ObjectStreamClass$EntryFuture::getOwner (5 bytes)
                              @ 183   java.lang.Thread::currentThread (0 bytes)   intrinsic
              s!              @ 197   java.io.ObjectStreamClass$EntryFuture::get (46 bytes)   callee is too large
               !              @ 212   java.io.ObjectStreamClass::&lt;init&gt; (260 bytes)   callee is too large
              s               @ 230   java.io.ObjectStreamClass$EntryFuture::set (23 bytes)
                                @ 18   java.lang.Object::notifyAll (0 bytes)   native method
                              @ 246   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 249   java.util.concurrent.ConcurrentHashMap::put (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
              s!              @ 260   java.io.ObjectStreamClass$EntryFuture::get (46 bytes)   callee is too large
                              @ 315   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 320   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 325   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 328   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 331  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139811587356416'/>
   4641  495     n 0       sun.misc.Unsafe::getIntVolatile (native)   
<writer thread='139812461811456'/>
   4675  440       2       java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)
                              @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 8   java.lang.System::identityHashCode (0 bytes)   native method
   4694  504       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   4701  451       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   made not entrant
   4702  448       2       java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)
                              @ 15   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 28   java.lang.ref.Reference::get (5 bytes)   intrinsic
   4704  449       2       java.io.ObjectStreamClass::hasWriteReplaceMethod (17 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   4721  384       1       java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
   4723  383       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
   4723  459       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   4731  454       2       java.io.ObjectOutputStream::writeByte (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   4736  455       2       java.io.ObjectOutputStream::writeUTF (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
   4749  456       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                              @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                              @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
   4752  457       2       java.io.ObjectStreamClass::isExternalizable (9 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   4757  458       2       java.io.ObjectStreamClass::getClassDataLayout (20 bytes)
<writer thread='139812462864128'/>
   4762  426   !   3       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   made not entrant
   4763  475       4       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)
<writer thread='139812461811456'/>
                              @ 9   java.io.ObjectStreamClass::getClassDataLayout0 (296 bytes)   callee is too large
   4765  460   !   2       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)
                              @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                                @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                  @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
                              @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 117   java.io.ObjectStreamClass::isProxy (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
               !              @ 128   java.io.ObjectOutputStream::writeExternalData (137 bytes)   callee is too large
               !              @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   callee is too large
   4799  461       2       java.io.ObjectStreamClass::checkSerialize (20 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
   4811  467       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryRelease (8 bytes)   no static binding
                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
   4824  468       3       java.lang.Thread::interrupted (8 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
<writer thread='139812462864128'/>
                              @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                              @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                              @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                              @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                              @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                              @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                              @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                              @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                              @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                              @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                              @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                @ 6   java.io.Bits::putLong (86 bytes)   too big
                              @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                              @ 206   java.io.Bits::putChar (16 bytes)   never executed
                              @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
                              @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
   4831  473       3       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 7   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
                              @ 21   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   4840  466       3       java.util.ArrayList$Itr::hasNext (20 bytes)
                              @ 8   java.util.ArrayList::access$000 (5 bytes)
   4845  478       3       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   callee is too large
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
   4855  476       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   4858  491       3       java.io.Bits::putLong (86 bytes)
   4863  477       3       java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
<writer thread='139812463916800'/>
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4619/4619 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 24   java.io.ObjectOutputStream$ReplaceTable::lookup (24 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                  @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 33   java.io.ObjectOutputStream::writeNull (10 bytes)   executed &lt; MinInliningThreshold times
                              @ 51   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                              @ 65   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 78   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                  @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4619/4619 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 177   java.lang.Object::getClass (0 bytes)   (intrinsic)
               !              @ 185   java.io.ObjectStreamClass::lookup (335 bytes)   hot method too big
                              @ 192   java.io.ObjectStreamClass::hasWriteReplaceMethod (17 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 448   java.io.ObjectOutputStream::writeString (74 bytes)   inline (hot)
                                @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   too big
                                @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   already compiled into a medium method
                                @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   too big
                                @ 61   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 70   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongUTF (29 bytes)   never executed
                              @ 456   java.lang.Class::isArray (0 bytes)   (intrinsic)
               !              @ 467   java.io.ObjectOutputStream::writeArray (611 bytes)   hot method too big
                              @ 488   java.io.ObjectOutputStream::writeEnum (63 bytes)   too big
               !              @ 506   java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   inline (hot)
                                @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                    @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                      @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                  @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                    @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                      @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                                  @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                  @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   inline (hot)
                                    @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 22   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   too big
                                    @ 36   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                    @ 44   java.io.ObjectOutputStream::writeClassDescriptor (6 bytes)   inline (hot)
                                      @ 2   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                    @ 48   java.io.ObjectStreamClass::forClass (52 bytes)   too big
                                    @ 57   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                    @ 66   java.io.ObjectOutputStream::isCustomSubclass (21 bytes)   inline (hot)
                                      @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 4   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                        @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                        @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                      @ 9   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                        @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                        @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                    @ 73   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)   never executed
                                    @ 78   java.io.ObjectOutputStream::annotateClass (1 bytes)   inline (hot)
                                    @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                    @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 101   java.io.ObjectStreamClass::getSuperDesc (9 bytes)   inline (hot)
                                      @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                    @ 105   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   too big
                                @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                  @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                    @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                      @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
               !                @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)   inline (hot)
                                  @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                  @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                    @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
               !                  @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   too big
                                  @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                  @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
                                  @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
               !                  @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                      @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                      @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                    @ 15   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                                    @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)   inline (hot)
                                      @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                    @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)   accessor
                                    @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)   inline (hot)
                                      @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   inline (hot)
                                        @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                                        @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                                        @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                                        @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                                        @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                        @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                                        @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                        @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                                        @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                                        @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                                        @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                                        @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                          @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                          @ 6   java.io.Bits::putLong (86 bytes)   too big
                                        @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                                        @ 206   java.io.Bits::putChar (16 bytes)   never executed
                                        @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                    @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   inline (hot)
                                      @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                        @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                         @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                         \-&gt; TypeProfile (4619/4619 counts) = java/io/BufferedOutputStream
                                          @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                       @ 23   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                       \-&gt; TypeProfile (5335/5335 counts) = java/io/BufferedOutputStream
                                        @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 90   java.io.ObjectStreamClass::getFields (22 bytes)   inline (hot)
                                    @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)   accessor
                                    @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)   inline (hot)
                                      @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   inline (hot)
                                        @ 77   sun.misc.Unsafe::getObject (0 bytes)   (intrinsic)
                                    @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)   accessor
               !                    @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
                              @ 587   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4619/4619 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 611   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
<writer thread='139812461811456'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   4873  481       3       java.util.Arrays::copyOf (46 bytes)
                              @ 17   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 21   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 38   java.lang.Math::min (11 bytes)
                              @ 41   java.lang.System::arraycopy (0 bytes)   intrinsic
   4884  482       3       java.util.AbstractList::&lt;init&gt; (10 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   4885  496       3       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
<writer thread='139812462864128'/>
   4891  429       3       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   made not entrant
   4892  486       4       java.io.ObjectOutputStream::writeHandle (21 bytes)
<writer thread='139812461811456'/>
   4892  484       3       java.util.Arrays::copyOf (13 bytes)
<writer thread='139812892006144'/>
   4901  523     n 0       java.net.SocketOutputStream::socketWrite0 (native)   
<writer thread='139812461811456'/>
                              @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
   4903  490       3       java.util.ArrayList::&lt;init&gt; (12 bytes)
                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812462864128'/>
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
   4912  394       2       java.io.ObjectOutputStream::writeHandle (21 bytes)   made not entrant
   4913  506       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)
<writer thread='139812461811456'/>
   4914  488       3       java.util.ArrayList::iterator (9 bytes)
                              @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   4916  497       3       java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   4935  489       3       java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   4936  528       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   4938  459       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   made not entrant
   4940  494       3       sun.misc.Unsafe::getAndAddInt (27 bytes)
                              @ 3   sun.misc.Unsafe::getIntVolatile (0 bytes)   intrinsic
                              @ 18   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   4942  498       3       java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
   4948  500       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
   4972  501       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                              @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
   4977  502       3       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
<writer thread='139812892006144'/>
   4979  532     n 0       java.lang.Class::getComponentType (native)   
<writer thread='139812461811456'/>
                              @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
   4980  505       3       java.util.ArrayList::grow (45 bytes)
                              @ 28   java.util.ArrayList::hugeCapacity (26 bytes)
                                @ 8   java.lang.OutOfMemoryError::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 38   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
   4991  507   !   3       java.io.ObjectOutputStream::writeObject (38 bytes)
                              @ 9   java.io.ObjectOutputStream::writeObjectOverride (1 bytes)
               !              @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
               !              @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   callee is too large
   5004  510       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
   5006  511       3       java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
        
<writer thread='139812462864128'/>
                              @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                              @ 24   java.lang.String::length (6 bytes)   inline (hot)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139811587356416'/>
   5016  533     n 0       sun.misc.Unsafe::putObject (native)   
<writer thread='139812461811456'/>
                      @ 53   java.lang.Error::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   5025  538   !   3       java.io.ObjectOutputStream::writeArray (611 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 12   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 28   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 33   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 36   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 43   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 73   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)   callee is too large
                              @ 116   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 130   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   callee is too large
                              @ 160   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 173   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongs (105 bytes)   callee is too large
                              @ 203   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 216   java.io.ObjectOutputStream$BlockDataOutputStream::writeFloats (101 bytes)   callee is too large
                              @ 246   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 259   java.io.ObjectOutputStream$BlockDataOutputStream::writeDoubles (101 bytes)   callee is too large
                              @ 289   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 302   java.io.ObjectOutputStream$BlockDataOutputStream::writeShorts (104 bytes)   callee is too large
                              @ 332   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 345   java.io.ObjectOutputStream$BlockDataOutputStream::writeChars (104 bytes)   callee is too large
                              @ 375   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 388   java.io.ObjectOutputStream$BlockDataOutputStream::writeBooleans (79 bytes)   callee is too large
<writer thread='139812462864128'/>
   5073  443       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   made not entrant
   5074  492       4       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)
                              @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
                              @ 398  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 422   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
               !              @ 533   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
<writer thread='139812462864128'/>
   5092  402       2       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   made not entrant
   5113  493       4       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)
<writer thread='139812461811456'/>
   5132  539       1       java.lang.ThreadLocal::getMap (5 bytes)
   5136  359       3       java.lang.ThreadLocal::getMap (5 bytes)   made not entrant
   5137  508       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
<writer thread='139812462864128'/>
                              @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   5140  514   !   3       java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)
   5142  515   !   3       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)
                              @ 33   java.net.AbstractPlainSocketImpl::socketClose (6 bytes)
                                @ 2   java.net.AbstractPlainSocketImpl::socketClose0 (0 bytes)   no static binding
   5151  525       3       java.util.concurrent.TimeUnit::x (27 bytes)
   5158  399       1       org.openjdk.jmh.results.Result::getRole (5 bytes)
<writer thread='139812462864128'/>
   5176  438       2       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   made not entrant
   5176  542       4       java.io.Bits::putLong (86 bytes)
<writer thread='139812461811456'/>
   5180  516       3       java.io.OutputStream::flush (1 bytes)
   5181  517       3       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5182  509       3       java.io.BufferedOutputStream::flushBuffer (29 bytes)
                              @ 20   java.io.OutputStream::write (79 bytes)   no static binding
   5183  526       3       java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5184  527       3       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
<writer thread='139812462864128'/>
<writer thread='139812461811456'/>
   5203  540       3       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
<writer thread='139812462864128'/>
   5203  491       3       java.io.Bits::putLong (86 bytes)   made not entrant
   5203  503       4       java.io.ObjectOutputStream::writeClassDesc (60 bytes)
<writer thread='139812461811456'/>
                              @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
   5206  543       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   5207  518       3       java.io.ObjectOutputStream::flush (8 bytes)
                              @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                                @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                                @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   5209  519       3       java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                              @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   5219  520  s    3       java.io.BufferedOutputStream::flush (12 bytes)
                              @ 1   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   5223  521       3       java.net.SocketOutputStream::write (8 bytes)
               !              @ 4   java.net.SocketOutputStream::socketWrite (159 bytes)   callee is too large
   5224  522   !   3       java.net.SocketOutputStream::socketWrite (159 bytes)
               !m             @ 71   java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)
                              @ 82   java.net.SocketOutputStream::socketWrite0 (0 bytes)   native method
               !m             @ 109   java.net.AbstractPlainSocketImpl::setConnectionResetPending (37 bytes)   callee is too large
                              @ 118   java.net.SocketException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
               !m             @ 127   java.net.AbstractPlainSocketImpl::isClosedOrPending (34 bytes)
                              @ 139   java.net.SocketException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
               !m             @ 152   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   callee is too large
               !m             @ 89   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 34   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 38   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 43   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 47   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 52   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 57   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 60   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 63  java/lang/ArrayIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139811587356416'/>
   5271  563     n 0       sun.misc.Unsafe::putOrderedInt (native)   
<writer thread='139812461811456'/>
   5304  570       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   5305  508       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   made not entrant
   5305  568       3       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)
                              @ 4   java.util.HashMap::get (23 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.reflect.Method::hashCode (19 bytes)
                                    @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                                    @ 4   java.lang.Class::getName (21 bytes)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                                    @ 11   java.lang.reflect.Method::getName (5 bytes)
                                    @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 21   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 27   java.lang.reflect.Method::getName (5 bytes)
                              @ 30   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 35   java.lang.reflect.Method::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 62   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 65   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 72   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 83   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 92   java.util.HashMap::put (13 bytes)
<writer thread='139812462864128'/>
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                  @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 22   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   already compiled into a medium method
                                @ 36   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                @ 44   java.io.ObjectOutputStream::writeClassDescriptor (6 bytes)   inline (hot)
                                  @ 2   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                @ 48   java.io.ObjectStreamClass::forClass (52 bytes)   too big
                                @ 57   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                @ 66   java.io.ObjectOutputStream::isCustomSubclass (21 bytes)   inline (hot)
                                  @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 4   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                    @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                    @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                  @ 9   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                    @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                    @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                @ 73   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)   never executed
                                @ 78   java.io.ObjectOutputStream::annotateClass (1 bytes)   inline (hot)
                                @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 101   java.io.ObjectStreamClass::getSuperDesc (9 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 105   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   too big
<writer thread='139812461811456'/>
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.reflect.Method::hashCode (19 bytes)
                                    @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                                    @ 4   java.lang.Class::getName (21 bytes)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                                    @ 11   java.lang.reflect.Method::getName (5 bytes)
                                    @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
   5411  576       1       java.io.OutputStream::flush (1 bytes)
   5412  516       3       java.io.OutputStream::flush (1 bytes)   made not entrant
   5412  577       1       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
   5412  527       3       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)   made not entrant
   5412  575       1       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                              @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
   5413  540       3       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)   made not entrant
   5413  541       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer::findNodeFromTail (26 bytes)
   5426  524   !   3       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)
                              @ 13   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 42   java.io.ObjectOutputStream::reset (49 bytes)   callee is too large
               !              @ 57   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
                              @ 64   java.io.ObjectOutputStream::flush (8 bytes)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                                  @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                                  @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
<writer thread='139812462864128'/>
   5443  433       2       java.io.ObjectOutputStream::writeClassDesc (60 bytes)   made not entrant
   5450  578   !   4       java.io.ObjectOutputStream::writeSerialData (221 bytes)
<writer thread='139812461811456'/>
   5454  534       3       java.lang.Integer::valueOf (32 bytes)
                              @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5457  551   !   3       java.util.concurrent.FutureTask::run (126 bytes)
                              @ 15   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 42   java.util.concurrent.Callable::call (0 bytes)   not inlineable
                              @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   callee is too large
                              @ 71   java.util.concurrent.FutureTask::set (36 bytes)   callee is too large
                              @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)
                                @ 13   java.lang.Thread::yield (0 bytes)   native method
                              @ 91   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)
                                @ 13   java.lang.Thread::yield (0 bytes)   native method
   5481  535       3       java.lang.Integer::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5491  552       3       java.util.concurrent.CountDownLatch::countDown (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
   5493  553       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryReleaseShared (8 bytes)   no static binding
                              @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
   5505  536       3       java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   5519  555       3       java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   5522  556       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 41   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
                              @ 55   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   5543  537       3       java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   5544  544       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5545  545       3       java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
<writer thread='139812462864128'/>
                              @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)   inline (hot)
                              @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4848/4848 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
               !              @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   executed &lt; MinInliningThreshold times
                              @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4848/4848 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
                              @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
               !              @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   already compiled into a big method
<writer thread='139812461811456'/>
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5568  557       3       java.util.concurrent.CountDownLatch::await (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
   5579  397       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
   5581  546       3       org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
   5586  547       3       java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5588  398       1       org.openjdk.jmh.infra.IterationParamsL2::getCount (5 bytes)
   5589  548       3       java.lang.reflect.Method::hashCode (19 bytes)
                              @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 4   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 11   java.lang.reflect.Method::getName (5 bytes)
                              @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
   5601  549       3       org.openjdk.jmh.infra.IterationParams::getCount (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getCount (5 bytes)
   5602  550       3       java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
   5603  560       3       java.util.concurrent.TimeUnit$1::convert (6 bytes)
                              @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
   5607  567       3       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                              @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                              @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m               @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
   5609  572       3       org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139811587356416'/>
   5611  589     n 0       sun.misc.Unsafe::park (native)   
<writer thread='139812461811456'/>
   5623  592       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)
                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
   5643  573       3       org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m             @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
   5651  558       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquireShared (8 bytes)   no static binding
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
   5653  574   !   3       java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)
                              @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
<writer thread='139812462864128'/>
   5689  463   !   3       java.io.ObjectOutputStream::writeSerialData (221 bytes)   made not entrant
<writer thread='139812892006144'/>
   5689  597     n 0       sun.misc.Unsafe::unpark (native)   
<writer thread='139812462864128'/>
   5689  571       4       java.io.ObjectStreamField::getTypeCode (9 bytes)
                              @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
   5723  259       3       java.io.ObjectStreamField::getTypeCode (9 bytes)   made not entrant
<writer thread='139812461811456'/>
   5727  559       3       java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
<writer thread='139812462864128'/>
   5727  601       4       java.lang.Thread::interrupted (8 bytes)
<writer thread='139812461811456'/>
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
<writer thread='139812462864128'/>
                              @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   5732  561       3       org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                              @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
   5734  562       3       java.util.concurrent.FutureTask::set (36 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   intrinsic
                              @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   callee is too large
   5735  564       3       java.util.concurrent.FutureTask::finishCompletion (74 bytes)
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 39   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                              @ 65   java.util.concurrent.FutureTask::done (1 bytes)   no static binding
<writer thread='139812462864128'/>
   5736  468       3       java.lang.Thread::interrupted (8 bytes)   made not entrant
   5742  529       4       java.io.ObjectOutputStream::writeByte (9 bytes)
<writer thread='139812461811456'/>
   5745  565       3       java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !                @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
   5748  579       3       java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)
<writer thread='139812462864128'/>
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
<writer thread='139812461811456'/>
   5750  580   !   3       java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)
                              @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
<writer thread='139812462864128'/>
   5756  454       2       java.io.ObjectOutputStream::writeByte (9 bytes)   made not entrant
   5758  512   !   4       java.io.ObjectStreamClass::lookup (335 bytes)
<writer thread='139812461811456'/>
   5763  581       3       java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
   5767  566       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
   5773  582       3       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
   5774  583       3       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
   5775  554       3       java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)
                              @ 1   java.lang.ThreadLocal::access$400 (5 bytes)
                              @ 25   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   callee is too large
   5777  586       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)
                              @ 19   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::unlinkCancelledWaiters (67 bytes)   callee is too large
                              @ 31   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 36   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5797  587       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5802  588   !   3       java.util.concurrent.locks.AbstractQueuedSynchronizer::fullyRelease (54 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryRelease (8 bytes)   no static binding
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
                              @ 36   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   5807  590       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)
                              @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   callee is too large
   5809  598       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::checkInterruptWhileWaiting (27 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 11   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferAfterCancelledWait (34 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   callee is too large
                                @ 20   java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)   callee is too large
                                @ 26   java.lang.Thread::yield (0 bytes)   native method
<writer thread='139812462864128'/>
                              @ 15   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   inline (hot)
                              @ 21   java.io.ObjectStreamClass::processQueue (21 bytes)   inline (hot)
               !m               @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)   inline (hot)
                              @ 29   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   inline (hot)
                              @ 32   java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)   inline (hot)
                                @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)   inline (hot)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 8   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 40   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass$WeakClassKey::hashCode (5 bytes)   accessor
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                @ 73   java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)   inline (hot)
                                  @ 15   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 28   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 149   java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)   inline (hot)
                                  @ 15   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 28   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 57   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   5830  591       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)
                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   callee is too large
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 40   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
<writer thread='139812462864128'/>
   5852  435   !   2       java.io.ObjectStreamClass::lookup (335 bytes)   made not entrant
   5881  513       4       java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)
                              @ 15   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 28   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   5894  595       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)
                              @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
<writer thread='139812462864128'/>
   5896  448       2       java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)   made not entrant
   5896  613       4       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
   5900  473       3       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   made not entrant
   5900  480       4       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)
<writer thread='139812461811456'/>
   5902  599   !   3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)
<writer thread='139812462864128'/>
                              @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s               @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                               \-&gt; TypeProfile (4848/4848 counts) = java/io/BufferedOutputStream
                                @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
                              @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::predecessor (19 bytes)
                                @ 13   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 22   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::setHead (16 bytes)
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::shouldParkAfterFailedAcquire (50 bytes)   callee is too large
                              @ 67   java.util.concurrent.locks.AbstractQueuedSynchronizer::parkAndCheckInterrupt (8 bytes)
                                @ 1   java.util.concurrent.locks.LockSupport::park (23 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 6   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                    @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                  @ 14   sun.misc.Unsafe::park (0 bytes)   native method
                                  @ 19   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                    @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 87   java.util.concurrent.locks.AbstractQueuedSynchronizer::cancelAcquire (154 bytes)   callee is too large
<writer thread='139811587356416'/>
   5930  628     n 0       sun.reflect.Reflection::getClassAccessFlags (native)   (static)
<writer thread='139812462864128'/>
   5953  400       2       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   made not entrant
   5958  624       4       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
<writer thread='139812461811456'/>
   5962  626       1       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
   5970  583       3       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)   made not entrant
   5970  605       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::setHead (16 bytes)
   5971  603       3       java.lang.reflect.Method::invoke (62 bytes)
                              @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)
                                @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   native method
                                @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 21   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 36   java.lang.reflect.AccessibleObject::checkAccess (96 bytes)   callee is too large
                              @ 49   java.lang.reflect.Method::acquireMethodAccessor (44 bytes)   callee is too large
                              @ 56   sun.reflect.MethodAccessor::invoke (0 bytes)   not inlineable
   5975  604       3       sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)
                              @ 6   sun.reflect.MethodAccessorImpl::invoke (0 bytes)   no static binding
   5976  606       3       java.lang.reflect.Modifier::isPublic (12 bytes)
   5976  636   !   3       org.openjdk.jmh.runner.BenchmarkHandler::runIteration (628 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
                              @ 7   org.openjdk.jmh.infra.IterationParams::getTime (5 bytes)
                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getTime (5 bytes)
                              @ 18   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 29   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812462864128'/>
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                  @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                  @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                  @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                  @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                  @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                    @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                    @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
   5984  478       3       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   made not entrant
   5991  630       4       java.util.ArrayList$Itr::hasNext (20 bytes)
                              @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
<writer thread='139812461811456'/>
                                @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
<writer thread='139812462864128'/>
   5993  466       3       java.util.ArrayList$Itr::hasNext (20 bytes)   made not entrant
   5993  631       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)
<writer thread='139812461811456'/>
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 38   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 58   org.openjdk.jmh.infra.Control::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                        @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                          @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 61   org.openjdk.jmh.runner.InfraControl::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                                  @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                    @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
                              @ 95   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::&lt;init&gt; (15 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 105   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 109   org.openjdk.jmh.infra.BenchmarkParams::getTimeout (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeout (5 bytes)
<writer thread='139812462864128'/>
                              @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
   6008  441       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   made not entrant
   6008  625       4       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
   6010  582       3       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)   made not entrant
   6010  531   !   4       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)
<writer thread='139812461811456'/>
                              @ 115   org.openjdk.jmh.runner.options.TimeValue::convertTo (13 bytes)
                                @ 9   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                  @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
               !              @ 124   org.openjdk.jmh.runner.BenchmarkHandler::startProfilers (58 bytes)   callee is too large
                              @ 131   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 144   java.util.concurrent.ExecutorCompletionService::&lt;init&gt; (52 bytes)   callee is too large
                              @ 179   java.util.concurrent.ExecutorCompletionService::submit (38 bytes)   callee is too large
                              @ 193   org.openjdk.jmh.runner.InfraControl::awaitWarmupReady (5 bytes)
               !                @ 1   org.openjdk.jmh.runner.InfraControlL2::awaitWarmupReady (19 bytes)
                                  @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 200   org.openjdk.jmh.infra.BenchmarkParams::getMode (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getMode (5 bytes)
                              @ 203   java.lang.Enum::ordinal (5 bytes)
                              @ 234   org.openjdk.jmh.runner.options.TimeValue::convertTo (13 bytes)
                                @ 9   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                  @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 240   java.util.concurrent.ExecutorCompletionService::poll (15 bytes)
                                @ 6   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
                              @ 256   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 262   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 274   org.openjdk.jmh.runner.InfraControl::announceDone (14 bytes)
                              @ 279   org.openjdk.jmh.runner.InfraControl::awaitWarmdownReady (5 bytes)
               !                @ 1   org.openjdk.jmh.runner.InfraControlL2::awaitWarmdownReady (19 bytes)
                                  @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 284   java.util.ArrayList::size (5 bytes)
                              @ 300   java.util.concurrent.TimeUnit$3::toNanos (11 bytes)
                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
                              @ 305   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 309   java.lang.Math::max (12 bytes)
                              @ 321   java.util.concurrent.ExecutorCompletionService::poll (15 bytes)
                                @ 6   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
               !              @ 339   com.sun.proxy.$Proxy0::print (34 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
<writer thread='139812462864128'/>
                              @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   already compiled into a big method
                              @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                  @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
               !              @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   already compiled into a big method
<writer thread='139812461811456'/>
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
                              @ 372   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::access$100 (5 bytes)
               !m             @ 384   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 400   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 417   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
                              @ 431   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 438   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 447   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 457   java.util.Iterator::next (0 bytes)   no static binding
                              @ 469   java.util.concurrent.FutureTask::get (23 bytes)
                                @ 13   java.util.concurrent.FutureTask::awaitDone (171 bytes)   callee is too large
                                @ 19   java.util.concurrent.FutureTask::report (37 bytes)   callee is too large
                              @ 483   org.openjdk.jmh.results.BenchmarkTaskResult::getResults (5 bytes)
                              @ 486   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 496   org.openjdk.jmh.results.BenchmarkTaskResult::getAllOps (5 bytes)
                              @ 506   org.openjdk.jmh.results.BenchmarkTaskResult::getMeasuredOps (5 bytes)
              s               @ 519   java.lang.Throwable::getCause (17 bytes)   no static binding
              s               @ 522   java.lang.Throwable::getCause (17 bytes)   no static binding
              s               @ 525   java.lang.Throwable::getCause (17 bytes)   no static binding
                              @ 542   java.util.List::add (0 bytes)   no static binding
                              @ 559   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
                              @ 580   org.openjdk.jmh.results.IterationResultMetaData::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 583   org.openjdk.jmh.results.IterationResult::&lt;init&gt; (34 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 592   org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
                                @ 1   java.util.ArrayList::iterator (9 bytes)
                                  @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   java.util.ArrayList$Itr::hasNext (20 bytes)
                                  @ 8   java.util.ArrayList::access$000 (5 bytes)
                                @ 17   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                                @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
               !              @ 600   org.openjdk.jmh.runner.BenchmarkHandler::stopProfilers (66 bytes)   callee is too large
                              @ 605   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 621   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (42 bytes)   not inlineable
<writer thread='139812462864128'/>
   6092  460   !   2       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   made not entrant
   6092  646       4       java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   6093  264       3       java.util.AbstractCollection::&lt;init&gt; (5 bytes)   made not entrant
   6093  639       4       java.util.Arrays::copyOf (46 bytes)
                              @ 38   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 41   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   6123  481       3       java.util.Arrays::copyOf (46 bytes)   made not entrant
   6123  530       4       java.io.ObjectOutputStream::writeUTF (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)   inline (hot)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   inline (hot)
                                  @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   inline (hot)
                                  @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                    @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                                  @ 24   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
   6384  455       2       java.io.ObjectOutputStream::writeUTF (9 bytes)   made not entrant
   6384  652       4       java.util.ArrayList::&lt;init&gt; (12 bytes)
                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   6398  490       3       java.util.ArrayList::&lt;init&gt; (12 bytes)   made not entrant
   6398  653       4       java.util.ArrayList::iterator (9 bytes)
                              @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   6423  488       3       java.util.ArrayList::iterator (9 bytes)   made not entrant
   6424  656       4       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
   6440  496       3       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)   made not entrant
   6440  650       4       java.util.ArrayList::grow (45 bytes)
                              @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
   6483  505       3       java.util.ArrayList::grow (45 bytes)   made not entrant
   6483  657       4       java.util.HashMap::getNode (148 bytes)
   6548  178       3       java.util.HashMap::getNode (148 bytes)   made not entrant
   6548  658   !   4       java.io.ObjectOutputStream::writeArray (611 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 12   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   already compiled into a big method
                              @ 28   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                  @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 33   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 36   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 43   java.lang.Class::isPrimitive (0 bytes)   (intrinsic)
                              @ 73   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   too big
                              @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)   too big
                              @ 422   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
               !              @ 533   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
<writer thread='139812461811456'/>
   6670  638       2       java.io.ObjectStreamClass::writeNonProxy (161 bytes)
                              @ 5   java.io.ObjectOutputStream::writeUTF (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                  @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                  @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 10   java.io.ObjectStreamClass::getSerialVersionUID (33 bytes)
                                @ 13   java.io.ObjectStreamClass$2::&lt;init&gt; (10 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 29   java.lang.Long::longValue (5 bytes)
                              @ 13   java.io.ObjectOutputStream::writeLong (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   callee is too large
                              @ 31   java.io.ObjectOutputStream::getProtocolVersion (5 bytes)
                              @ 88   java.io.ObjectOutputStream::writeByte (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 97   java.io.ObjectOutputStream::writeShort (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   callee is too large
                              @ 122   java.io.ObjectStreamField::getTypeCode (9 bytes)
                                @ 5   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 125   java.io.ObjectOutputStream::writeByte (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 131   java.io.ObjectStreamField::getName (5 bytes)
                              @ 134   java.io.ObjectOutputStream::writeUTF (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                  @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                  @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 139   java.io.ObjectStreamField::isPrimitive (27 bytes)
                                @ 5   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 148   java.io.ObjectStreamField::getTypeString (16 bytes)
                                @ 1   java.io.ObjectStreamField::isPrimitive (27 bytes)
                                  @ 5   java.lang.String::charAt (29 bytes)   callee is too large
                              @ 151   java.io.ObjectOutputStream::writeTypeString (40 bytes)   callee is too large
   6719  659       3       org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)
                              @ 4   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 30   org.openjdk.jmh.it.ccontrol.CompilerControlExcludeActualTest::compilerControlSpecimen (5 bytes)   excluded by CompilerOracle
                              @ 40   java.lang.System::nanoTime (0 bytes)   intrinsic
<writer thread='139812462864128'/>
   6744  538   !   3       java.io.ObjectOutputStream::writeArray (611 bytes)   made not entrant
   6745  668       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
<writer thread='139812461811456'/>
   6748  660       3       org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
                              @ 1   java.util.Collection::iterator (0 bytes)   no static binding
<writer thread='139812462864128'/>
   6756  500       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   made not entrant
   6756  669       4       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
<writer thread='139812461811456'/>
                              @ 8   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 17   java.util.Iterator::next (0 bytes)   no static binding
                              @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
   6760  637       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::await (98 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 15   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)   callee is too large
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::fullyRelease (54 bytes)   callee is too large
                              @ 35   java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer::findNodeFromTail (26 bytes)
                              @ 42   java.util.concurrent.locks.LockSupport::park (23 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 6   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                  @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                @ 14   sun.misc.Unsafe::park (0 bytes)   native method
                                @ 19   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                  @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                              @ 47   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::checkInterruptWhileWaiting (27 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 11   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferAfterCancelledWait (34 bytes)   callee is too large
               !              @ 64   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                              @ 85   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::unlinkCancelledWaiters (67 bytes)   callee is too large
                              @ 94   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::reportInterruptAfterWait (22 bytes)
                                @ 9   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
<writer thread='139812462864128'/>
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                               \-&gt; TypeProfile (10302/10302 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                    @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                    @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                    @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                  @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   6844  596       3       java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                              @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
<writer thread='139812462864128'/>
   6845  501       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   made not entrant
   6847  670       4       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)
<writer thread='139812461811456'/>
   6851  611       3       java.io.ObjectOutputStream::writeString (74 bytes)
                              @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                              @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 61   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 70   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongUTF (29 bytes)
                                @ 2   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   callee is too large
                                @ 7   java.lang.String::
<writer thread='139812462864128'/>
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                              @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
   6856  502       3       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   made not entrant
   6858  672       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
<writer thread='139812461811456'/>
length (6 bytes)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   callee is too large
                                @ 25   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTFBody (386 bytes)   callee is too large
<writer thread='139812462864128'/>
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
   6879  510       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   made not entrant
   6885  584       4       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
<writer thread='139812461811456'/>
   6889  600       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::predecessor (19 bytes)
                              @ 13   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   6893  405       1       java.lang.Boolean::booleanValue (5 bytes)
   6899  594       3       java.util.AbstractSet::&lt;init&gt; (5 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   6907  615       3       java.util.AbstractQueue::&lt;init&gt; (5 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   6911  618       3       java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (7 bytes)
                              @ 3   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)   callee is too large
<writer thread='139812462864128'/>
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                              @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease (12 bytes)   inline (hot)
                               \-&gt; TypeProfile (687/12647 counts) = java/util/concurrent/ThreadPoolExecutor$Worker
                               \-&gt; TypeProfile (11960/12647 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                @ 2   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 7   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
<writer thread='139812461811456'/>
   6925  609       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)
                              @ 22   java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 44   java.io.DataOutputStream::writeLong (118 bytes)   callee is too large
   6930  612       3       java.lang.Boolean::valueOf (14 bytes)
   6936  607       3       java.util.ArrayList::isEmpty (13 bytes)
   6937  614       3       java.util.ArrayList::addAll (54 bytes)
                              @ 1   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 17   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
<writer thread='139812462864128'/>
   6938  467       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   made not entrant
   6938  485       4       java.io.ObjectStreamClass::forClass (52 bytes)
                              @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
   6941  403       2       java.io.ObjectStreamClass::forClass (52 bytes)   made not entrant
<writer thread='139812461811456'/>
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 31   java.lang.System::arraycopy (0 bytes)   intrinsic
   6953  620       3       java.util.AbstractQueue::add (20 bytes)
                              @ 2   java.util.AbstractQueue::offer (10 bytes)   no static binding
                              @ 16   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
   6954  616       3       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
   6955  617       3       java.util.ArrayList::toArray (12 bytes)
                              @ 8   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
   6956  619       3       java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)
                              @ 1   java.util.AbstractQueue::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 31   java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 42   java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 53   java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 67   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 83   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812462864128'/>
   6982  684   !   4       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)
   6986  515   !   3       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   made not entrant
   6986  685       4       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   6987  517       3       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)   made not entrant
   6987  686  s    4       java.io.BufferedOutputStream::flush (12 bytes)
<writer thread='139812461811456'/>
   6996  621       3       java.util.concurrent.ThreadPoolExecutor$Worker::unlock (7 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease (12 bytes)
                                  @ 2   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                                  @ 7   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
   7003  408       1       org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
   7003  623       3       java.util.concurrent.TimeUnit$3::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
   7005  632   !   3       org.openjdk.jmh.runner.BaseRunner::runSystemGC (309 bytes)
                              @ 4   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                  @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)   recursive inlining too deep
                                  @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
                                @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
                              @ 10   java.lang.Boolean::valueOf (14 bytes)
<writer thread='139812462864128'/>
                              @ 1   java.io.BufferedOutputStream::flushBuffer (29 bytes)   inline (hot)
                                @ 20   java.net.SocketOutputStream::write (8 bytes)   inline (hot)
                                 \-&gt; TypeProfile (8289/8289 counts) = java/net/SocketOutputStream
               !                  @ 4   java.net.SocketOutputStream::socketWrite (159 bytes)   inline (hot)
               !m                   @ 71   java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)   inline (hot)
                                    @ 82   java.net.SocketOutputStream::socketWrite0 (0 bytes)   native method
               !m                   @ 89   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   inline (hot)
               !m                   @ 127   java.net.AbstractPlainSocketImpl::isClosedOrPending (34 bytes)   executed &lt; MinInliningThreshold times
               !m                   @ 152   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   already compiled into a medium method
                              @ 8   java.io.OutputStream::flush (1 bytes)   inline (hot)
                               \-&gt; TypeProfile (8240/8240 counts) = java/net/SocketOutputStream
<writer thread='139812461811456'/>
                              @ 13   org.openjdk.jmh.util.Optional::orElse (16 bytes)
                              @ 19   java.lang.Boolean::booleanValue (5 bytes)
                              @ 29   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 35   java.lang.management.ManagementFactory::getGarbageCollectorMXBeans (4 bytes)
                                @ 0   sun.management.ManagementFactoryHelper::getGarbageCollectorMXBeans (66 bytes)   callee is too large
                              @ 38   java.util.List::iterator (0 bytes)   no static binding
                              @ 47   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 57   java.util.Iterator::next (0 bytes)   no static binding
                              @ 69  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
                              @ 88   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 98   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 107   java.util.ArrayList$Itr::hasNext (20 bytes)
                                @ 8   java.util.ArrayList::access$000 (5 bytes)
                              @ 117   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                              @ 130  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
                              @ 140   java.lang.System::gc (7 bytes)
                                @ 0   java.lang.Runtime::getRuntime (4 bytes)
                                @ 3   java.lang.Runtime::gc (0 bytes)   native method
                              @ 149   java.util.ArrayList::isEmpty (13 bytes)
               !              @ 163   com.sun.proxy.$Proxy0::println (34 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
<writer thread='139811587356416'/>
   7022  668       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   made not entrant
   7022  672       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   made not entrant
<writer thread='139812461811456'/>
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
                              @ 174   java.util.concurrent.TimeUnit::sleep (27 bytes)
                                @ 8   java.util.concurrent.TimeUnit$3::toMillis (2 bytes)
                                @ 15   java.util.concurrent.TimeUnit$3::excessNanos (2 bytes)
                                @ 23   java.lang.Thread::sleep (61 bytes)   callee is too large
                              @ 182   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m             @ 185   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 190   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 198   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 204   java.util.concurrent.TimeUnit$1::toMillis (6 bytes)
                              @ 220   java.util.concurrent.TimeUnit::sleep (27 bytes)
                                @ 8   java.util.concurrent.TimeUnit$3::toMillis (2 bytes)
                                @ 15   java.util.concurrent.TimeUnit$3::excessNanos (2 bytes)
                                @ 23   java.lang.Thread::sleep (61 bytes)   callee is too large
                              @ 228   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m             @ 231   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 238   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 247   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 257   java.util.Iterator::next (0 bytes)   no static binding
                              @ 271  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
               !              @ 300   com.sun.proxy.$Proxy0::println (34 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
<writer thread='139812462864128'/>
   7081  520  s    3       java.io.BufferedOutputStream::flush (12 bytes)   made not entrant
   7081  687       4       java.net.SocketOutputStream::write (8 bytes)
               !              @ 4   java.net.SocketOutputStream::socketWrite (159 bytes)   inline (hot)
               !m               @ 71   java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)   inline (hot)
                                @ 82   java.net.SocketOutputStream::socketWrite0 (0 bytes)   native method
               !m               @ 89   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   inline (hot)
               !m               @ 127   java.net.AbstractPlainSocketImpl::isClosedOrPending (34 bytes)   executed &lt; MinInliningThreshold times
               !m               @ 152   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   already compiled into a medium method
<writer thread='139812463916800'/>
   7118  392   !   3       java.io.ObjectOutputStream::writeObject0 (619 bytes)   made not entrant
<writer thread='139812462864128'/>
   7143  521       3       java.net.SocketOutputStream::write (8 bytes)   made not entrant
   7155  713       4       java.lang.StringBuilder::toString (17 bytes)
<writer thread='139812463916800'/>
   7158  688   !   4       java.net.SocketOutputStream::socketWrite (159 bytes)
<writer thread='139812462864128'/>
                              @ 13   java.lang.String::&lt;init&gt; (82 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139812463916800'/>
               !m             @ 71   java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)   inline (hot)
                              @ 82   java.net.SocketOutputStream::socketWrite0 (0 bytes)   native method
               !m             @ 89   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   inline (hot)
               !m             @ 127   java.net.AbstractPlainSocketImpl::isClosedOrPending (34 bytes)   executed &lt; MinInliningThreshold times
               !m             @ 152   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   already compiled into a medium method
<writer thread='139812462864128'/>
   7208   46       3       java.lang.StringBuilder::toString (17 bytes)   made not entrant
   7211  718   !   4       java.io.ObjectOutputStream::writeObject (38 bytes)
               !              @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
               !              @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   too big
   7223  507   !   3       java.io.ObjectOutputStream::writeObject (38 bytes)   made not entrant
   7228  717       4       java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='139812463916800'/>
   7229  522   !   3       java.net.SocketOutputStream::socketWrite (159 bytes)   made not entrant
   7230  722       4       java.util.ArrayList::add (29 bytes)
<writer thread='139812462864128'/>
                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   7248   49       3       java.lang.StringBuilder::&lt;init&gt; (7 bytes)   made not entrant
   7252  723   !   4       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)
<writer thread='139812463916800'/>
                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                  @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                    @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                      @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
   7278  255       3       java.util.ArrayList::add (29 bytes)   made not entrant
   7298  725       4       java.util.concurrent.TimeUnit::x (27 bytes)
<writer thread='139812461811456'/>
   7304  715       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
<writer thread='139812463916800'/>
   7309  525       3       java.util.concurrent.TimeUnit::x (27 bytes)   made not entrant
   7309  724   !   4       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)
<writer thread='139812461811456'/>
                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
   7353  714       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
   7360  734   !   3       java.util.concurrent.LinkedBlockingQueue::take (93 bytes)
                              @ 15   java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
                              @ 19   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::await (98 bytes)   callee is too large
                              @ 38   java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
                              @ 43   java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 56   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 73   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 63   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 88   java.util.concurrent.LinkedBlockingQueue::signalNotFull (33 bytes)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
<writer thread='139812462864128'/>
                              @ 17   java.lang.String::hashCode (55 bytes)   inline (hot)
                               \-&gt; TypeProfile (7038/7210 counts) = java/lang/String
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)   inline (hot)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                               \-&gt; TypeProfile (3378/3378 counts) = java/lang/String
                              @ 192   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   inline (hot)
                                @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   (intrinsic)
                                @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed &lt; MinInliningThreshold times
                                @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                                @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                                @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   too big
               !                @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (487 bytes)   too big
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   too big
<writer thread='139812463916800'/>
                              @ 42   java.io.ObjectOutputStream::reset (49 bytes)   too big
               !              @ 57   java.io.ObjectOutputStream::writeObject (38 bytes)   inline (hot)
               !                @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
               !                @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   too big
                              @ 64   java.io.ObjectOutputStream::flush (8 bytes)   inline (hot)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)   inline (hot)
                                  @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                    @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                     @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                     \-&gt; TypeProfile (4848/4848 counts) = java/io/BufferedOutputStream
                                      @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                   @ 8   java.io.BufferedOutputStream::flush (12 bytes)   already compiled into a big method
                                   \-&gt; TypeProfile (9692/9692 counts) = java/io/BufferedOutputStream
<writer thread='139812461811456'/>
   7455  737       1       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
   7456  616       3       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)   made not entrant
   7456  691   !   3       java.util.concurrent.LinkedBlockingQueue::poll (134 bytes)
                              @ 8   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 27   java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
                              @ 32   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 50   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 62   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::awaitNanos (156 bytes)   callee is too large
                              @ 73   java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
                              @ 80   java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 95   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
<writer thread='139812462864128'/>
   7506  269   !   3       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   made not entrant
   7511  726       4       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
<writer thread='139812461811456'/>
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 112   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 102   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 128   java.util.concurrent.LinkedBlockingQueue::signalNotFull (33 bytes)
<writer thread='139812462864128'/>
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
   7525  218       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   made not entrant
   7526  736       4       java.util.ArrayList$Itr::next (66 bytes)
<writer thread='139812461811456'/>
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
<writer thread='139812462864128'/>
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                              @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
   7547  272       3       java.util.ArrayList$Itr::next (66 bytes)   made not entrant
<writer thread='139812463916800'/>
   7573  524   !   3       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   made not entrant
<writer thread='139812461811456'/>
   7608  689       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
<writer thread='139812462864128'/>
   7608  746       4       java.lang.Integer::valueOf (32 bytes)
                              @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
<writer thread='139812463916800'/>
   7611  747       4       org.openjdk.jmh.infra.IterationParams::getCount (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getCount (5 bytes)   accessor
   7612  549       3       org.openjdk.jmh.infra.IterationParams::getCount (5 bytes)   made not entrant
<writer thread='139812462864128'/>
   7612  534       3       java.lang.Integer::valueOf (32 bytes)   made not entrant
   7612  748   !   4       java.util.concurrent.FutureTask::run (126 bytes)
<writer thread='139812461811456'/>
                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                              @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m               @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
<writer thread='139812463916800'/>
   7619  749       4       java.util.concurrent.CountDownLatch::countDown (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inline (hot)
                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                  @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   inline (hot)
<writer thread='139812461811456'/>
   7627  751   !   3       org.openjdk.jmh.runner.ForkedRunner$1::accept (25 bytes)
                              @ 4   org.openjdk.jmh.runner.ForkedRunner::access$000 (5 bytes)
                              @ 8   org.openjdk.jmh.runner.link.BinaryLinkClient::pushResults (13 bytes)
                                @ 6   org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !m               @ 9   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 20   org.openjdk.jmh.runner.ForkedRunner$SavedIOException::&lt;init&gt; (11 bytes)   not inlineable
<writer thread='139812463916800'/>
   7637  552       3       java.util.concurrent.CountDownLatch::countDown (10 bytes)   made not entrant
   7638  750       4       java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                              @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
   7641  555       3       java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   made not entrant
<writer thread='139812461811456'/>
   7643  633       3       org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                              @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)   recursive inlining too deep
                                @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
                              @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
   7659  421       1       org.openjdk.jmh.runner.ForkedRunner::access$000 (5 bytes)
   7660  634       3       org.openjdk.jmh.util.Optional::orElse (16 bytes)
   7661  412       1       org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)
   7661  410       1       org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)
   7662  411       1       org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)
   7662  420       1       org.openjdk.jmh.results.IterationResult::getMetadata (5 bytes)
   7662  745       3       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)
   7683  635   !   3       com.sun.proxy.$Proxy0::iteration (47 bytes)
                              @ 23   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 27   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                 @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 43   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
   7719  640       3       org.openjdk.jmh.infra.IterationParams::getTime (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getTime (5 bytes)
<writer thread='139812463916800'/>
   7728  755 %     4       java.io.ObjectStreamClass::writeNonProxy @ 102 (161 bytes)
<writer thread='139812461811456'/>
   7730  754       3       java.io.ObjectOutputStream::writeTypeString (40 bytes)
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 16   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 27   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 36   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
   7734  641       3       org.openjdk.jmh.infra.Control::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7762  413       1       org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
   7763  414       1       org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)
   7763  642       3       org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7771  644       3       org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7772  645       3       org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7774  647       3       org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7775  648       3       org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7776  415       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
   7777  416       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
   7777  417       1       java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)
   7806  649       3       org.openjdk.jmh.runner.InfraControl::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                  @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
   7808  667       3       java.util.concurrent.ThreadPoolExecutor$Worker::lock (6 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                                @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire (20 bytes)
                                  @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                                  @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
   7824  654       3       org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
   7825  655       3       org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
   7826  661       3       org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)
                              @ 1   org.openjdk.jmh.runner.InfraControlL1::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 32   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 44   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 52   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
                              @ 60   org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
   7910  693       3       java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire (20 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
   7912  663       3       org.openjdk.jmh.runner.InfraControlL1::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7913  664       3       org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7934  665       3       org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
   7935  692       3       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)
   7935  752       3       org.openjdk.jmh.runner.link.BinaryLinkClient::pushResults (13 bytes)
                              @ 6   org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !m             @ 9   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
   7937  666       3       java.util.concurrent.TimeUnit$5::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
   7947  674   !   3       org.openjdk.jmh.runner.BenchmarkHandler::startProfilers (58 bytes)
                              @ 4   java.util.List::iterator (0 bytes)   no static binding
                              @ 11   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 20   java.util.Iterator::next (0 bytes)   no static binding
                              @ 34   org.openjdk.jmh.profile.InternalProfiler::beforeIteration (0 bytes)   not inlineable
                              @ 50   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
   7966  675       3       java.util.concurrent.ExecutorCompletionService::&lt;init&gt; (52 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (7 bytes)
                                @ 3   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)   callee is too large
   7968  676       3       java.util.concurrent.ExecutorCompletionService::submit (38 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 14   java.util.concurrent.ExecutorCompletionService::newTaskFor (25 bytes)
                                @ 12   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 21   java.util.concurrent.AbstractExecutorService::newTaskFor (9 bytes)
                                  @ 5   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                    @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.util.concurrent.ExecutorCompletionService$QueueingFuture::&lt;init&gt; (17 bytes)
                                @ 8   java.util.concurrent.FutureTask::&lt;init&gt; (19 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 7   java.util.concurrent.Executors::callable (22 bytes)
                                    @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                    @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 31   java.util.concurrent.Executor::execute (0 bytes)   not inlineable
<writer thread='139812463916800'/>
                              @ 122   java.io.ObjectStreamField::getTypeCode (9 bytes)   inline (hot)
                                @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 125   java.io.ObjectOutputStream::writeByte (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 131   java.io.ObjectStreamField::getName (5 bytes)   accessor
                              @ 134   java.io.ObjectOutputStream::writeUTF (9 bytes)   already compiled into a big method
                              @ 139   java.io.ObjectStreamField::isPrimitive (27 bytes)   inline (hot)
                                @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 148   java.io.ObjectStreamField::getTypeString (16 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamField::isPrimitive (27 bytes)   inline (hot)
                                  @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 151   java.io.ObjectOutputStream::writeTypeString (40 bytes)   inline (hot)
                                @ 16   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                  @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                @ 27   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                  @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                    @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                                @ 36   java.io.ObjectOutputStream::writeString (74 bytes)   inline (hot)
                                  @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                    @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                      @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                        @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                  @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   inline (hot)
                                    @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                      @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                                    @ 24   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                      @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                      @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                        @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                      @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139812461811456'/>
   8045  761       1       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)
   8048  692       3       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)   made not entrant
   8050  762       1       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)
   8054  745       3       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)   made not entrant
   8056  677       3       java.util.concurrent.ExecutorCompletionService::newTaskFor (25 bytes)
                              @ 12   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 21   java.util.concurrent.AbstractExecutorService::newTaskFor (9 bytes)
                                @ 5   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   8081  694       3       java.util.concurrent.ThreadPoolExecutor::runStateAtLeast (11 bytes)
   8084  678       3       java.util.concurrent.AbstractExecutorService::newTaskFor (9 bytes)
                              @ 5   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   8093  695       3       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)
   8100  679       3       java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   8106  696       3       java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)
                              @ 4   java.lang.Runnable::run (0 bytes)   not inlineable
   8125  680       3       java.util.concurrent.ExecutorCompletionService$QueueingFuture::&lt;init&gt; (17 bytes)
                              @ 8   java.util.concurrent.FutureTask::&lt;init&gt; (19 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 7   java.util.concurrent.Executors::callable (22 bytes)
                                  @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8139  681       3       java.util.concurrent.FutureTask::&lt;init&gt; (19 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 7   java.util.concurrent.Executors::callable (22 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8165  682       3       java.util.concurrent.Executors::callable (22 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8181  697       3       org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)
               !              @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   callee is too large
   8183  683       3       java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8186  690       3       java.util.concurrent.ThreadPoolExecutor::execute (132 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 21   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
               !              @ 34   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
                              @ 45   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 50   java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
                              @ 61   java.util.concurrent.BlockingQueue::offer (0 bytes)   not inlineable
                              @ 73   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 78   java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
                              @ 86   java.util.concurrent.ThreadPoolExecutor::remove (17 bytes)
                                @ 5   java.util.concurrent.BlockingQueue::remove (0 bytes)   not inlineable
               !                @ 12   java.util.concurrent.ThreadPoolExecutor::tryTerminate (161 bytes)   callee is too large
                              @ 94   java.util.concurrent.ThreadPoolExecutor::reject (12 bytes)
                                @ 6   java.util.concurrent.ThreadPoolExecutor$AbortPolicy::rejectedExecution (42 bytes)   callee is too large
                              @ 101   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
               !              @ 110   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
               !              @ 120   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
                              @ 128   java.util.concurrent.ThreadPoolExecutor::reject (12 bytes)
<writer thread='139812463916800'/>
   8249  756       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)
<writer thread='139812461811456'/>
                                @ 6   java.util.concurrent.ThreadPoolExecutor$AbortPolicy::rejectedExecution (42 bytes)   callee is too large
<writer thread='139812463916800'/>
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                    @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                    @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                    @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
   8257  715       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   made not entrant
   8274  758       4       java.util.concurrent.CountDownLatch::await (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inline (hot)
                                @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
<writer thread='139812461811456'/>
   8284  698   !   3       org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)
                              @ 1   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)
                              @ 14   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)
                              @ 50   java.lang.reflect.Method::invoke (62 bytes)   callee is too large
                              @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
<writer thread='139812463916800'/>
   8291  557       3       java.util.concurrent.CountDownLatch::await (9 bytes)   made not entrant
   8292  759       4       java.util.concurrent.TimeUnit$1::convert (6 bytes)
<writer thread='139812461811456'/>
                              @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
                              @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   callee is too large
                              @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   callee is too large
                              @ 127   java.lang.Exception::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139812463916800'/>
                              @ 2   java.util.concurrent.TimeUnit$5::toNanos (11 bytes)   inline (hot)
                              @ 2   java.util.concurrent.TimeUnit$4::toNanos (11 bytes)   inline (hot)
                               \-&gt; TypeProfile (4923/9847 counts) = java/util/concurrent/TimeUnit$4
                               \-&gt; TypeProfile (4924/9847 counts) = java/util/concurrent/TimeUnit$5
                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
   8311  560       3       java.util.concurrent.TimeUnit$1::convert (6 bytes)   made not entrant
   8312  760       4       org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                              @ 6   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   inline (hot)
                               \-&gt; TypeProfile (9882/9882 counts) = java/util/concurrent/ConcurrentHashMap
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
   8315  561       3       org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)   made not entrant
   8318  764       4       java.util.concurrent.FutureTask::set (36 bytes)
<writer thread='139812461811456'/>
   8345  699       3       org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)
                              @ 43   org.openjdk.jmh.infra.Blackhole::&lt;init&gt; (24 bytes)   disallowed by CompilerOracle
                              @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)
                              @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontrolexcludeactualtest0_0 (39 bytes)   callee is too large
               !              @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                                @ 23   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
                              @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)
                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
                              @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                              @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)
                              @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
                              @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                  @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)
                              @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
                              @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   callee is too large
                              @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)
                                @ 5   java.util.Collection::add (0 bytes)   no static binding
                              @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                              @ 212   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
   8584  771       1       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)
   8585  695       3       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)   made not entrant
   8585  706       2       org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
   8591  700       2       org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontrolexcludeactualtest0_0 (39 bytes)
                              @ 11   org.openjdk.jmh.runner.FailureAssistException::&lt;init&gt; (5 bytes)   not inlineable
                              @ 28   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_jmhType::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_jmhType_B3::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_jmhType_B2::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_jmhType_B1::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.it.ccontrol.CompilerControlExcludeActualTest::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8594  701   !   2       org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)
                              @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                  @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                  @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
                              @ 23   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
   8618  702       2       org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8622  735       2       java.util.concurrent.FutureTask::report (37 bytes)
                              @ 21  java/util/concurrent/CancellationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 33   java.util.concurrent.ExecutionException::&lt;init&gt; (6 bytes)   not inlineable
   8623  753       2       org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8624  703       2       org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
   8625  704       2       org.openjdk.jmh.it.ccontrol.CompilerControlExcludeActualTest::trampoline (5 bytes)
                              @ 1   org.openjdk.jmh.it.ccontrol.CompilerControlExcludeActualTest::strawMethod (1 bytes)   excluded by CompilerOracle
   8626  705       2       org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)
                              @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                  @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                  @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
   8629  707       2       org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8648  708       2       org.openjdk.jmh.results.RawResults::getTime (26 bytes)
   8649  709       2       org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
   8650  738       2       org.openjdk.jmh.results.IterationResult::addResult (137 bytes)
                              @ 1   org.openjdk.jmh.results.Result::getRole (5 bytes)
                              @ 4   org.openjdk.jmh.results.ResultRole::isPrimary (13 bytes)
                              @ 22   java.util.Collections::singleton (9 bytes)
                                @ 5   java.util.Collections$SingletonSet::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 35   java.util.Collection::size (0 bytes)   no static binding
                              @ 49   java.util.ArrayList::&lt;init&gt; (61 bytes)   callee is too large
                              @ 58   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 66   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 85   java.util.Collection::add (0 bytes)   no static binding
                              @ 92   org.openjdk.jmh.results.Result::getRole (5 bytes)
                              @ 95   org.openjdk.jmh.results.ResultRole::isSecondary (20 bytes)
                              @ 116   org.openjdk.jmh.util.TreeMultimap::&lt;init&gt; (12 bytes)
                                @ 5   java.util.TreeMap::&lt;init&gt; (20 bytes)
                                  @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   org.openjdk.jmh.util.DelegatingMultimap::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 127   org.openjdk.jmh.results.Result::getLabel (5 bytes)
                              @ 131   org.openjdk.jmh.util.DelegatingMultimap::put (44 bytes)   callee is too large
   8691  710       2       org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)
                              @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 18   org.openjdk.jmh.results.Result::of (9 bytes)
                                @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)
                                  @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   callee is too large
                              @ 33   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 38   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 41   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)
                                @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   callee is too large
   8711  712       2       org.openjdk.jmh.results.Result::of (9 bytes)
                              @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)
                                @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139812463916800'/>
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   (intrinsic)
                              @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   inline (hot)
                                @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                                @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                                 \-&gt; TypeProfile (4961/9922 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                                 \-&gt; TypeProfile (4961/9922 counts) = java/util/concurrent/FutureTask
                                  @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                  @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4705/4705 counts) = java/util/concurrent/LinkedBlockingQueue
               !                    @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   inline (hot)
                                      @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                      @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                      @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                        @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                          @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                            @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                          @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                                @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                            @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                            @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                            @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                      @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                      @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                                      @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                        @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                                      @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                       \-&gt; TypeProfile (9936/9936 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                        @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                         \-&gt; TypeProfile (15777/15777 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                          @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                          @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                          @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                              @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                            @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                      @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                        @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                          @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                            @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                            @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                          @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                            @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                              @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                              @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
               !                      @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                        @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                            @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                  @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inlining too deep
                                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                              @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                        @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                         \-&gt; TypeProfile (10998/10998 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                          @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                           \-&gt; TypeProfile (15777/15777 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                            @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                            @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                                @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                                @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                        @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                          @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                            @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                              @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                                        @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                      @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
<writer thread='139812461811456'/>
   8742  720       2       org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)
                              @ 4   java.lang.Enum::ordinal (5 bytes)
   8745  727       2       org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                                @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
                              @ 29   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                                @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
   8772  728       2       org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)
                              @ 5   java.util.Collection::add (0 bytes)   no static binding
   8773  729       2       org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)
                              @ 3   java.lang.String::equals (81 bytes)   callee is too large
                              @ 15   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
   8777  730       2       java.util.concurrent.FutureTask::done (1 bytes)
   8781  731       2       java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)
                              @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)
                              @ 11   java.util.concurrent.BlockingQueue::add (0 bytes)   not inlineable
   8790  732       2       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)
   8791  733   !   2       java.util.concurrent.ThreadPoolExecutor::getTask (179 bytes)
                              @ 6   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 11   java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
                              @ 29   java.util.concurrent.BlockingQueue::isEmpty (10 bytes)   not inlineable
                              @ 38   java.util.concurrent.ThreadPoolExecutor::decrementWorkerCount (15 bytes)
                                @ 5   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                                @ 8   java.util.concurrent.ThreadPoolExecutor::compareAndDecrementWorkerCount (12 bytes)
                                  @ 8   java.util.concurrent.atomic.AtomicInteger::compareAndSet (13 bytes)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 44   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
                              @ 100   java.util.concurrent.BlockingQueue::isEmpty (10 bytes)   not inlineable
                              @ 134   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
                              @ 149   java.util.concurrent.BlockingQueue::take (0 bytes)   not inlineable
                              @ 110   java.util.concurrent.ThreadPoolExecutor::compareAndDecrementWorkerCount (12 bytes)
                                @ 8   java.util.concurrent.atomic.AtomicInteger::compareAndSet (13 bytes)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   8827  743   !   2       org.openjdk.jmh.runner.BenchmarkHandler::stopProfilers (66 bytes)
                              @ 4   java.util.List::iterator (0 bytes)   no static binding
                              @ 13   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 23   java.util.Iterator::next (0 bytes)   no static binding
                              @ 39   org.openjdk.jmh.profile.InternalProfiler::afterIteration (0 bytes)   not inlineable
                              @ 44   org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
                                @ 1   java.util.Collection::iterator (0 bytes)   no static binding
                                @ 8   java.util.Iterator::hasNext (0 bytes)   no static binding
                                @ 17   java.util.Iterator::next (0 bytes)   no static binding
                                @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
                              @ 58   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
   8848  744   !   2       com.sun.proxy.$Proxy0::iterationResult (52 bytes)
                              @ 23   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 32   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
<writer thread='139812462864128'/>
                              @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 42   java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)   inline (hot)
                              @ 42   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)   inline (hot)
                               \-&gt; TypeProfile (3586/7172 counts) = org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask
                               \-&gt; TypeProfile (3586/7172 counts) = java/util/concurrent/Executors$RunnableAdapter
               !                @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   inline (hot)
                                  @ 1   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)   accessor
                                  @ 14   java.lang.ThreadLocal::get (38 bytes)   inline (hot)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                                     \-&gt; TypeProfile (3853/3937 counts) = org/openjdk/jmh/runner/BenchmarkHandler$1
                                    @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                      @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                        @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                        @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                                    @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                                  @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)   accessor
                                  @ 50   java.lang.reflect.Method::invoke (62 bytes)   inline (hot)
                                    @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)   inline (hot)
                                      @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   (intrinsic)
                                      @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                                    @ 56   sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)   inline (hot)
                                     \-&gt; TypeProfile (3731/3731 counts) = sun/reflect/DelegatingMethodAccessorImpl
               !                      @ 6   sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)   inline (hot)
                                       \-&gt; TypeProfile (3456/3762 counts) = sun/reflect/GeneratedMethodAccessor1
                                        @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   inline (hot)
                                          @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)   accessor
                                          @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontrolexcludeactualtest0_0 (39 bytes)   inline (hot)
               !                          @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   inline (hot)
                                            @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inline (hot)
                                                @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                          @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                          @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)   accessor
                                          @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                                          @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   inline (hot)
                                            @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inline (hot)
                                                @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                          @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)   accessor
                                          @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)   accessor
                                          @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)   inline (hot)
                                            @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)   inline (hot)
                                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inline (hot)
                                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                          @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)   inline (hot)
                                          @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)   accessor
                                          @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   inline (hot)
                                            @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.TimeUnit$5::toNanos (11 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.TimeUnit$4::toNanos (11 bytes)   inline (hot)
                                               \-&gt; TypeProfile (3824/7649 counts) = java/util/concurrent/TimeUnit$4
                                               \-&gt; TypeProfile (3825/7649 counts) = java/util/concurrent/TimeUnit$5
                                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
                                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
                                            @ 18   org.openjdk.jmh.results.Result::of (9 bytes)   inline (hot)
                                              @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                            @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)   inline (hot)
                                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   inline (hot)
                                              @ 4   java.lang.Enum::ordinal (5 bytes)   accessor
                                            @ 33   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inlining too deep
                                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inlining too deep
                                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 38   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inlining too deep
                                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inlining too deep
                                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 41   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                              @ 13   java.lang.String::&lt;init&gt; (82 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)   inline (hot)
                                              @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 14   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)   inline (hot)
                                                  @ 6   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (7804/7804 counts) = java/util/concurrent/ConcurrentHashMap
                                                @ 29   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)   inline (hot)
                                                  @ 6   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (7804/7804 counts) = java/util/concurrent/ConcurrentHashMap
                                          @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)   inline (hot)
                                            @ 5   java.util.ArrayList::add (29 bytes)   inline (hot)
                                             \-&gt; TypeProfile (3659/3659 counts) = java/util/ArrayList
                                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                                  @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                                  @ 22   java.util.ArrayList::grow (45 bytes)   inlining too deep
                                          @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                                  @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)   never executed
                                  @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)   never executed
                                  @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)   accessor
                                  @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   too big
                                  @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   too big
               !                @ 4   java.util.concurrent.FutureTask::run (126 bytes)   inline (hot)
                                 \-&gt; TypeProfile (3724/3724 counts) = java/util/concurrent/FutureTask
                                  @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                  @ 42   java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)   inline (hot)
                                  @ 42   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)   inline (hot)
                                   \-&gt; TypeProfile (3586/7172 counts) = org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask
                                   \-&gt; TypeProfile (3586/7172 counts) = java/util/concurrent/Executors$RunnableAdapter
               !                    @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   inline (hot)
                                      @ 1   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                      @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)   accessor
                                      @ 14   java.lang.ThreadLocal::get (38 bytes)   inline (hot)
                                        @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                                         \-&gt; TypeProfile (3853/3937 counts) = org/openjdk/jmh/runner/BenchmarkHandler$1
                                        @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                          @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                            @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                            @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                            @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                                        @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                                      @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)   accessor
                                      @ 50   java.lang.reflect.Method::invoke (62 bytes)   inline (hot)
                                        @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)   inline (hot)
                                          @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   (intrinsic)
                                          @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                                        @ 56   sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)   inline (hot)
                                         \-&gt; TypeProfile (3731/3731 counts) = sun/reflect/DelegatingMethodAccessorImpl
               !                          @ 6   sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)   inline (hot)
                                           \-&gt; TypeProfile (3456/3762 counts) = sun/reflect/GeneratedMethodAccessor1
                                            @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   inline (hot)
                                              @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)   accessor
                                              @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontrolexcludeactualtest0_0 (39 bytes)   inline (hot)
               !                              @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inlining too deep
                                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inlining too deep
                                              @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                              @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)   accessor
                                              @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                                              @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inlining too deep
                                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inlining too deep
                                              @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)   accessor
                                              @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)   accessor
                                              @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)   inline (hot)
                                                  @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inlining too deep
                                              @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)   inline (hot)
                                              @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)   accessor
                                              @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   inline (hot)
                                                @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.TimeUnit$5::toNanos (11 bytes)   inlining too deep
                                                  @ 2   java.util.concurrent.TimeUnit$4::toNanos (11 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (3824/7649 counts) = java/util/concurrent/TimeUnit$4
                                                   \-&gt; TypeProfile (3825/7649 counts) = java/util/concurrent/TimeUnit$5
                                                @ 18   org.openjdk.jmh.results.Result::of (9 bytes)   inline (hot)
                                                  @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)   inlining too deep
                                                @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)   inline (hot)
                                                  @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)   inlining too deep
                                                @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   inline (hot)
                                                  @ 4   java.lang.Enum::ordinal (5 bytes)   accessor
                                                @ 33   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inlining too deep
                                                @ 38   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inlining too deep
<writer thread='139812461811456'/>
               !m                 @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 48   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
<writer thread='139812462864128'/>
                                                @ 41   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                                  @ 13   java.lang.String::&lt;init&gt; (82 bytes)   inlining too deep
                                                @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)   inline (hot)
                                                  @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   inlining too deep
                                              @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)   inline (hot)
                                                @ 5   java.util.ArrayList::add (29 bytes)   inline (hot)
                                                 \-&gt; TypeProfile (3659/3659 counts) = java/util/ArrayList
                                                  @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inlining too deep
                                              @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                                      @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)   never executed
                                      @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)   never executed
                                      @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)   accessor
                                      @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   too big
                                      @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   too big
               !                    @ 4   java.util.concurrent.FutureTask::run (126 bytes)   recursive inlining is too deep
                                     \-&gt; TypeProfile (3724/3724 counts) = java/util/concurrent/FutureTask
                                  @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   too big
                                  @ 71   java.util.concurrent.FutureTask::set (36 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   (intrinsic)
                                    @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   inline (hot)
                                      @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                                      @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                                       \-&gt; TypeProfile (4142/8284 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                                       \-&gt; TypeProfile (4142/8284 counts) = java/util/concurrent/FutureTask
                                        @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                        @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                         \-&gt; TypeProfile (3886/3886 counts) = java/util/concurrent/LinkedBlockingQueue
               !                          @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   inline (hot)
                                            @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                            @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                              @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                                @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inlining too deep
                                                  @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                                  @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                                  @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                            @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                            @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                                            @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                                            @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                             \-&gt; TypeProfile (8284/8284 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                               \-&gt; TypeProfile (13953/13953 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                                @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                                  @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inlining too deep
                                                  @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                            @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inlining too deep
                                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                                  @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                                  @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inlining too deep
               !                            @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                              @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                                  @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                  @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inlining too deep
                                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                               \-&gt; TypeProfile (8637/8637 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                                 \-&gt; TypeProfile (13953/13953 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                                  @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inlining too deep
                                              @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inlining too deep
                                                  @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inlining too deep
                                              @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                            @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                  @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)   never executed
                              @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   too big
                              @ 71   java.util.concurrent.FutureTask::set (36 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   (intrinsic)
                                @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   inline (hot)
                                  @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                                  @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4142/8284 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                                   \-&gt; TypeProfile (4142/8284 counts) = java/util/concurrent/FutureTask
                                    @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                    @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                     \-&gt; TypeProfile (3886/3886 counts) = java/util/concurrent/LinkedBlockingQueue
               !                      @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   inline (hot)
                                        @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                        @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                          @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                        @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                            @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                  @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inlining too deep
                                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                              @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                        @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                        @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                                        @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                          @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                                        @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                         \-&gt; TypeProfile (8284/8284 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                          @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                           \-&gt; TypeProfile (13953/13953 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                            @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                            @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                                @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                                @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                        @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                          @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                            @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                              @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
               !                        @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                          @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inlining too deep
                                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                          @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                           \-&gt; TypeProfile (8637/8637 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                            @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                             \-&gt; TypeProfile (13953/13953 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                              @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inlining too deep
                                                  @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inlining too deep
                                                  @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inlining too deep
                                                @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                            @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                                          @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                        @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                              @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)   never executed
<writer thread='139812461811456'/>
   8881  776       3       java.util.Arrays::fill (21 bytes)
   8894  671   !   2       sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)
                              @ 8  java/lang/NullPointerException::&lt;init&gt; (not loaded)   not inlineable
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 52   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 60   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlExcludeActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   callee is too large
                              @ 69   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
   8900  622       2       java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease (12 bytes)
<writer thread='139812463916800'/>
   8912  562       3       java.util.concurrent.FutureTask::set (36 bytes)   made not entrant
<writer thread='139812461811456'/>
                              @ 2   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 7   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
<writer thread='139812463916800'/>
   8926  767       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
<writer thread='139812461811456'/>
   8938  773       2       java.util.concurrent.TimeUnit$4::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
   8940  763       3       java.io.ObjectStreamClass::getSuperDesc (9 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   8942  651       1       java.lang.Enum::name (5 bytes)
<writer thread='139812463916800'/>
   8943  714       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   made not entrant
   8943  769       4       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)
<writer thread='139812461811456'/>
   8943  774       3       java.io.ObjectOutputStream::writeEnum (63 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 10   java.io.ObjectStreamClass::getSuperDesc (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 18   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 33   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 55   java.lang.Enum::name (5 bytes)
                              @ 59   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
<writer thread='139812463916800'/>
                              @ 4   java.util.HashMap::get (23 bytes)   inline (hot)
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.reflect.Method::hashCode (19 bytes)   inline (hot)
                                    @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                                    @ 4   java.lang.Class::getName (21 bytes)   inline (hot)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 7   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 11   java.lang.reflect.Method::getName (5 bytes)   accessor
                                    @ 14   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                  @ 59   java.lang.reflect.Method::equals (69 bytes)   never executed
                                  @ 126   java.lang.reflect.Method::equals (69 bytes)   never executed
<writer thread='139812461811456'/>
   9040  781       3       java.io.ObjectOutputStream::defaultWriteObject (54 bytes)
                              @ 15  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
                              @ 20   java.io.SerialCallbackContext::getObj (9 bytes)
                                @ 1   java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                                  @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
                              @ 25   java.io.SerialCallbackContext::getDesc (5 bytes)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
               !              @ 41   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   9062  777       3       java.util.Arrays::rangeCheck (74 bytes)
<writer thread='139812463916800'/>
   9063  568       3       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   made not entrant
   9064  775       4       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                              @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                               \-&gt; TypeProfile (12632/12632 counts) = java/util/concurrent/CountDownLatch$Sync
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
   9071  558       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   made not entrant
<writer thread='139812461811456'/>
                              @ 13   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 18   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 22   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 27   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 31   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 36   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 39   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 42   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 55  java/lang/ArrayIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 69  java/lang/ArrayIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139812463916800'/>
   9089  770   !   4       java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)
<writer thread='139812461811456'/>
   9097  778       3       java.io.SerialCallbackContext::getObj (9 bytes)
                              @ 1   java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                                @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
   9099  779       3       java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                              @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
   9119  782       3       java.io.ObjectOutputStream::writeInt (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
   9123  643       1       java.util.TreeMap::access$100 (5 bytes)
   9123  345       3       java.util.WeakHashMap::indexFor (6 bytes)
   9124  757       1       java.io.ObjectOutputStream$HandleTable::size (5 bytes)
   9169  787   !   3       java.io.ObjectStreamClass::invokeWriteObject (79 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 24   java.lang.reflect.Method::invoke (62 bytes)   callee is too large
                              @ 33   java.lang.reflect.InvocationTargetException::getTargetException (5 bytes)   not inlineable
                              @ 54   java.io.ObjectStreamClass::throwMiscException (43 bytes)   callee is too large
                              @ 66  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 74  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
   9173  788       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)
                              @ 33   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 53   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 66   java.io.OutputStream::write (79 bytes)   no static binding
<writer thread='139812463916800'/>
                              @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                              @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                  @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                  @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                  @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                    @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                      @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                        @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                        @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                          @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                        @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                        @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                        @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                    @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                    @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                    @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                              @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                              @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                              @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                              @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                               \-&gt; TypeProfile (13766/13766 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                 \-&gt; TypeProfile (19454/19454 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                  @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                  @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                    @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                      @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                      @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                        @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                      @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                        @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                    @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                    @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                    @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                    @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                  @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                    @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                      @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                      @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
               !              @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                    @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                    @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                      @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                        @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                          @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                          @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                            @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                          @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                          @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                      @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                      @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                      @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                 \-&gt; TypeProfile (13906/13906 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                   \-&gt; TypeProfile (19454/19454 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                    @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                    @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                      @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                        @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                      @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                        @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                          @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                        @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                          @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                        @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                          @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                      @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                        @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                    @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                      @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                      @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                      @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                      @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                      @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                    @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                      @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                        @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                      @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                        @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                        @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                              @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
<writer thread='139812461811456'/>
   9357  794       1       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)
   9358  732       2       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)   made not entrant
<writer thread='139812463916800'/>
   9389  574   !   3       java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   made not entrant
   9403  783       4       java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)
   9405  556       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   made not entrant
   9414  768       4       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
<writer thread='139812461811456'/>
   9420  795       2       java.io.ObjectOutputStream::writeNull (10 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   9514  801       2       java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                              @ 5   java.util.Arrays::fill (21 bytes)
                              @ 18   java.util.Arrays::fill (28 bytes)
                                @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
<writer thread='139812463916800'/>
                              @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   inline (hot)
                                @ 4   java.util.HashMap::get (23 bytes)   inline (hot)
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.reflect.Method::hashCode (19 bytes)   inline (hot)
                                      @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                                      @ 4   java.lang.Class::getName (21 bytes)   inline (hot)
                                        @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                      @ 7   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 11   java.lang.reflect.Method::getName (5 bytes)   accessor
                                      @ 14   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                    @ 59   java.lang.reflect.Method::equals (69 bytes)   never executed
                                    @ 126   java.lang.reflect.Method::equals (69 bytes)   never executed
                              @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)   inline (hot)
               !m               @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   already compiled into a big method
<writer thread='139812461811456'/>
   9531  802       2       java.io.ObjectOutputStream::clear (15 bytes)
                              @ 4   java.io.ObjectOutputStream$ReplaceTable::clear (24 bytes)
                                @ 9   java.io.ObjectOutputStream$HandleTable::size (5 bytes)
                                @ 13   java.util.Arrays::fill (28 bytes)
                                  @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
                                @ 20   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                  @ 5   java.util.Arrays::fill (21 bytes)
                                  @ 18   java.util.Arrays::fill (28 bytes)   callee is too large
                              @ 11   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                @ 5   java.util.Arrays::fill (21 bytes)
                                @ 18   java.util.Arrays::fill (28 bytes)
                                  @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
   9536  803       2       java.util.ArrayList::writeObject (60 bytes)
                              @ 6   java.io.ObjectOutputStream::defaultWriteObject (54 bytes)   callee is too large
                              @ 14   java.io.ObjectOutputStream::writeInt (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
               !              @ 34   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
                              @ 55  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
   9540  804       2       java.util.TreeMap::writeObject (65 bytes)
                              @ 1   java.io.ObjectOutputStream::defaultWriteObject (54 bytes)   callee is too large
                              @ 9   java.io.ObjectOutputStream::writeInt (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 13   java.util.TreeMap::entrySet (27 bytes)
                                @ 19   java.util.TreeMap$EntrySet::&lt;init&gt; (10 bytes)
                                  @ 6   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 16   java.util.Set::iterator (0 bytes)   no static binding
                              @ 23   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 32   java.util.Iterator::next (0 bytes)   no static binding
                              @ 43   java.util.Map$Entry::getKey (0 bytes)   not inlineable
               !              @ 48   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
                              @ 53   java.util.Map$Entry::getValue (0 bytes)   not inlineable
               !              @ 58   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
   9549  805       2       java.util.TreeMap::entrySet (27 bytes)
                              @ 19   java.util.TreeMap$EntrySet::&lt;init&gt; (10 bytes)
                                @ 6   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   9561  806       2       java.util.TreeMap$EntrySet::iterator (19 bytes)
                              @ 12   java.util.TreeMap::getFirstEntry (26 bytes)
                              @ 15   java.util.TreeMap$EntryIterator::&lt;init&gt; (12 bytes)
                                @ 8   java.util.TreeMap$PrivateEntryIterator::&lt;init&gt; (28 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 11   java.util.TreeMap::access$100 (5 bytes)
   9563  807       2       java.util.TreeMap::getFirstEntry (26 bytes)
   9564  808       2       java.util.TreeMap$EntryIterator::&lt;init&gt; (12 bytes)
                              @ 8   java.util.TreeMap$PrivateEntryIterator::&lt;init&gt; (28 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 11   java.util.TreeMap::access$100 (5 bytes)
   9586  810       2       java.util.TreeMap$PrivateEntryIterator::hasNext (13 bytes)
   9589  809       2       java.util.TreeMap$PrivateEntryIterator::&lt;init&gt; (28 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 11   java.util.TreeMap::access$100 (5 bytes)
<writer thread='139812463916800'/>
   9596  567       3       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)   made not entrant
   9603  765       4       java.util.concurrent.FutureTask::finishCompletion (74 bytes)
                              @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                              @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                               \-&gt; TypeProfile (6612/13224 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                               \-&gt; TypeProfile (6612/13224 counts) = java/util/concurrent/FutureTask
                                @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                 \-&gt; TypeProfile (6009/6009 counts) = java/util/concurrent/LinkedBlockingQueue
               !                  @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   already compiled into a big method
   9615  564       3       java.util.concurrent.FutureTask::finishCompletion (74 bytes)   made not entrant
<writer thread='139812461811456'/>
   9683  811   !   2       sun.reflect.GeneratedMethodAccessor2::invoke (66 bytes)
<writer thread='139812463916800'/>
   9683  772       4       java.io.ObjectStreamClass::writeNonProxy (161 bytes)
<writer thread='139812461811456'/>
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 53   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 40   java.util.TreeMap::writeObject (65 bytes)   callee is too large
                              @ 62   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
   9818  812   !   2       sun.reflect.GeneratedMethodAccessor3::invoke (66 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 53   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 40   java.util.ArrayList::writeObject (60 bytes)   callee is too large
                              @ 62   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
<writer thread='139812463916800'/>
                              @ 5   java.io.ObjectOutputStream::writeUTF (9 bytes)   already compiled into a big method
                              @ 10   java.io.ObjectStreamClass::getSerialVersionUID (33 bytes)   inline (hot)
                                @ 29   java.lang.Long::longValue (5 bytes)   inline (hot)
                              @ 13   java.io.ObjectOutputStream::writeLong (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   inline (hot)
                                  @ 22   java.io.Bits::putLong (86 bytes)   inline (hot)
                              @ 88   java.io.ObjectOutputStream::writeByte (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 97   java.io.ObjectOutputStream::writeShort (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                  @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                              @ 122   java.io.ObjectStreamField::getTypeCode (9 bytes)   inline (hot)
                                @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 125   java.io.ObjectOutputStream::writeByte (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 131   java.io.ObjectStreamField::getName (5 bytes)   accessor
                              @ 134   java.io.ObjectOutputStream::writeUTF (9 bytes)   already compiled into a big method
                              @ 139   java.io.ObjectStreamField::isPrimitive (27 bytes)   inline (hot)
                                @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 148   java.io.ObjectStreamField::getTypeString (16 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamField::isPrimitive (27 bytes)   inline (hot)
                                  @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 151   java.io.ObjectOutputStream::writeTypeString (40 bytes)   inline (hot)
                                @ 16   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                  @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                @ 27   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                  @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                    @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                                @ 36   java.io.ObjectOutputStream::writeString (74 bytes)   inline (hot)
                                  @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                    @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                      @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                        @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                  @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   inline (hot)
                                    @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                      @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                                    @ 24   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                      @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                      @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                        @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                      @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139812461811456'/>
  10013  813       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)
                              @ 43   java.lang.Math::min (11 bytes)
                              @ 68   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 97   java.io.DataOutputStream::writeInt (65 bytes)   callee is too large
  10124  814       2       java.io.ObjectOutputStream::reset (49 bytes)
                              @ 13   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 32   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 36   java.io.ObjectOutputStream::clear (15 bytes)
                                @ 4   java.io.ObjectOutputStream$ReplaceTable::clear (24 bytes)
                                  @ 9   java.io.ObjectOutputStream$HandleTable::size (5 bytes)
                                  @ 13   java.util.Arrays::fill (28 bytes)   callee is too large
                                  @ 20   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                    @ 5   java.util.Arrays::fill (21 bytes)
                                    @ 18   java.util.Arrays::fill (28 bytes)   callee is too large
                                @ 11   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                  @ 5   java.util.Arrays::fill (21 bytes)
                                  @ 18   java.util.Arrays::fill (28 bytes)   callee is too large
                              @ 44   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
  10158  815       2       java.nio.DirectLongBufferU::put (18 bytes)
                              @ 6   java.nio.Buffer::checkIndex (22 bytes)   intrinsic
                              @ 9   java.nio.DirectLongBufferU::ix (10 bytes)
                              @ 13   sun.misc.Unsafe::putLong (0 bytes)   intrinsic
<writer thread='139812892006144'/>
  10161  512   !   4       java.io.ObjectStreamClass::lookup (335 bytes)   made not entrant
<writer thread='139812461811456'/>
  10166  816       2       java.lang.Long::valueOf (40 bytes)
                              @ 36   java.lang.Long::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10169  817       2       sun.reflect.ClassFileAssembler::emitConstantPoolNameAndType (28 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 13   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
  10180  818       2       java.lang.Class::getDeclaredMethod (67 bytes)
                              @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                              @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   callee is too large
                              @ 16   java.lang.Class::searchMethods (90 bytes)   callee is too large
                              @ 32   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 36   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 39   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 44   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 52   java.lang.Class::argumentTypesToString (79 bytes)   callee is too large
                              @ 55   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 58   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 61   java.lang.NoSuchMethodException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139812892006144'/>
  10189  470   !   4       java.io.ObjectOutputStream::writeObject0 (619 bytes)   made not entrant
<writer thread='139812461811456'/>
  10197  819       2       java.io.DataOutputStream::writeUTF (435 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 22   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 83   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 88   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 92   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 97   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 100   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 103  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
                              @ 220   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 267   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 426   java.io.DataOutput::write (0 bytes)   not inlineable
<writer thread='139812892006144'/>
  10205  578   !   4       java.io.ObjectOutputStream::writeSerialData (221 bytes)   made not entrant
  10222  624       4       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   made not entrant
  10226  768       4       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)   made not entrant
  10226  769       4       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   made not entrant
<writer thread='139812461811456'/>
  10247  821       2       java.lang.Integer::reverseBytes (26 bytes)
  10248  820  s    2       java.io.DataOutputStream::write (16 bytes)
                              @ 7   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 12   java.io.DataOutputStream::incCount (20 bytes)
<writer thread='139812463916800'/>
  10252  638       2       java.io.ObjectStreamClass::writeNonProxy (161 bytes)   made not entrant
  10283  796   !   4       java.util.concurrent.ThreadPoolExecutor::getTask (179 bytes)
<writer thread='139812461811456'/>
  10293  822       2       java.io.File::getName (42 bytes)
                              @ 7   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 27   java.lang.String::substring (56 bytes)   callee is too large
                              @ 38   java.lang.String::substring (56 bytes)   callee is too large
  10299  823       2       java.lang.Class::getDeclaredField (34 bytes)
                              @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                              @ 11   java.lang.Class::privateGetDeclaredFields (67 bytes)   callee is too large
                              @ 15   java.lang.Class::searchFields (41 bytes)   callee is too large
                              @ 28   java.lang.NoSuchFieldException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139811586303744'/>
  10310  686  s    4       java.io.BufferedOutputStream::flush (12 bytes)   made not entrant
<dependency_failed type='leaf_type' ctxk='java/net/SocketException' witness='sun/net/ConnectionResetException' stamp='10.311'/>
<dependency_failed type='leaf_type' ctxk='java/net/SocketException' witness='sun/net/ConnectionResetException' stamp='10.311'/>
<dependency_failed type='leaf_type' ctxk='java/net/SocketException' witness='sun/net/ConnectionResetException' stamp='10.311'/>
<writer thread='139812468127488'/>
  10312  688   !   4       java.net.SocketOutputStream::socketWrite (159 bytes)   made not entrant
  10312  687       4       java.net.SocketOutputStream::write (8 bytes)   made not entrant
<writer thread='139812892006144'/>
C1 Runtime statistics:
 _resolve_invoke_virtual_cnt:     116
 _resolve_invoke_opt_virtual_cnt: 418
 _resolve_invoke_static_cnt:      82
 _handle_wrong_method_cnt:        98
 _ic_miss_cnt:                    48
 _generic_arraycopy_cnt:          0
 _generic_arraycopystub_cnt:      0
 _byte_arraycopy_cnt:             0
 _short_arraycopy_cnt:            0
 _int_arraycopy_cnt:              0
 _long_arraycopy_cnt:             0
 _primitive_arraycopy_cnt:        0
 _oop_arraycopy_cnt (C):          0
 _oop_arraycopy_cnt (stub):       0
 _arraycopy_slowcase_cnt:         0
 _arraycopy_checkcast_cnt:        0
 _arraycopy_checkcast_attempt_cnt:0
 _new_type_array_slowcase_cnt:    0
 _new_object_array_slowcase_cnt:  0
 _new_instance_slowcase_cnt:      0
 _new_multi_array_slowcase_cnt:   0
 _monitorenter_slowcase_cnt:      0
 _monitorexit_slowcase_cnt:       0
 _patch_code_slowcase_cnt:        1
 _throw_range_check_exception_count:            0:
 _throw_index_exception_count:                  0:
 _throw_div0_exception_count:                   0:
 _throw_null_pointer_exception_count:           0:
 _throw_class_cast_exception_count:             0:
 _throw_incompatible_class_change_error_count:  0:
 _throw_array_store_exception_count:            0:
 _throw_count:                                  0:

<statistics type='deoptimization'>
Deoptimization traps recorded:
    18 (100.0%) total
     null_check/make_not_entrant/checkcast: 3 (16.7%)
   null_assert/make_not_entrant/instanceof: 1 (5.6%)
                       constraint/none/nop: 7 (38.9%)
         unstable_if/reinterpret/if_icmpge: 1 (5.6%)
         unstable_if/reinterpret/if_icmplt: 1 (5.6%)
              unstable_if/reinterpret/ifeq: 1 (5.6%)
               unstable_if/reinterpret/nop: 4 (22.2%)
</statistics>
<statistics type='SharedRuntime'>
    3 new instance requires GC
    6 new array requires GC
   48 inline cache miss in compiled
   98 wrong method
   82 unresolved static call site
  116 unresolved virtual call site
  418 unresolved opt virtual call site
  211 slow partial subtype
201678 byte array copies
272655 short array copies
16341 int array copies
 3132 long array copies
    1 find exception handler
AdapterHandlerTable: empty 147 longest 3 total 201 average 1.376712
AdapterHandlerTable: lookups 11293 buckets 11711 equals 10815 hits 10815 compact 10815
</statistics>
<statistics type='nmethod'>
Statistics for 79 native nmethods:
 N. total size  = 75512
 N. relocation  = 6776
 N. main code   = 44008
Statistics for 669 bytecoded nmethods:
 total in heap  = 2258104
 relocation     = 141448
 constants      = 736
 main code      = 1119968
 stub code      = 131216
 oops           = 1072
 scopes data    = 226768
 scopes pcs     = 361600
 dependencies   = 5856
 handler table  = 21288
 nul chk table  = 15824
Debug Data Chunks: 60577, shared 6912+24777, non-SP&apos;s elided 474
PcDesc Statistics:  2046 queries, 9.53 comparisons per query
  caches=669 queries=2046/0, hits=0+355, tests=7467+12036, adds=1691
</statistics>
<statistics type='opto'>
--- Compiler Statistics ---
Methods seen: 1041  Methods parsed: 1041  Nodes created: 201698
Blocks parsed: 3030  Blocks seen: 3865
3887 original NULL checks - 2998 elided (77%); optimizer leaves 766,
505 made implicit (65%)
CCP: 114  constants found: 0
Total frameslots = 1152, Max frameslots = 40
Inserted 0 spill loads, 0 spill stores, 0 mem-mem moves and 0 copies.
Total load cost=      0, store cost =      0, mem-mem cost =  0.00, copy cost =     0.
Adjusted spill cost =       0.
Conservatively coalesced 999 copies, 0 pairs, 4861 post alloc.
Used cisc instruction  100,  remained in register 1450
Average allocation trips 1.736434
High Pressure Blocks = 0, Low Pressure Blocks = 0
Nops added 0 bytes to total of 141816 bytes, for 0.00%
Peephole: peephole rules applied: 0
PhaseIdealLoop=494, sum _unique=500715
</statistics>
<statistics type='intrinsic'>
Compiler intrinsic usage:
     1 ( 0.4%) _hashCode (worked,virtual)
     5 ( 1.9%) _getClass (worked)
    24 ( 9.1%) _min (worked)
     2 ( 0.8%) _max (worked)
     3 ( 1.1%) _doubleToLongBits (worked)
    16 ( 6.0%) _identityHashCode (worked)
    35 (13.2%) _arraycopy (worked)
     6 ( 2.3%) _isInterrupted (worked)
    53 (20.0%) _currentThread (worked)
     2 ( 0.8%) _isInstance (worked)
     1 ( 0.4%) _isArray (worked)
     1 ( 0.4%) _isPrimitive (worked)
     1 ( 0.4%) _getComponentType (worked)
     2 ( 0.8%) _getClassAccessFlags (worked)
     2 ( 0.8%) _copyOf (worked)
     1 ( 0.4%) _equals (worked)
    10 ( 3.8%) _Reference_get (worked)
     0 ( 0.0%) _unpark (failed)
     2 ( 0.8%) _getObject (worked)
     3 ( 1.1%) _getBoolean (worked)
     3 ( 1.1%) _getByte (worked)
     3 ( 1.1%) _getShort (worked)
     3 ( 1.1%) _getChar (worked)
     3 ( 1.1%) _getInt (worked)
     3 ( 1.1%) _getLong (worked)
     3 ( 1.1%) _getFloat (worked)
     3 ( 1.1%) _getDouble (worked)
     5 ( 1.9%) _getObjectVolatile (worked)
     1 ( 0.4%) _putObjectVolatile (worked)
    15 ( 5.7%) _compareAndSwapObject (worked)
     1 ( 0.4%) _compareAndSwapLong (worked)
    45 (17.0%) _compareAndSwapInt (worked)
     3 ( 1.1%) _putOrderedInt (worked)
     4 ( 1.5%) _getAndAddInt (worked)
   265 (100.0%) total (worked,failed,virtual)
</statistics>
<writer thread='139812468127488'/>
<destroy_vm stamp='10.327'/>
<tty_done stamp='10.525'/>
</tty>
<hotspot_log_done stamp='10.525'/>
</hotspot_log>
