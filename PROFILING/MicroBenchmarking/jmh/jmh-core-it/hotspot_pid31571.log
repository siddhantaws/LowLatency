<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='31571' time_ms='1560356628149'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
25.71-b00-fastdebug
</release>
<info>
OpenJDK 64-Bit Server VM (25.71-b00-fastdebug) for linux-amd64 JRE (1.8.0-internal-suryasnata_2019_06_08_22_39-b00), built on Jun  8 2019 23:17:25 by &quot;suryasnata&quot; with gcc 7.4.0
</info>
</vm_version>
<vm_arguments>
<args>
-Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+PrintInlining -XX:CompileCommandFile=/tmp/jmh7871886856549029991compilecommand 
</args>
<command>
org.openjdk.jmh.runner.ForkedMain 127.0.0.1 36119
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.71-b00-fastdebug
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/endorsed
sun.boot.library.path=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/usr/lib/jvm/java-8-openjdkdebug/jre
java.class.path=/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core-it/target/test-classes:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core-it/target/classes:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core/target/jmh-core-1.18-SNAPSHOT.jar:/home/suryasnata/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/suryasnata/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/suryasnata/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/suryasnata/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-generator-annprocess/target/jmh-generator-annprocess-1.18-SNAPSHOT.jar:
sun.boot.class.path=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
jmh.ignoreLock=true
jmh.core.it.profile=default
sun.java.command=org.openjdk.jmh.runner.ForkedMain 127.0.0.1 36119
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='139919521801984'/>
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='177714'/>
</blob>
<writer thread='139919013099264'/>
    723    1       3       java.lang.String::hashCode (55 bytes)
    726    2       3       java.lang.String::equals (81 bytes)
<writer thread='139919521801984'/>
    747    7     n 0       java.lang.System::arraycopy (native)   (static)
<writer thread='139919013099264'/>
    763    5       3       java.lang.String::charAt (29 bytes)
                              @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
    765    4       3       java.lang.Object::&lt;init&gt; (1 bytes)
    766    8       3       java.lang.String::indexOf (70 bytes)
                              @ 66   java.lang.String::indexOfSupplementary (71 bytes)   callee is too large
    769    6       3       java.lang.Math::min (11 bytes)
    772    3       3       java.lang.String::length (6 bytes)
    773    9       3       java.util.Arrays::copyOfRange (63 bytes)
                              @ 16   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 32   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 35   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 54   java.lang.Math::min (11 bytes)
                              @ 57   java.lang.System::arraycopy (0 bytes)   intrinsic
    801   10       3       java.lang.String::&lt;init&gt; (82 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 13  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 30  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 65  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 75   java.util.Arrays::copyOfRange (63 bytes)   callee is too large
    834   11       3       java.lang.String::getChars (62 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 43  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 58   java.lang.System::arraycopy (0 bytes)   intrinsic
    860   12       3       java.lang.CharacterData::of (120 bytes)
    861   13       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)
    874   14       3       java.util.jar.Attributes$Name::isValid (32 bytes)
                              @ 1   java.util.jar.Attributes$Name::isAlpha (30 bytes)   not inlineable
                              @ 8   java.util.jar.Attributes$Name::isDigit (18 bytes)   not inlineable
    876   15       3       java.util.jar.Attributes$Name::isAlpha (30 bytes)
    911   16       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                              @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                              @ 20   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
    933   17       3       java.lang.System::getSecurityManager (4 bytes)
    936   18       3       java.lang.String::indexOf (7 bytes)
                              @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
    938   19       3       java.lang.String::lastIndexOf (52 bytes)
                              @ 16   java.lang.Math::min (11 bytes)
                              @ 48   java.lang.String::lastIndexOfSupplementary (70 bytes)   callee is too large
    940   20       3       java.lang.String::startsWith (72 bytes)
    943   21       3       java.lang.AbstractStringBuilder::append (50 bytes)
                              @ 5   java.lang.AbstractStringBuilder::appendNull (56 bytes)   callee is too large
                              @ 10   java.lang.String::length (6 bytes)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 35   java.lang.String::getChars (62 bytes)   callee is too large
<writer thread='139919521801984'/>
    948   24     n 0       sun.misc.Unsafe::getObjectVolatile (native)   
<writer thread='139919013099264'/>
    950   23       3       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                              @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
    956   22       3       java.lang.StringBuilder::append (8 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
    989   25       3       sun.nio.cs.UTF_8$Decoder::decode (779 bytes)
<writer thread='139919015204608'/>
    989   26       4       java.lang.String::charAt (29 bytes)
<writer thread='139919013099264'/>
                              @ 12   java.lang.Math::min (11 bytes)
                              @ 117   sun.nio.cs.UTF_8$Decoder::isNotContinuation (17 bytes)
<writer thread='139919015204608'/>
<writer thread='139919013099264'/>
                              @ 124   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 143   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 147   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 182   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 201   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 205   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 251   sun.nio.cs.UTF_8$Decoder::isMalformed3 (45 bytes)   callee is too large
                              @ 258   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 277   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 281   java.lang.String::charAt (29 bytes)
<writer thread='139919015204608'/>
    994    5       3       java.lang.String::charAt (29 bytes)   made not entrant
<writer thread='139919013099264'/>
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 292   sun.nio.cs.UTF_8$Decoder::getByteBuffer (17 bytes)
                                @ 5   java.nio.ByteBuffer::wrap (8 bytes)
               !                  @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                    @ 7   java.nio.HeapByteBuffer::&lt;init&gt; (14 bytes)
                                      @ 10   java.nio.ByteBuffer::&lt;init&gt; (45 bytes)   callee is too large
                                    @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 11   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 301   sun.nio.cs.UTF_8$Decoder::malformedN (192 bytes)   callee is too large
                              @ 304   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 334   java.lang.Character::isSurrogate (18 bytes)
                              @ 341   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 360   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 364   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 385   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 407   sun.nio.cs.UTF_8$Decoder::isMalformed3_2 (34 bytes)
                              @ 421   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 425   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 440   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 444   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 523   sun.nio.cs.UTF_8$Decoder::isMalformed4 (39 bytes)   callee is too large
                              @ 531   java.lang.Character::isSupplementaryCodePoint (18 bytes)
                              @ 601   java.lang.Character::highSurrogate (9 bytes)
                              @ 614   java.lang.Character::lowSurrogate (10 bytes)
                              @ 538   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 557   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 561   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 572   sun.nio.cs.UTF_8$Decoder::getByteBuffer (17 bytes)
                                @ 5   java.nio.ByteBuffer::wrap (8 bytes)
               !                  @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                    @ 7   java.nio.HeapByteBuffer::&lt;init&gt; (14 bytes)
                                      @ 10   java.nio.ByteBuffer::&lt;init&gt; (45 bytes)   callee is too large
                                    @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 11   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 581   sun.nio.cs.UTF_8$Decoder::malformedN (192 bytes)   callee is too large
                              @ 584   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 622   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 664   sun.nio.cs.UTF_8$Decoder::isMalformed4_2 (56 bytes)   callee is too large
                              @ 701   sun.nio.cs.UTF_8$Decoder::isMalformed4_3 (17 bytes)
                              @ 715   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 719   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 734   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 738   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 678   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 682   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 746   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 765   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 769   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139919521801984'/>
   1139   29     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLL)L (native)   (static)
   1155   30     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (native)   (static)
   1162   34     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)L (native)   (static)
   1200   35     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)V (native)   (static)
   1202   36     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)J (native)   (static)
   1204   37     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)L (native)   (static)
   1206   39     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LLL)L (native)   (static)
<writer thread='139919014151936'/>
   1242   48       4       java.lang.String::indexOf (70 bytes)
<writer thread='139919521801984'/>
   1249   49     n 0       java.lang.Object::hashCode (native)   
   1254   50     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)V (native)   (static)
<writer thread='139919014151936'/>
<writer thread='139919521801984'/>
   1270   51     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)L (native)   (static)
<writer thread='139919014151936'/>
   1277    8       3       java.lang.String::indexOf (70 bytes)   made not entrant
<writer thread='139919013099264'/>
   1284   27       1       java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139919521801984'/>
   1296   53     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)L (native)   
   1297   54     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)L (native)   (static)
<writer thread='139919013099264'/>
   1299    4       3       java.lang.Object::&lt;init&gt; (1 bytes)   made not entrant
   1299   28       3       java.lang.Number::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1300   52       3       java.lang.invoke.MemberName::testFlags (16 bytes)
   1301   32       1       java.lang.reflect.Method::getName (5 bytes)
   1302   33       1       java.lang.ref.Reference::get (5 bytes)
   1302   31       1       java.lang.Class::getClassLoader0 (5 bytes)
   1302   41       1       java.lang.invoke.MemberName::getDeclaringClass (5 bytes)
<writer thread='139919521801984'/>
   1306   56     n 0       java.lang.invoke.MethodHandle::linkToStatic(L)L (native)   (static)
   1316   57     n 0       java.lang.Class::isPrimitive (native)   
<writer thread='139919013099264'/>
   1317   55       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 15   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 41   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 83   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 125   jdk.internal.org.objectweb.asm.ByteVector::encodeUTF8 (335 bytes)   callee is too large
<writer thread='139919521801984'/>
   1325   62     n 0       java.lang.invoke.MethodHandle::invokeBasic()L (native)   
   1334   64     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)L (native)   (static)
<writer thread='139919013099264'/>
   1343   59       3       jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)
                              @ 33   jdk.internal.org.objectweb.asm.Item::isEqualTo (354 bytes)   callee is too large
   1346   58       3       jdk.internal.org.objectweb.asm.Item::set (143 bytes)
                              @ 104   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 108   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 90   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 123   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 127   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 133   java.lang.String::hashCode (55 bytes)   callee is too large
   1351   61       3       jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
   1362   60       3       jdk.internal.org.objectweb.asm.Item::&lt;init&gt; (66 bytes)
<writer thread='139919521801984'/>
   1362   67     n 0       java.lang.invoke.MethodHandle::invokeBasic(LL)L (native)   
   1363   68     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)L (native)   (static)
   1368   71     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLL)L (native)   
   1369   72     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLL)L (native)   (static)
<writer thread='139919013099264'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1371   69       3       java.lang.invoke.MemberName::isInvocable (7 bytes)
                              @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
   1387   74       3       jdk.internal.org.objectweb.asm.ClassWriter::put (152 bytes)
   1391   66       3       java.lang.Class::getName (21 bytes)
        
<writer thread='139919521801984'/>
   1399   77     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)L (native)   (static)
   1402   79     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLL)L (native)   
   1403   80     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
   1405   73       3       java.lang.AbstractStringBuilder::append (29 bytes)
<writer thread='139919015204608'/>
   1408   82       4       java.lang.String::hashCode (55 bytes)
   1417    1       3       java.lang.String::hashCode (55 bytes)   made not entrant
<writer thread='139919013099264'/>
                              @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   1430   76       3       java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                              @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
<writer thread='139919521801984'/>
   1441   86     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLL)L (native)   (static)
   1443   87     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLL)L (native)   
   1444   88     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
   1447   38       1       java.lang.Enum::ordinal (5 bytes)
   1448   89       3       jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
   1453   40       1       java.lang.invoke.MethodType::returnType (5 bytes)
   1460   78       1       java.lang.invoke.LambdaForm$Name::type (5 bytes)
<writer thread='139919521801984'/>
   1461   90     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLL)L (native)   
   1462   91     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
   1463   42       1       java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode (5 bytes)
   1466   92       3       java.lang.StringBuilder::append (8 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                  @ 20   java.util.Arrays::copyOf (19 bytes)
                                    @ 11   java.lang.Math::min (11 bytes)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   1475   95       3       java.lang.String::replace (127 bytes)
                              @ 121   java.lang.String::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139919521801984'/>
   1480   97     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLL)L (native)   (static)
   1483   98     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLL)L (native)   
   1483   99     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
   1486   96       3       jdk.internal.org.objectweb.asm.ClassWriter::newUTF8 (70 bytes)
                              @ 8   jdk.internal.org.objectweb.asm.Item::set (143 bytes)   callee is too large
                              @ 16   jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)   callee is too large
                              @ 29   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 33   jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)   callee is too large
                              @ 56   jdk.internal.org.objectweb.asm.Item::&lt;init&gt; (66 bytes)   callee is too large
                              @ 62   jdk.internal.org.objectweb.asm.ClassWriter::put (152 bytes)   callee is too large
   1492   94       3       java.lang.Class::getClassLoader (28 bytes)
<writer thread='139919521801984'/>
   1493  101     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLL)L (native)   (static)
   1504  103     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLL)L (native)   
   1504  104     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLL)L (native)   (static)
   1510  105     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
                              @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 11   java.lang.System::getSecurityManager (4 bytes)
                              @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)
                                @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                  @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                  @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
<writer thread='139919521801984'/>
   1529  107     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLL)L (native)   
   1534  108     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
   1538  106       3       java.lang.String::indexOf (166 bytes)
<writer thread='139919521801984'/>
   1541  109     n 0       java.lang.Class::isArray (native)   
<writer thread='139919013099264'/>
   1572  102       3       java.lang.Object::equals (11 bytes)
   1573   93       3       java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   1575   70       1       java.lang.invoke.LambdaForm$Name::index (5 bytes)
   1575   85       1       java.lang.invoke.LambdaForm$BasicType::basicTypeClass (5 bytes)
<writer thread='139919521801984'/>
   1589  110     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
   1589   81       1       java.lang.invoke.LambdaForm$Name::access$000 (5 bytes)
<writer thread='139919521801984'/>
   1591  112     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLL)L (native)   
<writer thread='139919013099264'/>
   1592  111       3       jdk.internal.org.objectweb.asm.ByteVector::put12 (64 bytes)
<writer thread='139919521801984'/>
   1593  113     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
   1604  116       3       java.util.Objects::requireNonNull (14 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   1605  114       3       java.lang.invoke.MethodTypeForm::canonicalize (233 bytes)
                              @ 10   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 53   sun.invoke.util.Wrapper::asPrimitiveType (20 bytes)
                                @ 1   sun.invoke.util.Wrapper::findWrapperType (25 bytes)
                                  @ 4   sun.invoke.util.Wrapper::hashWrap (62 bytes)   callee is too large
                                @ 10   sun.invoke.util.Wrapper::primitiveType (5 bytes)
                                @ 14   sun.invoke.util.Wrapper::forceType (165 bytes)   callee is too large
                              @ 149   sun.invoke.util.Wrapper::asWrapperType (18 bytes)
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                                @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                                @ 12   sun.invoke.util.Wrapper::wrapperType (52 bytes)   callee is too large
<writer thread='139919521801984'/>
   1615  122     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLLL)L (native)   (static)
   1623  125     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLLLL)L (native)   (static)
<writer thread='139919013099264'/>
   1641  119       3       java.lang.invoke.MethodType::parameterType (7 bytes)
   1642  123       3       java.lang.invoke.LambdaForm$BasicType::basicType (19 bytes)
                              @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 12   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 15   java.lang.invoke.LambdaForm$BasicType::basicType (10 bytes)
                                @ 1   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
                                @ 6   java.lang.invoke.LambdaForm$BasicType::basicType (172 bytes)   callee is too large
   1647  117       3       java.lang.AbstractStringBuilder::newCapacity (39 bytes)
                              @ 31   java.lang.AbstractStringBuilder::hugeCapacity (28 bytes)
                                @ 11   java.lang.OutOfMemoryError::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   1652  118       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
<writer thread='139919521801984'/>
   1659  127     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)V (native)   (static)
   1662  128     n 0       java.lang.invoke.MethodHandle::linkToStatic(ILL)I (native)   (static)
<writer thread='139919013099264'/>
   1665  129       1       java.lang.String::length (6 bytes)
<writer thread='139919015204608'/>
   1670  131       4       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 41   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   executed &lt; MinInliningThreshold times
                              @ 83   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139919013099264'/>
   1685    3       3       java.lang.String::length (6 bytes)   made not entrant
   1685  124       3       java.lang.invoke.MemberName::testAllFlags (7 bytes)
                              @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
   1687  130       3       java.lang.invoke.MethodType::checkPtype (19 bytes)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 14   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   1691  120   !   3       java.lang.invoke.MemberName::getMethodType (208 bytes)
                              @ 8   java.lang.invoke.MemberName::expandFromVM (21 bytes)
                                @ 9   java.lang.invoke.MemberName::isResolved (13 bytes)
                                @ 17   java.lang.invoke.MethodHandleNatives::expand (0 bytes)   native method
                              @ 21   java.lang.invoke.MemberName::isInvocable (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 29   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 74   java.lang.invoke.MemberName::getClassLoader (8 bytes)
                                @ 4   java.lang.Class::getClassLoader (28 bytes)
                                  @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 11   java.lang.System::getSecurityManager (4 bytes)
                                  @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)   callee is too large
                              @ 77   java.lang.invoke.MethodType::fromMethodDescriptorString (97 bytes)   callee is too large
                              @ 131   java.lang.invoke.MethodType::methodType (7 bytes)
                                @ 3   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
<writer thread='139919521801984'/>
   1719  132     n 0       java.lang.invoke.MethodHandle::linkToStatic(ILLL)L (native)   (static)
   1722  135     n 0       java.lang.invoke.MethodHandle::invokeBasic(ILL)L (native)   
   1726  136     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LILLL)L (native)   (static)
<writer thread='139919015204608'/>
   1732   55       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)   made not entrant
<writer thread='139919013099264'/>
   1740  137       3       java.lang.invoke.MethodType::hashCode (53 bytes)
                              @ 6   java.lang.Object::hashCode (0 bytes)   native method
                              @ 40   java.lang.Object::hashCode (0 bytes)   native method
   1743  133       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)
               !m             @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 17   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
   1752  134       3       java.lang.String::substring (79 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 44  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 75   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   1755  139       3       java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139919521801984'/>
   1760  143     n 0       java.lang.Object::getClass (native)   
<writer thread='139919013099264'/>
   1765  141       3       jdk.internal.org.objectweb.asm.Item::isEqualTo (354 bytes)
                              @ 234   java.lang.String::equals (81 bytes)   callee is too large
                              @ 248   java.lang.String::equals (81 bytes)   callee is too large
                              @ 280   java.lang.String::equals (81 bytes)   callee is too large
                              @ 294   java.lang.String::equals (81 bytes)   callee is too large
                              @ 156   java.lang.String::equals (81 bytes)   callee is too large
                              @ 214   java.lang.String::equals (81 bytes)   callee is too large
                              @ 314   java.lang.String::equals (81 bytes)   callee is too large
                              @ 328   java.lang.String::equals (81 bytes)   callee is too large
                              @ 342   java.lang.String::equals (81 bytes)   callee is too large
   1775  142       3       jdk.internal.org.objectweb.asm.Frame::execute (2252 bytes)
                              @ 822   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 955   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 979   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 964   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 970   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 988   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 994   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1006   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1010   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1022   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1026   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1038   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1042   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1054   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1058   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 831   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 840   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 846   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 855   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 864   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 870   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1067   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1070   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1112   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1118   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1146   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1150   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1161   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1078   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1084   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1246   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1250   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1259   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1268   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1279   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1329   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1304   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1168   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1177   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1188   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
        
<writer thread='139919014151936'/>
   1806  149       4       java.lang.String::equals (81 bytes)
<writer thread='139919013099264'/>
                      @ 1238   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1213   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1345   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1337   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1368   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1376   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1382   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1389   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1395   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1403   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1409   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1415   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1422   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1428   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1434   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1442   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1448   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1454   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1460   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1467   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1473   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1481   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1487   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1493   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1499   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1506   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1512   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1518   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1526   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1532   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1538   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1544   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1550   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1557   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1563   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1569   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1575   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1583   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1589   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1595   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1601   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1607   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
        
<writer thread='139919014151936'/>
   1838    2       3       java.lang.String::equals (81 bytes)   made not entrant
<writer thread='139919013099264'/>
                      @ 1613   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1620   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1626   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1634   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1640   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1696   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1702   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1708   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1716   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1722   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1728   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1662   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1668   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1674   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1738   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1766   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1772   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1126   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1132   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1138   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1746   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1752   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1758   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1780   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1786   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1792   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1092   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1098   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1104   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1682   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1688   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1648   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1654   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1814   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1820   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1832   java.lang.RuntimeException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 1361   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1843   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1855   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1863   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1873   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1885   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1889   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1902   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1913   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1931   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 1942   jdk.internal.org.objectweb.asm.Frame::init (77 bytes)   callee is too large
                              @ 1952   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1964   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1974   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1990   jdk.internal.org.objectweb.asm.ClassWriter::addUninitializedType (71 bytes)   callee is too large
                              @ 1994   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2001   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2051   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2060   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2096   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2105   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2069   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2078   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2087   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2114   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2128   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2135   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 2149   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 2154   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 2159   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 2162   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 2165   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2177   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 2181   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2195   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2202   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 2214   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2226   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 2230   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1800   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1806   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1353   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 2238   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 2248   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
<writer thread='139919015204608'/>
   2087  166       4       java.lang.String::lastIndexOf (52 bytes)
                              @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
   2096   19       3       java.lang.String::lastIndexOf (52 bytes)   made not entrant
<writer thread='139919014151936'/>
   2154  169       4       java.lang.String::replace (127 bytes)
                              @ 121   java.lang.String::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   2258   95       3       java.lang.String::replace (127 bytes)   made not entrant
<writer thread='139919013099264'/>
   2411  161       3       java.util.HashMap::getNode (148 bytes)
                              @ 59   java.lang.Object::equals (11 bytes)   no static binding
                              @ 94   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   not inlineable
                              @ 126   java.lang.Object::equals (11 bytes)   no static binding
   2443  167       1       java.lang.reflect.Field::getName (5 bytes)
   2453  160       3       java.util.HashMap::hash (20 bytes)
                              @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
   2457   46       1       java.util.ArrayList::size (5 bytes)
   2458  146       3       java.lang.String::lastIndexOf (13 bytes)
                              @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
   2459  162       3       java.util.HashMap::get (23 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
   2479  175       3       sun.reflect.ByteVectorImpl::add (38 bytes)
                              @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   callee is too large
   2485  174       3       sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                              @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   2493  148       3       java.lang.String::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2495  144       1       java.util.ArrayList::access$000 (5 bytes)
   2498  147       3       java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2506  177       3       java.lang.String::startsWith (7 bytes)
                              @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
   2509  150       1       java.net.URL::getProtocol (5 bytes)
   2513  151       1       java.net.URL::getHost (5 bytes)
   2515  152       1       java.net.URL::getPath (5 bytes)
   2518  153       1       java.net.URL::getAuthority (5 bytes)
   2522  178       3       java.lang.StringBuilder::toString (17 bytes)
                              @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   2524  179       3       java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2531  180       3       sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                              @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5  
<writer thread='139919015204608'/>
   2537  181 %     4       java.lang.String::indexOf @ 53 (166 bytes)
<writer thread='139919013099264'/>
 sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   2549  182       3       java.lang.String::indexOf (25 bytes)
                              @ 21   java.lang.String::indexOf (166 bytes)   callee is too large
   2557  155       1       java.net.URL::getRef (5 bytes)
   2567  154       1       java.net.URL::getFile (5 bytes)
   2574  183       3       java.util.ArrayList::rangeCheck (22 bytes)
                              @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)
                                @ 4   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 13   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 25   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                                @ 28   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   2591   63       1       java.lang.invoke.MethodType::form (5 bytes)
<writer thread='139919521801984'/>
   2595  188     n 0       java.lang.Object::clone (native)   
<writer thread='139919013099264'/>
   2597  184       1       java.io.ObjectStreamField::getName (5 bytes)
   2597  186       3       java.lang.ref.SoftReference::get (29 bytes)
                              @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
<writer thread='139919014151936'/>
   2611  189       4       sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                              @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                               \-&gt; TypeProfile (5867/5867 counts) = sun/reflect/ByteVectorImpl
                                @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
   2618  174       3       sun.reflect.ClassFileAssembler::emitByte (11 bytes)   made not entrant
<writer thread='139919013099264'/>
   2619  190   !   3       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)
                              @ 17   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 121   java.util.concurrent.ConcurrentHashMap::helpTransfer (132 bytes)   callee is too large
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 192   java.lang.Object::equals (11 bytes)   no static binding
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)
                                
<writer thread='139919014151936'/>
   2647  193       4       sun.reflect.ByteVectorImpl::add (38 bytes)
                              @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
   2650  175       3       sun.reflect.ByteVectorImpl::add (38 bytes)   made not entrant
<writer thread='139919013099264'/>
@ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 282  java/util/concurrent/ConcurrentHashMap$TreeBin::putTreeVal (not loaded)   not inlineable
               !m             @ 339   java.util.concurrent.ConcurrentHashMap::treeifyBin (164 bytes)   callee is too large
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   callee is too large
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   callee is too large
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   2713  192       3       sun.reflect.ClassFileAssembler::cpi (22 bytes)
                              @ 13   java.lang.RuntimeException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   2721  187       3       java.lang.reflect.Modifier::isStatic (13 bytes)
   2727  197       3       sun.reflect.UTF8::utf8Length (81 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   2744  198   !   3       sun.reflect.UTF8::encode (191 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   callee is too large
                              @ 26   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 185  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   2764  199       3       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)
               !              @ 1   sun.reflect.UTF8::encode (191 bytes)   callee is too large
                              @ 7   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 14   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 29   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   2802  200       3       sun.reflect.ByteVectorImpl::getLength (7 bytes)
   2810  201       3       sun.reflect.ByteVectorImpl::get (26 bytes)
                              @ 11   sun.reflect.ByteVectorImpl::resize (44 bytes)   callee is too large
   2821  206       3       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                              @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
   2824  204   !   3       java.lang.ref.ReferenceQueue::poll (28 bytes)
                              @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
<writer thread='139919521801984'/>
   2826  207     n 0       sun.misc.Unsafe::putObjectVolatile (native)   
<writer thread='139919013099264'/>
   2832  191       3       java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                              @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
   2837  194       3       java.util.ArrayList::ensureCapacityInternal (13 bytes)
                              @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                @ 10   java.lang.Math::max (11 bytes)
                              @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
   2849  209  s    3       java.io.ByteArrayOutputStream::write (32 bytes)
                              @ 7   java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)
                                @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
   2863  210       3       java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)
                              @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
   2868  203       3       java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                              @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   2874  156       1       java.net.URL::getQuery (5 bytes)
   2877  185       1       java.io.ObjectStreamField::getField (5 bytes)
   2881  211       3       java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2887  195       1       java.lang.reflect.Field::getType (5 bytes)
   2892  212       3       java.lang.Character::toLowerCase (9 bytes)
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
   2907  216       1       java.lang.CharacterDataLatin1::getProperties (11 bytes)
   2908   13       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)   made not entrant
   2908  213       3       java.lang.CharacterDataLatin1::toLowerCase (39 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
   2913  215       3       java.util.HashMap::afterNodeInsertion (1 bytes)
   2914  214       3       java.util.HashMap::newNode (13 bytes)
                              @ 9   java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   2930  217       1       java.lang.ThreadLocal::access$400 (5 bytes)
   2931  208       1       java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
   2947  218       3       sun.misc.FDBigInteger::mult (64 bytes)
   2949  219       3       sun.misc.FDBigInteger::&lt;init&gt; (30 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 26   sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)   not inlineable
   2952  220       3       sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)
   2958  221       3       sun.misc.FDBigInteger::makeImmutable (6 bytes)
   2958  222       3       sun.misc.FDBigInteger::mult (44 bytes)
                              @ 28   sun.misc.FDBigInteger::mult (64 bytes)   callee is too large
                              @ 40   sun.misc.FDBigInteger::&lt;init&gt; (30 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 26   sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)   callee is too large
   2992  223       3       java.lang.ThreadLocal::get (38 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 6   java.lang.ThreadLocal::getMap (5 bytes)   no static binding
                              @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)
                                @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   callee is too large
                              @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   callee is too large
   3002  224       3       java.lang.StringCoding::deref (19 bytes)
                              @ 1   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 15   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
   3017  227       3       java.util.HashMap::putVal (300 bytes)
                              @ 20   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 56   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 91   java.lang.Object::equals (11 bytes)   no static binding
                              @ 123   java.util.HashMap$TreeNode::putTreeVal (314 bytes)   not inlineable
                              @ 152   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 169   java.util.HashMap::treeifyBin (110 bytes)   callee is too large
                              @ 203   java.lang.Object::equals (11 bytes)   no static binding
                              @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   no static binding
                              @ 288   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 295   java.util.HashMap::afterNodeInsertion (1 bytes)   no static binding
<writer thread='139919521801984'/>
   3042  229     n 0       java.lang.String::intern (native)   
<writer thread='139919013099264'/>
   3053  228       3       java.util.HashMap::put (13 bytes)
<writer thread='139919015204608'/>
   3071  236       4       java.lang.CharacterData::of (120 bytes)
<writer thread='139919013099264'/>
                              @ 2   java.util.HashMap::hash (20 bytes)
        
<writer thread='139919015204608'/>
   3073   12       3       java.lang.CharacterData::of (120 bytes)   made not entrant
<writer thread='139919013099264'/>
                        @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
   3079  232       3       java.lang.Character::toUpperCaseEx (30 bytes)
                              @ 22   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 26   java.lang.CharacterData::toUpperCaseEx (6 bytes)   no static binding
   3083  233       3       java.lang.CharacterDataLatin1::toUpperCaseEx (71 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
   3085  231       3       java.lang.String::substring (56 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 30  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 52   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   3087  230       3       java.lang.String::indexOf (7 bytes)
                              @ 3   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
   3088  237       3       java.lang.Character::toLowerCase (6 bytes)
                              @ 1   java.lang.Character::toLowerCase (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
   3089  235       1       sun.util.locale.BaseLocale::getLanguage (5 bytes)
   3090  238       1       java.util.HashMap$Node::getValue (5 bytes)
   3090  234       1       java.util.LinkedHashMap::removeEldestEntry (2 bytes)
   3090  225       3       java.lang.StringCoding::access$000 (6 bytes)
                              @ 2   java.lang.StringCoding::scale (7 bytes)
<writer thread='139919521801984'/>
   3097  240     n 0       java.lang.Class::getSuperclass (native)   
<writer thread='139919014151936'/>
   3145  249 %     4       java.lang.String::indexOf @ 69 (166 bytes)
<writer thread='139919013099264'/>
   3159  246       3       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)
                              @ 14   java.lang.Math::min (11 bytes)
                              @ 139   java.lang.Character::isSurrogate (18 bytes)
                              @ 157  sun/nio/cs/Surrogate$Parser::&lt;init&gt; (not loaded)   not inlineable
                              @ 175  sun/nio/cs/Surrogate$Parser::parse (not loaded)   not inlineable
                              @ 186   java.nio.charset.CharsetEncoder::malformedInputAction (5 bytes)
   3236  255       1       sun.reflect.ByteVectorImpl::getLength (7 bytes)
   3236  200       3       sun.reflect.ByteVectorImpl::getLength (7 bytes)   made not entrant
   3237  251  s!   3       sun.misc.URLClassPath::getLoader (243 bytes)
                              @ 13   java.util.ArrayList::size (5 bytes)
                              @ 33   java.util.Stack::empty (13 bytes)
              s                 @ 1   java.util.Vector::size (5 bytes)
              s               @ 47   java.util.Stack::pop (19 bytes)
              s                 @ 1   java.util.Vector::size (5 bytes)
              s                 @ 6   java.util.Stack::peek (25 bytes)
              s                   @ 1   java.util.Vector::size (5 bytes)
                                  @ 13  java/util/EmptyStackException::&lt;init&gt; (not loaded)   not inlineable
              s                   @ 21   java.util.Vector::elementAt (48 bytes)   callee is too large
              s                 @ 14   java.util.Vector::removeElementAt (115 bytes)   callee is too large
                              @ 67   sun.net.util.URLUtil::urlNoFragString (114 bytes)   callee is too large
                              @ 76   java.util.HashMap::containsKey (18 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
               !              @ 87   sun.misc.URLClassPath::getLoader (29 bytes)
                                @ 6   sun.misc.URLClassPath$3::&lt;init&gt; (15 bytes)
                                  @ 11   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 22  java/security/PrivilegedActionException::getException (not loaded)   not inlineable
                              @ 94   sun.misc.URLClassPath$Loader::getClassPath (2 bytes)   no static binding
               !m             @ 107   sun.misc.URLClassPath::push (46 bytes)   callee is too large
                              @ 169   java.util.ArrayList::size (5 bytes)
              s               @ 173   sun.misc.URLClassPath::validateLookupCache (80 bytes)   callee is too large
                              @ 182   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 193   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 236   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
<writer thread='139919015204608'/>
   3319  261       4       java.util.Arrays::copyOfRange (63 bytes)
                              @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   3330    9       3       java.util.Arrays::copyOfRange (63 bytes)   made not entrant
<writer thread='139919014151936'/>
   3375  263       4       java.lang.AbstractStringBuilder::append (50 bytes)
                              @ 10   java.lang.String::length (6 bytes)   inline (hot)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                  @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139919015204608'/>
   3388  264       4       java.lang.String::getChars (62 bytes)
                              @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   3392   11       3       java.lang.String::getChars (62 bytes)   made not entrant
<writer thread='139919014151936'/>
   3431   21       3       java.lang.AbstractStringBuilder::append (50 bytes)   made not entrant
<writer thread='139919015204608'/>
   3439  266       4       java.lang.String::&lt;init&gt; (82 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   3450   10       3       java.lang.String::&lt;init&gt; (82 bytes)   made not entrant
<writer thread='139919013099264'/>
   3482  267       3       java.io.ObjectStreamField::getTypeCode (9 bytes)
<writer thread='139919015204608'/>
   3483  268       4       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)
<writer thread='139919013099264'/>
                              @ 5   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   3485  256       3       java.util.Arrays::copyOf (19 bytes)
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='139919014151936'/>
   3495  269   !   4       sun.reflect.UTF8::encode (191 bytes)
<writer thread='139919013099264'/>
   3502  243       3       java.io.ObjectStreamField::isPrimitive (27 bytes)
                              @ 5   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   3529  262       3       java.util.ArrayList::add (29 bytes)
                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
<writer thread='139919521801984'/>
   3533  271     n 0       sun.reflect.Reflection::getCallerClass (native)   (static)
   3539  272     n 0       sun.misc.Unsafe::compareAndSwapObject (native)   
<writer thread='139919014151936'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   inline (hot)
                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 26   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139919013099264'/>
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
   3566  241  s    3       java.io.BufferedInputStream::read (113 bytes)
                              @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 26  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 49   java.io.BufferedInputStream::read1 (108 bytes)   callee is too large
                              @ 101   java.io.InputStream::available (2 bytes)   no static binding
   3571  242       3       sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                              @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
   3577  260       1       java.lang.reflect.Field::getModifiers (5 bytes)
   3578  273       3       sun.reflect.ClassFileAssembler::emitConstantPoolMethodref (28 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 13   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   3610  274       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 73   java.lang.Object::equals (11 bytes)   no static binding
                              @ 93   java.util.concurrent.ConcurrentHashMap$Node::find (52 bytes)   no static binding
                              @ 149   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='139919014151936'/>
   3635  198   !   3       sun.reflect.UTF8::encode (191 bytes)   made not entrant
   3640  270       4       sun.reflect.UTF8::utf8Length (81 bytes)
<writer thread='139919013099264'/>
   3656  252       3       java.util.ArrayList::elementData (7 bytes)
   3657  245       3       java.util.ArrayList::get (11 bytes)
                              @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 7   java.util.ArrayList::elementData (7 bytes)
<writer thread='139919015204608'/>
               !              @ 1   sun.reflect.UTF8::encode (191 bytes)   inline (hot)
                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   inline (hot)
                                  @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
                                @ 26   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 7   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (24523/24523 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 14   sun.reflect.ClassFileAssembler::emitShort (24 bytes)   inline (hot)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                   \-&gt; TypeProfile (24523/24523 counts) = sun/reflect/ByteVectorImpl
                                    @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                   \-&gt; TypeProfile (24523/24523 counts) = sun/reflect/ByteVectorImpl
                                    @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 29   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (24523/24523 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
<writer thread='139919013099264'/>
   3672  239       3       java.util.Arrays::copyOf (19 bytes)
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='139919014151936'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139919013099264'/>
   3680  282       1       java.net.URLStreamHandler::getDefaultPort (2 bytes)
   3684  284       3       java.lang.String::endsWith (17 bytes)
                              @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
   3685  283  s    3       sun.misc.URLClassPath::getNextLoader (88 bytes)
                              @ 26   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
              s!m             @ 84   sun.misc.URLClassPath::getLoader (243 bytes)   callee is too large
<writer thread='139919014151936'/>
   3694  197       3       sun.reflect.UTF8::utf8Length (81 bytes)   made not entrant
   3695  281       4       java.lang.String::indexOf (166 bytes)
<writer thread='139919013099264'/>
   3709  285       3       java.lang.String::regionMatches (149 bytes)
                              @ 107   java.lang.Character::toUpperCase (6 bytes)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 114   java.lang.Character::toUpperCase (6 bytes)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 131   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 136   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
<writer thread='139919014151936'/>
<writer thread='139919013099264'/>
   3773  291       3       sun.net.www.ParseUtil::encodePath (336 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 15   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 21   java.lang.String::length (6 bytes)
                              @ 142   java.util.BitSet::get (69 bytes)   callee is too large
                              @ 152   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 193   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 212   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 230   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 252   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 270   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 313   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 332   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
<writer thread='139919015204608'/>
   3822  199       3       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)   made not entrant
   3827  286       4       java.lang.String::startsWith (72 bytes)
<writer thread='139919013099264'/>
   3833  288       3       java.util.zip.ZStreamRef::address (5 bytes)
   3834  295   !   3       sun.misc.URLClassPath$JarLoader::getResource (85 bytes)
                              @ 12   sun.misc.MetaIndex::mayContain (51 bytes)   callee is too large
               !              @ 21   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                              @ 33  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 42   java.util.jar.JarFile::getJarEntry (9 bytes)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)
               !m                 @ 2   java.util.zip.ZipFile::getEntry (101 bytes)   callee is too large
                                  @ 16   java.util.jar.JarFile$JarFileEntry::&lt;init&gt; (11 bytes)
                                    @ 7   java.util.jar.JarEntry::&lt;init&gt; (6 bytes)
                                      @ 2   java.util.zip.ZipEntry::&lt;init&gt; (146 bytes)   callee is too large
               !              @ 54   sun.misc.URLClassPath$JarLoader::checkResource (55 bytes)   callee is too large
                              @ 71   java.util.HashSet::&lt;init&gt; (16 bytes)
                                @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.HashMap::&lt;init&gt; (11 bytes)
                                  @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !              @ 81   sun.misc.URLClassPath$JarLoader::getResource (353 bytes)   callee is too large
<writer thread='139919014151936'/>
   3868  106       3       java.lang.String::indexOf (166 bytes)   made not entrant
   3876  280       4       java.lang.StringBuilder::append (8 bytes)
<writer thread='139919521801984'/>
   3885  299     n 0       java.lang.System::nanoTime (native)   (static)
<writer thread='139919015204608'/>
<writer thread='139919013099264'/>
   3900  298       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
   3901  300       3       sun.misc.MetaIndex::mayContain (51 bytes)
                              @ 10   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 35   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
<writer thread='139919015204608'/>
   3915   20       3       java.lang.String::startsWith (72 bytes)   made not entrant
<writer thread='139919014151936'/>
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                    @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139919013099264'/>
   3936  289       1       java.net.URL::getPort (5 bytes)
   3936  287       3       java.util.zip.Inflater::ensureOpen (47 bytes)
                              @ 28   java.util.zip.ZStreamRef::address (5 bytes)
                              @ 42   java.lang.NullPointerException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   3941  293       1       java.util.zip.ZipFile::access$000 (5 bytes)
   3941  294       1       java.net.URL::getUserInfo (5 bytes)
   3942  297       1       java.security.ProtectionDomain::getCodeSource (5 bytes)
   3942  290       1       java.net.URLClassLoader::access$000 (5 bytes)
   3942  296       1       java.security.CodeSource::getLocation (5 bytes)
   3943  292       1       java.util.zip.ZipCoder::isUTF8 (5 bytes)
   3968  301       1       sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
   3969  302       3       java.net.URL::&lt;init&gt; (8 bytes)
               !              @ 4   java.net.URL::&lt;init&gt; (543 bytes)   callee is too large
   3971  303       3       java.net.URLStreamHandler::setURL (40 bytes)
                              @ 14  java/lang/SecurityException::&lt;init&gt; (not loaded)   not inlineable
                              @ 20   java.net.URL::getProtocol (5 bytes)
               !m             @ 36   java.net.URL::set (114 bytes)   callee is too large
<writer thread='139919521801984'/>
   3984  304     n 0       sun.misc.Unsafe::compareAndSwapLong (native)   
<writer thread='139919013099264'/>
   3984  305       3       java.lang.ClassLoader::checkName (43 bytes)
                              @ 5   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 23   sun.misc.VM::allowArraySyntax (4 bytes)
                              @ 31   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   3996  306       3       sun.misc.VM::allowArraySyntax (4 bytes)
   3997  307       3       java.lang.String::concat (47 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 24   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 33   java.lang.String::getChars (16 bytes)
                                @ 12   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 43   java.lang.String::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139919014151936'/>
   4021   22       3       java.lang.StringBuilder::append (8 bytes)   made not entrant
<writer thread='139919013099264'/>
   4024  314       3       java.io.UnixFileSystem::normalize (75 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 19   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 44   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
                              @ 69   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
   4035  311       3       java.nio.Buffer::checkIndex (22 bytes)
                              @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   4045  313       3       java.lang.CharacterDataLatin1::toUpperCase (53 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
   4057  312       3       java.nio.DirectLongBufferU::ix (10 bytes)
   4058  308       3       java.lang.String::getBytes (27 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
               !              @ 23   java.lang.StringCoding::encode (120 bytes)   callee is too large
   4068  309   !   3       java.lang.StringCoding::encode (120 bytes)
                              @ 3   java.lang.StringCoding::deref (19 bytes)
                                @ 1   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                                @ 15   java.lang.ref.SoftReference::get (29 bytes)
<writer thread='139919521801984'/>
   4078  315     n 0       java.util.zip.ZipFile::getEntryBytes (native)   (static)
<writer thread='139919013099264'/>
                                  @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 32   java.lang.StringCoding$StringEncoder::requestedCharsetName (5 bytes)
                              @ 35   java.lang.String::equals (81 bytes)   callee is too large
                              @ 45   java.lang.StringCoding$StringEncoder::charsetName (31 bytes)
                                @ 17   sun.nio.cs.HistoricallyNamedCharset::historicalName (0 bytes)   not inlineable
                                @ 27   java.nio.charset.Charset::name (5 bytes)
                              @ 48   java.lang.String::equals (81 bytes)   callee is too large
               !              @ 59   java.lang.StringCoding::lookupCharset (24 bytes)
                                @ 1   java.nio.charset.Charset::isSupported (13 bytes)
                                  @ 1   java.nio.charset.Charset::lookup (44 bytes)   callee is too large
                                @ 8   java.nio.charset.Charset::forName (20 bytes)
                                  @ 1   java.nio.charset.Charset::lookup (44 bytes)   callee is too large
                                  @ 16  java/nio/charset/UnsupportedCharsetException::&lt;init&gt; (not loaded)   not inlineable
                                @ 18   java.lang.Error::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 78   java.lang.StringCoding$StringEncoder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.StringCoding$StringEncoder::&lt;init&gt; (54 bytes)   callee is too large
                              @ 99  java/io/UnsupportedEncodingException::&lt;init&gt; (not loaded)   not inlineable
                              @ 108   java.lang.StringCoding::set (13 bytes)
                                @ 6   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                  @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                    @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)   callee is too large
                                @ 9   java.lang.ThreadLocal::set (30 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 6   java.lang.ThreadLocal::getMap (5 bytes)
                                  @ 17   java.lang.ThreadLocal$ThreadLocalMap::access$100 (7 bytes)
                                    @ 3   java.lang.ThreadLocal$ThreadLocalMap::set (136 bytes)   callee is too large
                                  @ 26   java.lang.ThreadLocal::createMap (14 bytes)
                                    @ 7   java.lang.ThreadLocal$ThreadLocalMap::&lt;init&gt; (53 bytes)   callee is too large
               !              @ 116   java.lang.StringCoding$StringEncoder::encode (179 bytes)   callee is too large
<writer thread='139919015204608'/>
   4163  324       4       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                              @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
   4165  206       3       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   made not entrant
<writer thread='139919014151936'/>
   4168  325       4       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                              @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
   4169   23       3       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   made not entrant
<writer thread='139919013099264'/>
   4198  323       1       java.lang.System::getSecurityManager (4 bytes)
   4202   17       3       java.lang.System::getSecurityManager (4 bytes)   made not entrant
   4205  326       3       java.util.ArrayList$Itr::hasNext (20 bytes)
                              @ 8   java.util.ArrayList::access$000 (5 bytes)
   4213  318       3       java.lang.String::toCharArray (25 bytes)
                              @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
   4220  320   !   3       java.lang.ClassLoader::loadClass (122 bytes)
                              @ 2   java.lang.ClassLoader::getClassLoadingLock (35 bytes)
                                @ 13   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 23   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m                 @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 10   java.lang.ClassLoader::findLoadedClass (16 bytes)
                                @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                                @ 12   java.lang.ClassLoader::findLoadedClass0 (0 bytes)   native method
                              @ 20   java.lang.System::nanoTime (0 bytes)   intrinsic
               !m             @ 38   java.lang.ClassLoader::loadClass (122 bytes)   no static binding
                              @ 48   java.lang.ClassLoader::findBootstrapClassOrNull (16 bytes)
                                @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                                @ 12   java.lang.ClassLoader::findBootstrapClass (0 bytes)   native method
                              @ 63   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 70   java.lang.ClassLoader::findClass (9 bytes)   no static binding
                              @ 75   sun.misc.PerfCounter::getParentDelegationTime (4 bytes)
                              @ 83   sun.misc.PerfCounter::addTime (6 bytes)
              s                 @ 2   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 86   sun.misc.PerfCounter::getFindClassTime (4 bytes)
                              @ 91   sun.misc.PerfCounter::addElapsedTimeFrom (10 bytes)
                                @ 1   java.lang.System::nanoTime (0 bytes)   intrinsic
              s                 @ 6   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 94   sun.misc.PerfCounter::getFindClasses (4 bytes)
                              @ 97   sun.misc.PerfCounter::increment (6 bytes)
              s                 @ 2   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 107   java.lang.ClassLoader::resolveClass (6 bytes)
                                @ 2   java.lang.ClassLoader::resolveClass0 (0 bytes)   native method
   4390  328       3       java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)
                              @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   intrinsic
                              @ 58  java/util/concurrent/ThreadLocalRandom::getProbe (not loaded)   not inlineable
                              @ 91   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   intrinsic
                              @ 115   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
<writer thread='139919014151936'/>
   4394  329       4       java.lang.Math::min (11 bytes)
   4395    6       3       java.lang.Math::min (11 bytes)   made not entrant
<writer thread='139919013099264'/>
                              @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)
                                @ 1   java.lang.Integer::numberOfLeadingZeros (76 bytes)   callee is too large
                              @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
               !m             @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   callee is too large
                              @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
               !m             @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   callee is too large
                              @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
               !              @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (487 bytes)   callee is too large
   4449  327       3       java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)
   4449  317       3       java.lang.ThreadLocal::getMap (5 bytes)
   4450  319       3       java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)
                              @ 1   java.lang.ThreadLocal::access$400 (5 bytes)
                              @ 25   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   callee is too large
   4467  321       3       java.lang.ClassLoader::getClassLoadingLock (35 bytes)
                              @ 13   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 23   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
   4470  322       3       java.lang.ClassLoader::findLoadedClass (16 bytes)
                              @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                              @ 12   java.lang.ClassLoader::findLoadedClass0 (0 bytes)   native method
   4489  331  s    3       java.lang.StringBuffer::append (13 bytes)
                              @ 7   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
   4490  332       3       java.io.File::isInvalid (47 bytes)
                              @ 13   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
   4514  333       3       java.lang.Character::charCount (12 bytes)
   4517  334       3       java.lang.String::codePointAt (36 bytes)
                              @ 32   java.lang.Character::codePointAtImpl (41 bytes)   callee is too large
                              @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   4532  335       3       java.io.BufferedInputStream::read1 (108 bytes)
                              @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
               !              @ 39   java.io.InputStream::read (109 bytes)   no static binding
                              @ 44   java.io.BufferedInputStream::fill (233 bytes)   callee is too large
                              @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 91   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='139919521801984'/>
   4541  338     n 0       sun.misc.Unsafe::putLong (native)   
   4546  340     n 0       sun.misc.Unsafe::getLong (native)   
<writer thread='139919013099264'/>
   4552  341       3       java.nio.DirectLongBufferU::put (18 bytes)
<writer thread='139919015204608'/>
   4565  342 %     4       sun.nio.cs.UTF_8$Encoder::encode @ 20 (359 bytes)
<writer thread='139919013099264'/>
                              @ 6   java.nio.Buffer::checkIndex (22 bytes)   intrinsic
                              @ 9   java.nio.DirectLongBufferU::ix (10 bytes)
                              @ 13   sun.misc.Unsafe::putLong (0 bytes)   intrinsic
   4570  343       3       java.lang.String::equalsIgnoreCase (48 bytes)
                              @ 36   java.lang.String::regionMatches (149 bytes)   callee is too large
   4575  339       3       java.nio.DirectLongBufferU::get (16 bytes)
<writer thread='139919015204608'/>
<writer thread='139919013099264'/>
                              @ 6   java.nio.Buffer::checkIndex (22 bytes)   intrinsic
                              @ 9   java.nio.DirectLongBufferU::ix (10 bytes)
                              @ 12   sun.misc.Unsafe::getLong (0 bytes)   intrinsic
   4591  336       3       java.lang.StringCoding::access$300 (8 bytes)
                              @ 4   java.lang.StringCoding::safeTrim (24 bytes)
                                @ 10   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   4605  344       3       sun.net.www.protocol.file.Handler::parseURL (18 bytes)
                              @ 8   java.lang.String::replace (127 bytes)   callee is too large
                              @ 14   java.net.URLStreamHandler::parseURL (1193 bytes)   callee is too large
   4623  347   !   3       java.net.URL::&lt;init&gt; (543 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 33   java.lang.System::getSecurityManager (4 bytes)
                              @ 46   java.net.URL::checkSpecifyHandler (8 bytes)
                                @ 4   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 50   java.lang.String::length (6 bytes)
                              @ 65   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 89   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 111   java.lang.String::regionMatches (149 bytes)   callee is too large
                              @ 123   java.lang.String::length (6 bytes)
                              @ 132   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 162   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 185   java.lang.String::substring (79 bytes)   callee is too large
                              @ 188   java.lang.String::toLowerCase (8 bytes)
                                @ 1   java.util.Locale::getDefault (4 bytes)
                                @ 4   java.lang.String::toLowerCase (439 bytes)   callee is too large
                              @ 196   java.net.URL::isValidProtocol (78 bytes)   callee is too large
                              @ 242   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 270   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 358   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 363   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 368   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 371   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 374   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
               !m             @ 386   java.net.URL::getURLStreamHandler (313 bytes)   callee is too large
                              @ 402   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 407   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 414   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 417   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 420   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
                              @ 434   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 452   java.lang.String::substring (79 bytes)   callee is too large
                              @ 504   java.net.URLStreamHandler::parseURL (1193 bytes)   no static binding
                              @ 523   java.lang.Throwable::getMessage (5 bytes)
                              @ 526   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
              s               @ 535   java.lang.Throwable::initCause (64 bytes)   no static binding
   4914  352       3       java.lang.Class::searchFields (41 bytes)
                              @ 1   java.lang.String::intern (0 bytes)   native method
                              @ 16   java.lang.reflect.Field::getName (5 bytes)
                              @ 23   java.lang.Class::getReflectionFactory (26 bytes)
                                @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 29   sun.reflect.ReflectionFactory::copyField (10 bytes)
                                @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                                  @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                                @ 4   java.lang.reflect.ReflectAccess::copyField (5 bytes)
                                  @ 1   java.lang.reflect.Field::copy (76 bytes)   callee is too large
   4932  354       3       java.lang.Class::reflectionData (49 bytes)
                              @ 21   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 45   java.lang.Class::newReflectionData (74 bytes)   callee is too large
<writer thread='139919014151936'/>
   4952  358       4       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)
                              @ 14   java.lang.Math::min (11 bytes)   (intrinsic)
   4963  246       3       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   made not entrant
<writer thread='139919013099264'/>
   4973  355       3       java.lang.Class::checkInitted (19 bytes)
                              @ 11   java.lang.Class$3::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
   4974  353       3       java.lang.Class::checkMemberAccess (49 bytes)
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 11   java.lang.ClassLoader::getClassLoader (11 bytes)
                                @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 17   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 38   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 45   java.lang.Class::checkPackageAccess (94 bytes)   callee is too large
   4999  351       3       java.lang.reflect.AccessibleObject::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5000  348   !   3       java.net.URL::set (114 bytes)
                              @ 35   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 40   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 45   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 50   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 53   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   5024  359       3       java.util.BitSet::checkInvariants (111 bytes)
   5025  345       3       java.net.URLStreamHandler::parseURL (1193 bytes)
                              @ 1   java.net.URL::getProtocol (5 bytes)
                              @ 7   java.net.URL::getAuthority (5 bytes)
                              @ 13   java.net.URL::getUserInfo (5 bytes)
<writer thread='139919005615872'/>
   5040  362     n 0       java.lang.Throwable::fillInStackTrace (native)   
   5042  363     n 0       sun.misc.Unsafe::objectFieldOffset (native)   
<writer thread='139919013099264'/>
                              @ 19   java.net.URL::getHost (5 bytes)
                              @ 25   java.net.URL::getPort (5 bytes)
                              @ 31   java.net.URL::getPath (5 bytes)
                              @ 37   java.net.URL::getQuery (5 bytes)
                              @ 43   java.net.URL::getRef (5 bytes)
                              @ 63   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 101   java.lang.String::substring (79 bytes)   callee is too large
                              @ 121   java.lang.String::substring (79 bytes)   callee is too large
                              @ 138   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 150   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 162   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 174   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 204   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 216   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 231   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 252   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 277   java.lang.String::substring (79 bytes)   callee is too large
                              @ 289   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 306   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 326   java.lang.String::substring (79 bytes)   callee is too large
                              @ 337   java.lang.String::substring (56 bytes)   callee is too large
                              @ 355   java.lang.String::length (6 bytes)
                              @ 364   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 376   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 397   java.lang.String::substring (79 bytes)   callee is too large
                              @ 407   java.lang.String::substring (79 bytes)   callee is too large
                              @ 410   sun.net.util.IPAddressUtil::isIPv6LiteralAddress (13 bytes)
                                @ 1   sun.net.util.IPAddressUtil::textToNumericFormatV6 (500 bytes)   callee is too large
                              @ 424   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 429   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 434   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 437   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 440   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 449   java.lang.String::length (6 bytes)
                              @ 465   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 478   java.lang.String::length (6 bytes)
                              @ 494   java.lang.String::substring (56 bytes)   callee is too large
                              @ 497   java.lang.Integer::parseInt (7 bytes)
                                @ 3   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 513   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 518   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 523   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 526   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 529   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 544   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 549   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 554   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 557   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 560   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 568   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 583   java.lang.String::length (6 bytes)
                              @ 599   java.lang.String::substring (56 bytes)   callee is too large
                              @ 602   java.lang.Integer::parseInt (7 bytes)
                                @ 3   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 612   java.lang.String::substring (79 bytes)   callee is too large
                              @ 638   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 643   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 648   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 651   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 654   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 668   java.lang.String::length (6 bytes)
                              @ 695   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 707   java.lang.String::substring (79 bytes)   callee is too large
                              @ 722   java.lang.String::length (6 bytes)
                              @ 735   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 763   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 773   java.lang.String::substring (79 bytes)   callee is too large
                              @ 776   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 781   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 788   java.lang.String::substring (79 bytes)   callee is too large
                              @ 791   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 794   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 820   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 825   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 832   java.lang.String::substring (79 bytes)   callee is too large
                              @ 835   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 838   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 860   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 877   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 885   java.lang.String::substring (79 bytes)   callee is too large
                              @ 888   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 893   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 896   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 919   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 932   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 940   java.lang.String::substring (79 bytes)   callee is too large
                              @ 943   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 952   java.lang.String::substring (56 bytes)   callee is too large
                              @ 955   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 958   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 975   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 997   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 1012   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1022   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 1030   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1033   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1042   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1045   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1048   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 1072   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1082   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1095   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 1111   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1123   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1131   java.lang.String::length (6 bytes)
                              @ 1141   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1150   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1161   java.lang.String::length (6 bytes)
                              @ 1166   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1189   java.net.URLStreamHandler::setURL (40 bytes)   callee is too large
<writer thread='139919015204608'/>
   5300  378       4       sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                              @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (33268/33268 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (33268/33268 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
   5311  180       3       sun.reflect.ClassFileAssembler::emitShort (24 bytes)   made not entrant
<writer thread='139919521801984'/>
   5421  388     n 0       java.lang.System::identityHashCode (native)   (static)
<writer thread='139919005615872'/>
   5517  393     n 0       java.lang.Thread::currentThread (native)   (static)
   5835  406     n 0       sun.misc.Unsafe::compareAndSwapInt (native)   
<writer thread='139919014151936'/>
   5979  425       4       java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139919015204608'/>
   6001  426       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139919521801984'/>
   6147  427     n 0       sun.misc.Unsafe::getObject (native)   
   6293  430     n 0       java.lang.Class::isInstance (native)   
<writer thread='139919013099264'/>
   6393  390       2       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)
                              @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   native method
   6410  434   !   3       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)
                              @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 15   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 25   java.lang.ClassCastException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                                @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                  @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
                              @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)
                              @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   callee is too large
                              @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   callee is too large
                              @ 90   java.io.ObjectStreamClass::getFields (22 bytes)
                              @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)
                              @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   callee is too large
                              @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)
               !              @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
   6473  436       3       java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 77   sun.misc.Unsafe::getObject (0 bytes)   intrinsic
                              @ 88  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   6487  438       3       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
        
<writer thread='139919521801984'/>
   6494  448     n 0       sun.misc.Unsafe::getBoolean (native)   
<writer thread='139919013099264'/>
                      @ 187   sun.misc.Unsafe::getByte (0 bytes)   intrinsic
                              @ 203   sun.misc.Unsafe::getChar (0 bytes)   intrinsic
                              @ 206   java.io.Bits::putChar (16 bytes)
                              @ 293   sun.misc.Unsafe::getDouble (0 bytes)   intrinsic
                              @ 296   java.io.Bits::putDouble (10 bytes)
                                @ 3   java.lang.Double::doubleToLongBits (33 bytes)   callee is too large
                                @ 6   java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 257   sun.misc.Unsafe::getFloat (0 bytes)   intrinsic
                              @ 260   java.io.Bits::putFloat (10 bytes)
                                @ 3   java.lang.Float::floatToIntBits (26 bytes)
                                  @ 1   java.lang.Float::floatToRawIntBits (0 bytes)   intrinsic
                                @ 6   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 239   sun.misc.Unsafe::getInt (0 bytes)   intrinsic
                              @ 242   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 275   sun.misc.Unsafe::getLong (0 bytes)   intrinsic
                              @ 278  
<writer thread='139919014151936'/>
   6517  455       4       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)
                              @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
   6526  390       2       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   made not entrant
<writer thread='139919013099264'/>
 java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 221   sun.misc.Unsafe::getShort (0 bytes)   intrinsic
                              @ 224   java.io.Bits::putShort (16 bytes)
                              @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   intrinsic
                              @ 172   java.io.Bits::putBoolean (14 bytes)
                              @ 306  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   6554  384       2       java.io.ObjectStreamClass::requireInitialized (18 bytes)
                              @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   6561  391       2       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                              @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   6568  392       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                              @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   6577  394       2       java.io.Bits::putInt (36 bytes)
   6583  396  s    2       java.io.BufferedOutputStream::write (67 bytes)
                              @ 10   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 39   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 53   java.lang.System::arraycopy (0 bytes)   intrinsic
   6599  395       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)
                              @ 21   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 42   java.io.DataOutputStream::writeInt (65 bytes)   callee is too large
   6610  401   !   2       java.io.ObjectOutputStream::writeObject0 (619 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 24   java.io.ObjectOutputStream$ReplaceTable::lookup (24 bytes)
                                @ 5   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 33   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 51   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
        
<writer thread='139919015204608'/>
   6635  469       4       java.lang.ref.SoftReference::get (29 bytes)
                              @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
   6638  186       3       java.lang.ref.SoftReference::get (29 bytes)   made not entrant
<writer thread='139919013099264'/>
                      @ 65   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 78   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 114   java.io.ObjectOutputStream::writeClass (37 bytes)   callee is too large
        
<writer thread='139919014151936'/>
   6651  470       4       java.io.ObjectStreamClass::requireInitialized (18 bytes)
   6652  384       2       java.io.ObjectStreamClass::requireInitialized (18 bytes)   made not entrant
<writer thread='139919013099264'/>
                      @ 132   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 150   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 168   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 177   java.lang.Object::getClass (0 bytes)   intrinsic
               !              @ 185   java.io.ObjectStreamClass::lookup (335 bytes)   callee is too large
                              @ 192   java.io.ObjectStreamClass::hasWriteReplaceMethod (17 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
               !              @ 201   java.io.ObjectStreamClass::invokeWriteReplace (73 bytes)   callee is too large
                              @ 210   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 240   java.io.ObjectOutputStream::replaceObject (2 bytes)
                              @ 287   java.io.ObjectOutputStream$ReplaceTable::assign (33 bytes)
        
<writer thread='139919015204608'/>
   6679  471       4       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                              @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                 @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                 \-&gt; TypeProfile (4099/4099 counts) = java/io/BufferedOutputStream
                                  @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   6691  391       2       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   made not entrant
<writer thread='139919013099264'/>
                        @ 5   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                                @ 19   java.io.ObjectOutputStream$ReplaceTable::grow (34 bytes)   callee is too large
                              @ 295   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 313   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
             
<writer thread='139919014151936'/>
   6702  472       4       java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   6705   93       3       java.lang.ref.Reference::&lt;init&gt; (25 bytes)   made not entrant
   6705  473       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
   6708  392       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   made not entrant
<writer thread='139919013099264'/>
                 @ 327   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 340   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 358   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 376   java.io.ObjectOutputStream::writeClass (37 bytes)   callee is too large
                              @ 394   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 412   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 430   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 448   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
                              @ 456   java.lang.Class::isArray (0 bytes)   native method
               !              @ 467   java.io.ObjectOutputStream::writeArray (611 bytes)   callee is too large
                              @ 488   java.io.ObjectOutputStream::writeEnum (63 bytes)   callee is too large
               !              @ 506   java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   callee is too large
                              @ 587   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 565   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 568  java/io/NotSerializableException::&lt;init&gt; (not loaded)   not inlineable
                              @ 611   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
<writer thread='139919014151936'/>
   6779  474       4       java.io.Bits::putInt (36 bytes)
   6783  394       2       java.io.Bits::putInt (36 bytes)   made not entrant
<writer thread='139919015204608'/>
   6789  475  s    4       java.io.BufferedOutputStream::write (67 bytes)
                              @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   6808  396  s    2       java.io.BufferedOutputStream::write (67 bytes)   made not entrant
<writer thread='139919014151936'/>
   6819  476       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)
                              @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
   6824  395       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   made not entrant
   6839  478   !   4       java.lang.ref.ReferenceQueue::poll (28 bytes)
   6840  204   !   3       java.lang.ref.ReferenceQueue::poll (28 bytes)   made not entrant
<writer thread='139919013099264'/>
   6901  461   !   3       java.io.ObjectOutputStream::writeSerialData (221 bytes)
                              @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)
<writer thread='139919005615872'/>
   6923  481     n 0       java.lang.Thread::isInterrupted (native)   
<writer thread='139919013099264'/>
                                @ 9   java.io.ObjectStreamClass::getClassDataLayout0 (296 bytes)   callee is too large
                              @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 15   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
               !              @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   callee is too large
                              @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)
                              @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)
               !              @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   callee is too large
<writer thread='139919014151936'/>
   6968  482       4       java.io.ObjectStreamField::isPrimitive (27 bytes)
<writer thread='139919013099264'/>
   6970  404       2       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
<writer thread='139919014151936'/>
                              @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139919013099264'/>
   6970  389       2       java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                              @ 1   java.lang.System::identityHashCode (0 bytes)   native method
<writer thread='139919014151936'/>
   6971  243       3       java.io.ObjectStreamField::isPrimitive (27 bytes)   made not entrant
<writer thread='139919013099264'/>
   6978  463       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)
                              @ 22   java.io.Bits::putShort (16 bytes)
                              @ 43   java.io.DataOutputStream::writeShort (35 bytes)
                                @ 12   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 26   java.io.OutputStream::write (0 bytes)   no static binding
                                @ 31   java.io.DataOutputStream::incCount (20 bytes)
<writer thread='139919015204608'/>
   6988  483       4       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
<writer thread='139919013099264'/>
   6988  464       3       java.io.Bits::putShort (16 bytes)
   6990  465       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)
                              @ 12  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
                              @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   callee is too large
                              @ 24   java.lang.String::length (6 bytes)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   callee is too large
                              @ 42   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTFBody (386 bytes)   callee is too large
<writer thread='139919015204608'/>
                              @ 1   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
<writer thread='139919013099264'/>
   6999  405       2       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)
                              @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   callee is too large
                              @ 36   java.io.OutputStream::write (79 bytes)   no static binding
   7001  466       3       java.io.ObjectOutputStream::writeByte (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   7003  403       2       java.io.ObjectOutputStream::writeHandle (21 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
<writer thread='139919015204608'/>
   7007  274       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)   made not entrant
<writer thread='139919013099264'/>
   7042  409       2       java.io.ObjectStreamClass::forClass (52 bytes)
                              @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 13   java.lang.System::getSecurityManager (4 bytes)
                              @ 19   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 24   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 31   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 34   sun.reflect.misc.ReflectUtil::needsPackageAccessCheck (31 bytes)
                                @ 19   sun.reflect.misc.ReflectUtil::isAncestor (20 bytes)
                                  @ 3   java.lang.ClassLoader::getParent (32 bytes)   callee is too large
                              @ 44   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)
<writer thread='139919014151936'/>
   7090  485   !   4       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)
<writer thread='139919015204608'/>
   7103  486       4       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)
<writer thread='139919013099264'/>
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 4   sun.reflect.misc.ReflectUtil::checkPackageAccess (77 bytes)   callee is too large
                                @ 8   sun.reflect.misc.ReflectUtil::isNonPublicProxyClass (51 bytes)   callee is too large
                                @ 15   sun.reflect.misc.ReflectUtil::checkProxyPackageAccess (50 bytes)   callee is too large
<writer thread='139919015204608'/>
                              @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                              @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                              @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                              @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                              @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                              @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                              @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                              @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                              @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                              @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                              @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                @ 6   java.io.Bits::putLong (86 bytes)   too big
                              @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                              @ 206   java.io.Bits::putChar (16 bytes)   never executed
                              @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
<writer thread='139919013099264'/>
   7178  491       3       java.io.ObjectOutputStream::writeUTF (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
   7210  428       2       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
   7210  385       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
   7211  407       2       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)
                              @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
<writer thread='139919015204608'/>
   7215  438       3       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   made not entrant
   7216  487       4       java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)
<writer thread='139919013099264'/>
                                @ 1   java.lang.System::identityHashCode (0 bytes)   native method
   7229  432       2       java.io.ObjectStreamClass::getFields (22 bytes)
                              @ 8   java.lang.Object::clone (0 bytes)   no static binding
   7231  433       2       java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   7245  494       1       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
   7246  404       2       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   made not entrant
   7260  435       2       java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
   7262  437       2       java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)
                              @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   callee is too large
   7263  439       2       java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)
                              @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 23   java.io.OutputStream::write (79 bytes)   no static binding
             
<writer thread='139919015204608'/>
                              @ 77   sun.misc.Unsafe::getObject (0 bytes)   (intrinsic)
<writer thread='139919013099264'/>
                 @ 42   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 68   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   callee is too large
                              @ 80   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 107   java.lang.Math::min (11 bytes)
                              @ 124   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='139919015204608'/>
   7290  436       3       java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   made not entrant
   7290  493   !   4       java.io.ObjectOutputStream::writeObject0 (619 bytes)
<writer thread='139919013099264'/>
   7306  431       2       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)
                              @ 13   java.io.ObjectOutputStream$HandleTable::growEntries (58 bytes)   callee is too large
                              @ 28   java.io.ObjectOutputStream$HandleTable::growSpine (67 bytes)   callee is too large
                              @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   callee is too large
   7311  440       2       java.io.ObjectStreamClass::getObjFieldValues (10 bytes)
                              @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   callee is too large
   7325  429       2       java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7346  450       2       java.io.ObjectOutputStream::writeClassDesc (60 bytes)
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 47   java.io.ObjectOutputStream::writeProxyDesc (136 bytes)   callee is too large
                              @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   callee is too large
   7361  383       1       java.io.ObjectStreamClass$WeakClassKey::hashCode (5 bytes)
   7361  452       2       java.io.ObjectStreamClass::processQueue (21 bytes)
               !m             @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 11   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
   7384  445   !   2       java.io.ObjectStreamClass::lookup (335 bytes)
<writer thread='139919014151936'/>
                              @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 15   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                              @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)   accessor
                              @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   inline (hot)
                                  @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                                  @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                                  @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                                  @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                                  @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                  @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                                  @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                                  @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                                  @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                                  @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                                  @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                    @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                    @ 6   java.io.Bits::putLong (86 bytes)   too big
                                  @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                                  @ 206   java.io.Bits::putChar (16 bytes)   never executed
                                  @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                              @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   inline (hot)
                                @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (5280/5280 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                 @ 23   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                 \-&gt; TypeProfile (5119/5119 counts) = java/io/BufferedOutputStream
                                  @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 90   java.io.ObjectStreamClass::getFields (22 bytes)   inline (hot)
                              @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)   accessor
                              @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   inline (hot)
                                  @ 77   sun.misc.Unsafe::getObject (0 bytes)   (intrinsic)
                              @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)   accessor
               !              @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
<writer thread='139919013099264'/>
                              @ 7   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 15   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
                              @ 21   java.io.ObjectStreamClass::processQueue (21 bytes)
               !m               @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                                @ 11   java.util.concurrent.ConcurrentHashMap::remove (8 bytes)
               !m                 @ 4   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 29   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
                              @ 32   java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)
                                @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   java.lang.System::identityHashCode (0 bytes)   native method
                              @ 40   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   callee is too large
                              @ 57   java.lang.ref.Reference::get (5 bytes)   no static binding
                              @ 75   java.io.ObjectStreamClass$EntryFuture::&lt;init&gt; (5 bytes)
                                @ 1   java.io.ObjectStreamClass$EntryFuture::&lt;init&gt; (19 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 5   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 86   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 100   java.util.concurrent.ConcurrentHashMap::remove (32 bytes)
               !m               @ 20   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 112   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 126   java.lang.ref.Reference::get (5 bytes)   no static binding
                              @ 180   java.io.ObjectStreamClass$EntryFuture::getOwner (5 bytes)
                              @ 183   java.lang.Thread::currentThread (0 bytes)   intrinsic
              s!              @ 197   java.io.ObjectStreamClass$EntryFuture::get (46 bytes)   callee is too large
               !              @ 212   java.io.ObjectStreamClass::&lt;init&gt; (260 bytes)   callee is too large
              s               @ 230   java.io.ObjectStreamClass$EntryFuture::set (23 bytes)
                                @ 18   java.lang.Object::notifyAll (0 bytes)   native method
                              @ 246   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 249   java.util.concurrent.ConcurrentHashMap::put (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
              s!              @ 260   java.io.ObjectStreamClass$EntryFuture::get (46 bytes)   callee is too large
                              @ 315   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 320   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 325   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 328   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 331  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139919005615872'/>
   7492  505     n 0       sun.misc.Unsafe::getIntVolatile (native)   
<writer thread='139919013099264'/>
   7520  507       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
   7521  428       2       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   made not entrant
   7521  453       2       java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)
                              @ 15   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 28   java.lang.ref.Reference::get (5 bytes)   intrinsic
   7522  451       2       java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)
                              @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 8   java.lang.System::identityHashCode (0 bytes)   native method
   7548  456       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   7552  386       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
   7556  387       1       java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
   7556  462       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   7559  457       2       java.io.ObjectStreamClass::isExternalizable (9 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   7563  458       2       java.io.ObjectStreamClass::getClassDataLayout (20 bytes)
                              @ 9   java.io.ObjectStreamClass::getClassDataLayout0 (296 bytes)   callee is too large
   7569  459   !   2       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)
                              @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                                @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                  @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
                              @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 117   java.io.ObjectStreamClass::isProxy (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
               !              @ 128   java.io.ObjectOutputStream::writeExternalData (137 bytes)   callee is too large
               !              @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   callee is too large
   7665  518       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   7665  462       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   made not entrant
   7666  460       2       java.io.ObjectStreamClass::checkSerialize (20 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
   7667  479       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryRelease (8 bytes)   no static binding
                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
   7670  480       3       java.lang.Thread::interrupted (8 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
   7671  484       3       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 7   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
                              @ 21   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   7673  488       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7674  489       3       java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7675  490       3       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   callee is too large
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
   7692  477       3       java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7693  495       3       java.util.Arrays::copyOf (46 bytes)
                              @ 17   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 21   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 38   java.lang.Math::min (11 bytes)
                              @ 41   java.lang.System::arraycopy (0 bytes)   intrinsic
   7700  498       3       java.util.AbstractList::&lt;init&gt; (10 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7701  499       3       java.util.Arrays::copyOf (13 bytes)
                              @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
   7720  520       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   7734  497       3       java.util.ArrayList::&lt;init&gt; (12 bytes)
                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7736  501       3       java.util.ArrayList::iterator (9 bytes)
                              @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   7737  502       3       java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   7738  504       3       sun.misc.Unsafe::getAndAddInt (27 bytes)
                              @ 3   sun.misc.Unsafe::getIntVolatile (0 bytes)   intrinsic
                              @ 18   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   7739  510       3       java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
   7740  527   !   3       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)
                              @ 33   java.net.AbstractPlainSocketImpl::socketClose (6 bytes)
                                @ 2   java.net.AbstractPlainSocketImpl::socketClose0 (0 bytes)   no static binding
   7743  528       3       java.io.OutputStream::flush (1 bytes)
<writer thread='139919521801984'/>
   7744  536     n 0       java.net.SocketOutputStream::socketWrite0 (native)   
<writer thread='139919014151936'/>
   7755  434   !   3       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   made not entrant
<writer thread='139919013099264'/>
   7757  506       3       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
<writer thread='139919014151936'/>
   7763  496       4       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)
<writer thread='139919013099264'/>
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   7771  517       3       java.io.Bits::putLong (86 bytes)
   7773  511       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
   7796  509       3       java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   7800  512       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                              @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
<writer thread='139919014151936'/>
                              @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s               @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                               \-&gt; TypeProfile (5281/5281 counts) = java/io/BufferedOutputStream
                                @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   7835  405       2       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   made not entrant
   7835  508       4       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)
<writer thread='139919013099264'/>
   7837  542       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   7838  520       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   made not entrant
   7838  513       3       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
                              @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
   7848  522       3       java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
                              @ 53   java.lang.Error::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
<writer thread='139919014151936'/>
                              @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
<writer thread='139919013099264'/>
   7852  523       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
   7876  514       3       java.util.ArrayList::grow (45 bytes)
                              
<writer thread='139919014151936'/>
   7877  407       2       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   made not entrant
   7877  516       4       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)
                              @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
<writer thread='139919013099264'/>
@ 28   java.util.ArrayList::hugeCapacity (26 bytes)
                                @ 8   java.lang.OutOfMemoryError::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 38   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
   7887  539       3       java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7893  524   !   3       java.io.ObjectOutputStream::writeObject (38 bytes)
                              @ 9   java.io.ObjectOutputStream::writeObjectOverride (1 bytes)
               !              @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
               !              @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   callee is too large
   7895  521   !   3       java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)
<writer thread='139919521801984'/>
   7901  546     n 0       sun.misc.Unsafe::putObject (native)   
<writer thread='139919014151936'/>
   7908  431       2       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   made not entrant
   7909  519       4       java.io.ObjectOutputStream::writeClassDesc (60 bytes)
<writer thread='139919013099264'/>
   7915  544       3       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                              @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
   7920  545       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer::findNodeFromTail (26 bytes)
   7931  538       3       java.util.concurrent.TimeUnit::x (27 bytes)
   7938  529       3       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   7939  530       3       java.io.ObjectOutputStream::flush (8 bytes)
                              @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                                @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                                @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   7941  531       3       java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                              @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   7942  532  s    3       java.io.BufferedOutputStream::flush (12 bytes)
                              @ 1   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
<writer thread='139919521801984'/>
   7957  549     n 0       java.lang.Class::getComponentType (native)   
<writer thread='139919013099264'/>
   7960  537   !   3       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)
                              @ 13   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 42   java.io.ObjectOutputStream::reset (49 bytes)   callee is too large
               !              @ 57   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
                              @ 64   java.io.ObjectOutputStream::flush (8 bytes)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                                  @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                                  @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   7982  550   !   3       java.io.ObjectOutputStream::writeArray (611 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 12   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 28   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 33   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 36   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 43   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 73   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)   callee is too large
                              @ 116   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 130   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   callee is too large
                              @ 160   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 173   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongs (105 bytes)   callee is too large
                              @ 203   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 216   java.io.ObjectOutputStream$BlockDataOutputStream::writeFloats (101 bytes)   callee is too large
                              @ 246   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 259   java.io.ObjectOutputStream$BlockDataOutputStream::writeDoubles (101 bytes)   callee is too large
<writer thread='139919014151936'/>
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                  @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 22   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   already compiled into a medium method
                                @ 36   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                @ 44   java.io.ObjectOutputStream::writeClassDescriptor (6 bytes)   inline (hot)
                                  @ 2   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                @ 48   java.io.ObjectStreamClass::forClass (52 bytes)   too big
                                @ 57   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                @ 66   java.io.ObjectOutputStream::isCustomSubclass (21 bytes)   inline (hot)
                                  @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 4   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                    @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                    @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                  @ 9   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                    @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                    @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                @ 73   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)   never executed
                                @ 78   java.io.ObjectOutputStream::annotateClass (1 bytes)   inline (hot)
                                @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 101   java.io.ObjectStreamClass::getSuperDesc (9 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 105   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   too big
<writer thread='139919013099264'/>
                              @ 289   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 302   java.io.ObjectOutputStream$BlockDataOutputStream::writeShorts (104 bytes)   callee is too large
                              @ 332   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 345   java.io.ObjectOutputStream$BlockDataOutputStream::writeChars (104 bytes)   callee is too large
                              @ 375   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 388   java.io.ObjectOutputStream$BlockDataOutputStream::writeBooleans (79 bytes)   callee is too large
                              @ 398  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 422   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
               !              @ 533   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
   8090  563       1       java.io.OutputStream::flush (1 bytes)
   8090  528       3       java.io.OutputStream::flush (1 bytes)   made not entrant
   8090  557       1       java.lang.ThreadLocal::getMap (5 bytes)
   8090  317       3       java.lang.ThreadLocal::getMap (5 bytes)   made not entrant
   8090  533       3       java.io.BufferedOutputStream::flushBuffer (29 bytes)
                              @ 20   java.io.OutputStream::write (79 bytes)   no static binding
<writer thread='139919014151936'/>
   8100  450       2       java.io.ObjectOutputStream::writeClassDesc (60 bytes)   made not entrant
   8112  547       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)
                              @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
<writer thread='139919013099264'/>
   8119  534       3       java.net.SocketOutputStream::write (8 bytes)
               !              @ 4   java.net.SocketOutputStream::socketWrite (159 bytes)   callee is too large
   8120  543       3       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
   8120  535   !   3       java.net.SocketOutputStream::socketWrite (159 bytes)
               !m             @ 71   java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)
                              @ 82   java.net.SocketOutputStream::socketWrite0 (0 bytes)   native method
               !m             @ 109   java.net.AbstractPlainSocketImpl::setConnectionResetPending (37 bytes)   callee is too large
                              @ 118   java.net.SocketException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
               !m             @ 127   java.net.AbstractPlainSocketImpl::isClosedOrPending (34 bytes)
                              @ 139   java.net.SocketException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
               !m             @ 152   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   callee is too large
               !m             @ 89   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='139919014151936'/>
   8144  463       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   made not entrant
   8146  562   !   4       java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)
<writer thread='139919013099264'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 34   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 38   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 43   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 47   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 52   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 57   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 60   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 63  java/lang/ArrayIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139919014151936'/>
   8165  521   !   3       java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)   made not entrant
   8191  572   !   4       java.io.ObjectOutputStream::writeSerialData (221 bytes)
<writer thread='139919013099264'/>
   8201  573       1       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                              @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
   8202  544       3       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)   made not entrant
   8202  540       3       java.util.ArrayList$Itr::next (66 bytes)
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 14   java.util.ArrayList::access$000 (5 bytes)
                              @ 24  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
                              @ 46  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
   8221  541       3       java.util.ArrayList$Itr::checkForComodification (23 bytes)
                              @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
   8222  578       3       java.util.concurrent.TimeUnit$1::convert (6 bytes)
                              @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
   8223  575       3       java.util.concurrent.CountDownLatch::await (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
   8247  567   !   3       java.util.concurrent.FutureTask::run (126 bytes)
                              @ 15   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 42   java.util.concurrent.Callable::call (0 bytes)   not inlineable
                              @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   callee is too large
                              @ 71   java.util.concurrent.FutureTask::set (36 bytes)   callee is too large
                              @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)
                                @ 13   java.lang.Thread::yield (0 bytes)   native method
                              @ 91   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)
                                @ 13   java.lang.Thread::yield (0 bytes)   native method
<writer thread='139919005615872'/>
   8272  582     n 0       sun.misc.Unsafe::putOrderedInt (native)   
<writer thread='139919013099264'/>
   8275  587       3       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)
                              @ 4   java.util.HashMap::get (23 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.reflect.Method::hashCode (19 bytes)
                                    @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                                    @ 4   java.lang.Class::getName (21 bytes)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                                    @ 11   java.lang.reflect.Method::getName (5 bytes)
                                    @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 21   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='139919014151936'/>
                              @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)   inline (hot)
                              @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
               !              @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   too big
                              @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                              @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
                              @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
               !              @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   already compiled into a big method
<writer thread='139919013099264'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 27   java.lang.reflect.Method::getName (5 bytes)
                              @ 30   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 35   java.lang.reflect.Method::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 62   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 65   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 72   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 83   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 92   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.reflect.Method::hashCode (19 bytes)
                                    @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                                    @ 4   java.lang.Class::getName (21 bytes)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                                    @ 11   java.lang.reflect.Method::getName (5 bytes)
                                    @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
<writer thread='139919015204608'/>
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (5281/5281 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 24   java.io.ObjectOutputStream$ReplaceTable::lookup (24 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                  @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 33   java.io.ObjectOutputStream::writeNull (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 51   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                              @ 65   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 78   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                  @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (5281/5281 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 177   java.lang.Object::getClass (0 bytes)   (intrinsic)
               !              @ 185   java.io.ObjectStreamClass::lookup (335 bytes)   hot method too big
                              @ 192   java.io.ObjectStreamClass::hasWriteReplaceMethod (17 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 448   java.io.ObjectOutputStream::writeString (74 bytes)   inline (hot)
                                @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   too big
                                @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   already compiled into a medium method
                                @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   too big
                                @ 61   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 70   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongUTF (29 bytes)   never executed
                              @ 456   java.lang.Class::isArray (0 bytes)   (intrinsic)
               !              @ 467   java.io.ObjectOutputStream::writeArray (611 bytes)   hot method too big
                              @ 488   java.io.ObjectOutputStream::writeEnum (63 bytes)   too big
               !              @ 506   java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   inline (hot)
                                @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                    @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                      @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                  @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                    @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                      @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                                  @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                  @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   inline (hot)
                                    @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 22   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   too big
                                    @ 36   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                    @ 44   java.io.ObjectOutputStream::writeClassDescriptor (6 bytes)   inline (hot)
                                      @ 2   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                    @ 48   java.io.ObjectStreamClass::forClass (52 bytes)   too big
                                    @ 57   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                    @ 66   java.io.ObjectOutputStream::isCustomSubclass (21 bytes)   inline (hot)
                                      @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 4   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                        @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                        @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                      @ 9   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                        @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                        @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                    @ 73   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)   never executed
                                    @ 78   java.io.ObjectOutputStream::annotateClass (1 bytes)   inline (hot)
                                    @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                    @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 101   java.io.ObjectStreamClass::getSuperDesc (9 bytes)   inline (hot)
                                      @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                    @ 105   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   too big
                                @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                  @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                    @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                      @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
               !                @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)   inline (hot)
                                  @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                  @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                    @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
               !                  @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   too big
                                  @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                  @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
                                  @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
               !                  @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                      @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                      @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                    @ 15   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                                    @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)   inline (hot)
                                      @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                    @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)   accessor
                                    @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)   inline (hot)
                                      @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   inline (hot)
                                        @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                                        @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                                        @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                                        @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                                        @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                        @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                                        @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                        @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                                        @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                                        @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                                        @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                                        @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                          @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                          @ 6   java.io.Bits::putLong (86 bytes)   too big
                                        @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                                        @ 206   java.io.Bits::putChar (16 bytes)   never executed
                                        @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                    @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   inline (hot)
                                      @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                        @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                         @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                         \-&gt; TypeProfile (5281/5281 counts) = java/io/BufferedOutputStream
                                          @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                       @ 23   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                       \-&gt; TypeProfile (5939/5939 counts) = java/io/BufferedOutputStream
                                        @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 90   java.io.ObjectStreamClass::getFields (22 bytes)   inline (hot)
                                    @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)   accessor
                                    @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)   inline (hot)
                                      @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   inline (hot)
                                        @ 77   sun.misc.Unsafe::getObject (0 bytes)   (intrinsic)
                                    @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)   accessor
               !                    @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
                              @ 587   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (5281/5281 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 611   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
<writer thread='139919014151936'/>
   8347  461   !   3       java.io.ObjectOutputStream::writeSerialData (221 bytes)   made not entrant
   8349  574       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)
<writer thread='139919013099264'/>
   8413  551       3       java.lang.Integer::valueOf (32 bytes)
                              @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8418  397       1       java.lang.reflect.Method::getDeclaringClass (5 bytes)
   8419  552       3       java.lang.Integer::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8422  588       3       org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139919014151936'/>
                              @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                              @ 24   java.lang.String::length (6 bytes)   inline (hot)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139919013099264'/>
   8431  553       3       java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   8435  564       3       java.lang.reflect.Method::hashCode (19 bytes)
                              @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 4   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 11   java.lang.reflect.Method::getName (5 bytes)
                              @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
   8439  586       3       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                              @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                              @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m               @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
   8444  554       3       java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   8449  555       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   8450  556       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8453  559       3       java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8457  400       1       org.openjdk.jmh.results.Result::getRole (5 bytes)
   8458  398       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
   8464  593       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   8465  456       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   made not entrant
   8465  560       3       org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
   8467  561       3       java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8473  399       1       org.openjdk.jmh.infra.IterationParamsL2::getCount (5 bytes)
   8474  565       3       org.openjdk.jmh.infra.IterationParams::getCount (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getCount (5 bytes)
   8477  566       3       java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
   8480  568       3       java.util.concurrent.CountDownLatch::countDown (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
   8483  569       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryReleaseShared (8 bytes)   no static binding
                              @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
   8488  570       3       java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   8491  571       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 41   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
                              @ 55   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   8497  576       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquireShared (8 bytes)   no static binding
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
   8501  577       3       java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
   8502  580       3       org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                              @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
   8505  596       3       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
   8506  581       3       java.util.concurrent.FutureTask::set (36 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   intrinsic
                              @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   callee is too large
   8550  589       3       org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m             @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
<writer thread='139919005615872'/>
   8551  601     n 0       sun.misc.Unsafe::park (native)   
<writer thread='139919521801984'/>
   8551  605     n 0       sun.misc.Unsafe::unpark (native)   
<writer thread='139919013099264'/>
   8551  584       3       java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
<writer thread='139919014151936'/>
   8552  465       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   made not entrant
   8552  579       4       java.io.ObjectStreamField::getTypeCode (9 bytes)
<writer thread='139919013099264'/>
               !                @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
   8559  608       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)
                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
   8563  606   !   3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)
                              @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::predecessor (19 bytes)
                                @ 13   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 22   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::setHead (16 bytes)
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::shouldParkAfterFailedAcquire (50 bytes)   callee is too large
                              @ 67   java.util.concurrent.locks.AbstractQueuedSynchronizer::parkAndCheckInterrupt (8 bytes)
                                @ 1   java.util.concurrent.locks.LockSupport::park (23 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 6   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                    @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                  @ 14   sun.misc.Unsafe::park (0 bytes)   native method
<writer thread='139919014151936'/>
                              @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139919013099264'/>
                                  @ 19   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                    @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
<writer thread='139919014151936'/>
   8597  267       3       java.io.ObjectStreamField::getTypeCode (9 bytes)   made not entrant
   8600  598       4       java.io.ObjectOutputStream::writeByte (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
   8606  466       3       java.io.ObjectOutputStream::writeByte (9 bytes)   made not entrant
<writer thread='139919013099264'/>
                              @ 87   java.util.concurrent.locks.AbstractQueuedSynchronizer::cancelAcquire (154 bytes)   callee is too large
<writer thread='139919014151936'/>
   8626  599       4       java.io.ObjectOutputStream::writeUTF (9 bytes)
<writer thread='139919013099264'/>
   8636  613       1       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
   8640  543       3       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)   made not entrant
   8654  597       3       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
   8658  583       3       java.util.concurrent.FutureTask::finishCompletion (74 bytes)
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 39   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                              @ 65   java.util.concurrent.FutureTask::done (1 bytes)   no static binding
   8664  585       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
   8686  591   !   3       java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)
                              @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
   8795  592       3       java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)
   8797  595       3       java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
   8800  594   !   3       java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)
                              @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
   8819  600       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::predecessor (19 bytes)
                              @ 13   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   8822  602       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
   8824  607       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::setHead (16 bytes)
   8825  603       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)
                              @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
   8829  604       3       java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                              @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
   8831  609       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)
                              @ 19   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::unlinkCancelledWaiters (67 bytes)   callee is too large
                              @ 31   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 36   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8839  617       3       java.io.ObjectStreamClass::writeNonProxy (161 bytes)
<writer thread='139919014151936'/>
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)   inline (hot)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   inline (hot)
                                  @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   inline (hot)
                                  @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                    @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                                  @ 24   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139919013099264'/>
                              @ 5   java.io.ObjectOutputStream::writeUTF (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                  @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                  @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 10   java.io.ObjectStreamClass::getSerialVersionUID (33 bytes)
                                @ 13   java.io.ObjectStreamClass$2::&lt;init&gt; (10 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 29   java.lang.Long::longValue (5 bytes)
                              @ 13   java.io.ObjectOutputStream::writeLong (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   callee is too large
                              @ 31   java.io.ObjectOutputStream::getProtocolVersion (5 bytes)
                              @ 88   java.io.ObjectOutputStream::writeByte (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 97   java.io.ObjectOutputStream::writeShort (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   callee is too large
                              @ 122   java.io.ObjectStreamField::getTypeCode (9 bytes)
                                @ 5   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 125   java.io.ObjectOutputStream::writeByte (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 131   java.io.ObjectStreamField::getName (5 bytes)
                              @ 134   java.io.ObjectOutputStream::writeUTF (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                  @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                  @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 139   java.io.ObjectStreamField::isPrimitive (27 bytes)
                                @ 5   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 148   java.io.ObjectStreamField::getTypeString (16 bytes)
                                @ 1   java.io.ObjectStreamField::isPrimitive (27 bytes)
                                  @ 5   java.lang.String::charAt (29 bytes)   callee is too large
                              @ 151   java.io.ObjectOutputStream::writeTypeString (40 bytes)   callee is too large
   8875  610       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8877  611   !   3       java.util.concurrent.locks.AbstractQueuedSynchronizer::fullyRelease (54 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryRelease (8 bytes)   no static binding
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
                              @ 36   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   8880  612       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::checkInterruptWhileWaiting (27 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 11   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferAfterCancelledWait (34 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   callee is too large
                                @ 20   java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)   callee is too large
                                @ 26   java.lang.Thread::yield (0 bytes)   native method
   8908  628       1       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
   8909  597       3       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)   made not entrant
   8909  614       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)
                              @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   callee is too large
   8911  615       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)
                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   callee is too large
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 40   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
   8915  624       3       java.util.AbstractQueue::&lt;init&gt; (5 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   8916  421       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getMode (5 bytes)
   8919  629       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::await (98 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 15   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)   callee is too large
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::fullyRelease (54 bytes)   callee is too large
                              @ 35   java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer::findNodeFromTail (26 bytes)
                              @ 42   java.util.concurrent.locks.LockSupport::park (23 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 6   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                  @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                @ 14   sun.misc.Unsafe::park (0 bytes)   native method
                                @ 19   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                  @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                              @ 47   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::checkInterruptWhileWaiting (27 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 11   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferAfterCancelledWait (34 bytes)   callee is too large
               !              @ 64   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                              @ 85   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::unlinkCancelledWaiters (67 bytes)   callee is too large
                              @ 94   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::reportInterruptAfterWait (22 bytes)
                                @ 9   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
   8946  630       3       java.io.ObjectOutputStream::writeString (74 bytes)
                              @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                              @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 61   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 70   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongUTF (29 bytes)
                                @ 2   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   callee is too large
                                @ 7   java.lang.String::length (6 bytes)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   callee is too large
                                @ 25   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTFBody (386 bytes)   callee is too large
   8955  625       3       java.lang.reflect.Method::invoke (62 bytes)
                              @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)
                                @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   native method
                                @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 21   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 36   java.lang.reflect.AccessibleObject::checkAccess (96 bytes)   callee is too large
                              @ 49   java.lang.reflect.Method::acquireMethodAccessor (44 bytes)   callee is too large
                              @ 56   sun.reflect.MethodAccessor::invoke (0 bytes)   not inlineable
   8959  423       1       org.openjdk.jmh.results.IterationResult::getMetadata (5 bytes)
   8960  424       1       org.openjdk.jmh.runner.ForkedRunner::access$000 (5 bytes)
   8960  626       3       sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)
                              @ 6   sun.reflect.MethodAccessorImpl::invoke (0 bytes)   no static binding
   8961  616       3       java.lang.reflect.Modifier::isPublic (12 bytes)
   8962  408       1       java.lang.Boolean::booleanValue (5 bytes)
   8962  621       3       java.lang.Boolean::valueOf (14 bytes)
   8963  622       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                              @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m               @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
   8965  413       1       org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)
   8966  623       3       java.util.ArrayList::addAll (54 bytes)
                              @ 1   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 17   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 31   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='139919014151936'/>
   8974  491       3       java.io.ObjectOutputStream::writeUTF (9 bytes)   made not entrant
<writer thread='139919005615872'/>
   8987  632     n 0       sun.reflect.Reflection::getClassAccessFlags (native)   (static)
<writer thread='139919014151936'/>
   8988  558       4       java.io.Bits::putLong (86 bytes)
<writer thread='139919013099264'/>
   8989  410       1       org.openjdk.jmh.infra.IterationParamsL2::getTime (5 bytes)
   8989  414       1       org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)
   9000  411       1       org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
   9000  412       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeout (5 bytes)
   9001  415       1       org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)
   9001  422       1       org.openjdk.jmh.results.BenchmarkTaskResult::getResults (5 bytes)
   9001  416       1       org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
   9002  417       1       org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)
<writer thread='139919014151936'/>
<writer thread='139919013099264'/>
   9028  418       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
   9029  419       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
   9043  420       1       java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)
   9044  631   !   3       sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)
                              @ 8  java/lang/NullPointerException::&lt;init&gt; (not loaded)   not inlineable
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 52   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 60   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   callee is too large
                              @ 69   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
   9047  618       3       java.io.ObjectOutputStream::writeLong (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   callee is too large
   9055  636       3       java.util.AbstractSet::&lt;init&gt; (5 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   9057  619       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)
                              @ 22   java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 44   java.io.DataOutputStream::writeLong (118 bytes)   callee is too large
   9058  620       3       java.io.ObjectOutputStream::writeShort (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   callee is too large
<writer thread='139919014151936'/>
   9059  517       3       java.io.Bits::putLong (86 bytes)   made not entrant
<writer thread='139919013099264'/>
   9059  635       3       java.io.ObjectOutputStream::writeTypeString (40 bytes)
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 16   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 27   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 36   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
<writer thread='139919014151936'/>
   9063  633       4       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)
<writer thread='139919013099264'/>
   9065  310       1       java.lang.StringCoding$StringEncoder::requestedCharsetName (5 bytes)
<writer thread='139919014151936'/>
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
<writer thread='139919013099264'/>
   9065  634       1       java.io.SerialCallbackContext::getDesc (5 bytes)
   9068  637       3       java.util.ArrayList::isEmpty (13 bytes)
<writer thread='139919014151936'/>
   9070  484       3       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   made not entrant
   9082  639       4       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
<writer thread='139919013099264'/>
   9083  638       3       java.util.Arrays::fill (28 bytes)
                              @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
   9089  652   !   3       org.openjdk.jmh.runner.BenchmarkHandler::runIteration (628 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
                              @ 7   org.openjdk.jmh.infra.IterationParams::getTime (5 bytes)
                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getTime (5 bytes)
                              @ 18   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
<writer thread='139919014151936'/>
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                              @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease (12 bytes)   inline (hot)
                               \-&gt; TypeProfile (1364/11502 counts) = java/util/concurrent/ThreadPoolExecutor$Worker
                               \-&gt; TypeProfile (10138/11502 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                @ 2   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 7   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
<writer thread='139919013099264'/>
                              @ 29   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 38   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 58   org.openjdk.jmh.infra.Control::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                        @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                          @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139919014151936'/>
   9164  479       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   made not entrant
   9165  670       4       java.util.ArrayList$Itr::hasNext (20 bytes)
<writer thread='139919013099264'/>
                              @ 61   org.openjdk.jmh.runner.InfraControl::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                                  @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                    @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
<writer thread='139919014151936'/>
                              @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
<writer thread='139919013099264'/>
                              @ 95   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::&lt;init&gt; (15 bytes)
<writer thread='139919014151936'/>
   9175  326       3       java.util.ArrayList$Itr::hasNext (20 bytes)   made not entrant
   9177  627       4       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
<writer thread='139919013099264'/>
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 105   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 109   org.openjdk.jmh.infra.BenchmarkParams::getTimeout (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeout (5 bytes)
                              @ 115   org.openjdk.jmh.runner.options.TimeValue::convertTo (13 bytes)
                                @ 9   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                  @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
<writer thread='139919014151936'/>
   9188  596       3       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)   made not entrant
   9194  525   !   4       java.io.ObjectStreamClass::lookup (335 bytes)
<writer thread='139919013099264'/>
               !              @ 124   org.openjdk.jmh.runner.BenchmarkHandler::startProfilers (58 bytes)   callee is too large
                              @ 131   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 144   java.util.concurrent.ExecutorCompletionService::&lt;init&gt; (52 bytes)   callee is too large
                              @ 179   java.util.concurrent.ExecutorCompletionService::submit (38 bytes)   callee is too large
                              @ 193   org.openjdk.jmh.runner.InfraControl::awaitWarmupReady (5 bytes)
               !                @ 1   org.openjdk.jmh.runner.InfraControlL2::awaitWarmupReady (19 bytes)
                                  @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 200   org.openjdk.jmh.infra.BenchmarkParams::getMode (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getMode (5 bytes)
                              @ 203   java.lang.Enum::ordinal (5 bytes)
                              @ 234   org.openjdk.jmh.runner.options.TimeValue::convertTo (13 bytes)
                                @ 9   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                  @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 240   java.util.concurrent.ExecutorCompletionService::poll (15 bytes)
                                @ 6   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
                              @ 256   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 262   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 274   org.openjdk.jmh.runner.InfraControl::announceDone (14 bytes)
                              @ 279   org.openjdk.jmh.runner.InfraControl::awaitWarmdownReady (5 bytes)
               !                @ 1   org.openjdk.jmh.runner.InfraControlL2::awaitWarmdownReady (19 bytes)
                                  @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 284   java.util.ArrayList::size (5 bytes)
                              @ 300   java.util.concurrent.TimeUnit$3::toNanos (11 bytes)
                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
                              @ 305   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 309   java.lang.Math::max (12 bytes)
                              @ 321   java.util.concurrent.ExecutorCompletionService::poll (15 bytes)
                                @ 6   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
               !              @ 339   com.sun.proxy.$Proxy0::print (34 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
                              @ 372   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::access$100 (5 bytes)
               !m             @ 384   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 400   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 417   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
                              @ 431   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 438   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 447   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 457   java.util.Iterator::next (0 bytes)   no static binding
                              @ 469   java.util.concurrent.FutureTask::get (23 bytes)
                                @ 13   java.util.concurrent.FutureTask::awaitDone (171 bytes)   callee is too large
                                @ 19   java.util.concurrent.FutureTask::report (37 bytes)   callee is too large
                              @ 483   org.openjdk.jmh.results.BenchmarkTaskResult::getResults (5 bytes)
                              @ 486   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 496   org.openjdk.jmh.results.BenchmarkTaskResult::getAllOps (5 bytes)
                              @ 506   org.openjdk.jmh.results.BenchmarkTaskResult::getMeasuredOps (5 bytes)
              s               @ 519   java.lang.Throwable::getCause (17 bytes)   no static binding
              s               @ 522   java.lang.Throwable::getCause (17 bytes)   no static binding
              s               @ 525   java.lang.Throwable::getCause (17 bytes)   no static binding
                              @ 542   java.util.List::add (0 bytes)   no static binding
                              @ 559   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
                              @ 580   org.openjdk.jmh.results.IterationResultMetaData::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 583   org.openjdk.jmh.results.IterationResult::&lt;init&gt; (34 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 592   org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
                                @ 1   java.util.ArrayList::iterator (9 bytes)
                                  @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   java.util.ArrayList$Itr::hasNext (20 bytes)
                                  @ 8   java.util.ArrayList::access$000 (5 bytes)
                                @ 17   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                                @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
               !              @ 600   org.openjdk.jmh.runner.BenchmarkHandler::stopProfilers (66 bytes)   callee is too large
                              
<writer thread='139919014151936'/>
                              @ 15   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   inline (hot)
                              @ 21   java.io.ObjectStreamClass::processQueue (21 bytes)   inline (hot)
               !m               @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)   inline (hot)
                              @ 29   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   inline (hot)
                              @ 32   java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)   inline (hot)
                                @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)   inline (hot)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 8   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 40   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass$WeakClassKey::hashCode (5 bytes)   accessor
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                @ 73   java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)   inline (hot)
                                  @ 15   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 28   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 149   java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)   inline (hot)
                                  @ 15   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 28   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 57   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
<writer thread='139919013099264'/>
@ 605   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 621   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (42 bytes)   not inlineable
<writer thread='139919014151936'/>
   9367  445   !   2       java.io.ObjectStreamClass::lookup (335 bytes)   made not entrant
   9385  526       4       java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)
                              @ 15   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 28   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
   9396  453       2       java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)   made not entrant
   9403  548   !   4       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)
                              @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   already compiled into a big method
                              @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                  @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
               !              @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)   inline (hot)
                                @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)   inline (hot)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                  @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
               !                @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   too big
                                @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
                                @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
               !                @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   already compiled into a big method
   9662  459   !   2       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   made not entrant
   9685  684       4       java.lang.Thread::interrupted (8 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
   9691  480       3       java.lang.Thread::interrupted (8 bytes)   made not entrant
   9701  683       4       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                  @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                  @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                  @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                  @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                  @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                    @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                    @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
   9754  490       3       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   made not entrant
   9755  680       4       java.util.Arrays::copyOf (46 bytes)
                              @ 38   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 41   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   9782  495       3       java.util.Arrays::copyOf (46 bytes)   made not entrant
   9788  695       4       java.util.ArrayList::iterator (9 bytes)
                              @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   9798  501       3       java.util.ArrayList::iterator (9 bytes)   made not entrant
   9804  693       4       java.util.ArrayList::&lt;init&gt; (12 bytes)
                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   9821  497       3       java.util.ArrayList::&lt;init&gt; (12 bytes)   made not entrant
   9823  699       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                    @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                    @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                    @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
   9870  511       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   made not entrant
   9891  696       4       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
   9944  506       3       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)   made not entrant
   9956  700   !   4       java.io.ObjectOutputStream::writeArray (611 bytes)
<writer thread='139919013099264'/>
   9999  672       3       org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
                              @ 1   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 8   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 17   java.util.Iterator::next (0 bytes)   no static binding
                              @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
  10010  671       3       org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)
                              @ 4   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 30   org.openjdk.jmh.it.ccontrol.CompilerControlDontInlineActualTest::compilerControlSpecimen (5 bytes)   disallowed by CompilerOracle
                              @ 40   java.lang.System::nanoTime (0 bytes)   intrinsic
  10014  685   !   3       java.util.concurrent.LinkedBlockingQueue::poll (134 bytes)
                              @ 8   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 27   java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
                              @ 32   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 50   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 62   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::awaitNanos (156 bytes)   callee is too large
                              @ 73   java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
                              @ 80   java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 95   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 112   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 102   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 128   java.util.concurrent.LinkedBlockingQueue::signalNotFull (33 bytes)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
<writer thread='139919014151936'/>
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 12   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   already compiled into a big method
                              @ 28   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                  @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 33   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 36   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 43   java.lang.Class::isPrimitive (0 bytes)   (intrinsic)
                              @ 73   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   too big
                              @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)   too big
                              @ 422   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
               !              @ 533   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
<writer thread='139919013099264'/>
  10063  641       3       java.util.ArrayList::toArray (12 bytes)
                              @ 8   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
  10140  719   !   3       java.util.concurrent.LinkedBlockingQueue::take (93 bytes)
                              @ 15   java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
                              @ 19   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::await (98 bytes)   callee is too large
                              @ 38   java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
                              @ 43   java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 56   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 73   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 63   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 88   java.util.concurrent.LinkedBlockingQueue::signalNotFull (33 bytes)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
<writer thread='139919015204608'/>
  10192  401   !   2       java.io.ObjectOutputStream::writeObject0 (619 bytes)   made not entrant
  10197  712       4       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
<writer thread='139919014151936'/>
  10212  550   !   3       java.io.ObjectOutputStream::writeArray (611 bytes)   made not entrant
  10212  713       4       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                              @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
  10215  513       3       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   made not entrant
  10215  704       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
  10228  523       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   made not entrant
  10232  705       4       java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                              @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
<writer thread='139919013099264'/>
  10251  640       3       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
  10252  648   !   3       org.openjdk.jmh.runner.BaseRunner::runSystemGC (309 bytes)
                              @ 4   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                  @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)   recursive inlining too deep
                                  @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
                                @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
                              @ 10   java.lang.Boolean::valueOf (14 bytes)
                              @ 13   org.openjdk.jmh.util.Optional::orElse (16 bytes)
                              @ 19   java.lang.Boolean::booleanValue (5 bytes)
                              @ 29   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 35   java.lang.management.ManagementFactory::getGarbageCollectorMXBeans (4 bytes)
                                @ 0   sun.management.ManagementFactoryHelper::getGarbageCollectorMXBeans (66 bytes)   callee is too large
                              @ 38   java.util.List::iterator (0 bytes)   no static binding
                              @ 47   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 57   java.util.Iterator::next (0 bytes)   no static binding
                              @ 69  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
                              @ 88   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
<writer thread='139919015204608'/>
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                               \-&gt; TypeProfile (11008/11008 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                    @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                    @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                    @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                  @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
  10263  512       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   made not entrant
<writer thread='139919014151936'/>
  10272  522       3       java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   made not entrant
  10273  732       4       java.util.HashMap::getNode (148 bytes)
<writer thread='139919015204608'/>
  10273  727   !   4       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)
<writer thread='139919013099264'/>
                              @ 98   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 107   java.util.ArrayList$Itr::hasNext (20 bytes)
                                @ 8   java.util.ArrayList::access$000 (5 bytes)
                              @ 117   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                              @ 130  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
                              @ 140   java.lang.System::gc (7 bytes)
                                @ 0   java.lang.Runtime::getRuntime (4 bytes)
                                @ 3   java.lang.Runtime::gc (0 bytes)   native method
                              @ 149   java.util.ArrayList::isEmpty (13 bytes)
<writer thread='139919014151936'/>
<writer thread='139919015204608'/>
  10291  527   !   3       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   made not entrant
  10292  703       4       java.util.ArrayList::grow (45 bytes)
<writer thread='139919013099264'/>
               !              @ 163   com.sun.proxy.$Proxy0::println (34 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
                              @ 174   java.util.concurrent.TimeUnit::sleep (27 bytes)
                                @ 8   java.util.concurrent.TimeUnit$3::toMillis (2 bytes)
                                @ 15   java.util.concurrent.TimeUnit$3::excessNanos (2 bytes)
                                @ 23   java.lang.Thread::sleep (61 bytes)   callee is too large
                              @ 182   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m             @ 185   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 190   java.lang.System::nanoTime (0 bytes)   intrinsic
<writer thread='139919015204608'/>
                              @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
  10312  514       3       java.util.ArrayList::grow (45 bytes)   made not entrant
<writer thread='139919013099264'/>
                              @ 198   java.lang.System::nanoTime (0 bytes)   intrinsic
<writer thread='139919015204608'/>
  10315  733       4       java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)
<writer thread='139919014151936'/>
  10324  161       3       java.util.HashMap::getNode (148 bytes)   made not entrant
  10324  739   !   4       java.io.ObjectOutputStream::writeObject (38 bytes)
<writer thread='139919013099264'/>
                              @ 204   java.util.concurrent.TimeUnit$1::toMillis (6 bytes)
                              @ 220   java.util.concurrent.TimeUnit::sleep (27 bytes)
                                @ 8   java.util.concurrent.TimeUnit$3::toMillis (2 bytes)
                                @ 15   java.util.concurrent.TimeUnit$3::excessNanos (2 bytes)
                                @ 23   java.lang.Thread::sleep (61 bytes)   callee is too large
                              @ 228   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m             @ 231   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 238   java.util.ArrayList::iterator (9 bytes)
<writer thread='139919015204608'/>
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer::findNodeFromTail (26 bytes)   inline (hot)
  10330  545       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)   made not entrant
<writer thread='139919013099264'/>
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
<writer thread='139919015204608'/>
  10340  738       4       java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='139919014151936'/>
               !              @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
               !              @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   too big
<writer thread='139919013099264'/>
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 247   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 257   java.util.Iterator::next (0 bytes)   no static binding
                              @ 271  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
               !              @ 300   com.sun.proxy.$Proxy0::println (34 bytes)
<writer thread='139919014151936'/>
  10346  524   !   3       java.io.ObjectOutputStream::writeObject (38 bytes)   made not entrant
  10346  503       4       java.io.ObjectStreamClass::forClass (52 bytes)
<writer thread='139919015204608'/>
                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
  10349  179       3       java.lang.StringBuilder::&lt;init&gt; (7 bytes)   made not entrant
<writer thread='139919013099264'/>
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
<writer thread='139919015204608'/>
  10352  740       4       java.io.ObjectStreamClass::writeNonProxy (161 bytes)
<writer thread='139919014151936'/>
                              @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
<writer thread='139919013099264'/>
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
<writer thread='139919014151936'/>
  10360  409       2       java.io.ObjectStreamClass::forClass (52 bytes)   made not entrant
  10374  745   !   4       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)
                              @ 17   java.lang.String::hashCode (55 bytes)   inline (hot)
                               \-&gt; TypeProfile (7033/7205 counts) = java/lang/String
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)   inline (hot)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                               \-&gt; TypeProfile (3376/3376 counts) = java/lang/String
                              @ 192   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   inline (hot)
                                @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   (intrinsic)
                                @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed &lt; MinInliningThreshold times
                                @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                                @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                                @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   too big
               !                @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (487 bytes)   too big
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   too big
<writer thread='139919013099264'/>
  10548  757       1       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
  10552  640       3       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)   made not entrant
  10553  642       3       java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (7 bytes)
                              @ 3   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)   callee is too large
  10556  649       3       org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                              @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)   recursive inlining too deep
                                @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
                              @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
  10574  643       3       java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)
                              @ 1   java.util.AbstractQueue::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 31   java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 42   java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 53   java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 67   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 83   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10623  650       3       org.openjdk.jmh.util.Optional::orElse (16 bytes)
  10624  644       3       java.util.AbstractQueue::add (20 bytes)
                              @ 2   java.util.AbstractQueue::offer (10 bytes)   no static binding
                              @ 16   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
<writer thread='139919014151936'/>
  10630  190   !   3       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   made not entrant
  10631  747  s    4       java.io.BufferedOutputStream::flush (12 bytes)
<writer thread='139919013099264'/>
  10637  651   !   3       com.sun.proxy.$Proxy0::iteration (47 bytes)
                              @ 23   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 27   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                 @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 43   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
  10661  647       3       java.util.concurrent.TimeUnit$3::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
  10662  690       3       org.openjdk.jmh.runner.InfraControl::awaitWarmupReady (5 bytes)
               !              @ 1   org.openjdk.jmh.runner.InfraControlL2::awaitWarmupReady (19 bytes)
                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
  10664  692       3       java.util.concurrent.ThreadPoolExecutor$Worker::lock (6 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                                @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire (20 bytes)
                                  @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                                  @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
<writer thread='139919014151936'/>
                              @ 1   java.io.BufferedOutputStream::flushBuffer (29 bytes)   inline (hot)
                                @ 20   java.net.SocketOutputStream::write (8 bytes)   inline (hot)
                                 \-&gt; TypeProfile (10761/10761 counts) = java/net/SocketOutputStream
               !                  @ 4   java.net.SocketOutputStream::socketWrite (159 bytes)   inline (hot)
               !m                   @ 71   java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)   inline (hot)
                                    @ 82   java.net.SocketOutputStream::socketWrite0 (0 bytes)   native method
               !m                   @ 89   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   inline (hot)
               !m                   @ 127   java.net.AbstractPlainSocketImpl::isClosedOrPending (34 bytes)   executed &lt; MinInliningThreshold times
               !m                   @ 152   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   already compiled into a medium method
                              @ 8   java.io.OutputStream::flush (1 bytes)   inline (hot)
                               \-&gt; TypeProfile (10760/10760 counts) = java/net/SocketOutputStream
<writer thread='139919013099264'/>
  10698  645       3       java.util.concurrent.ThreadPoolExecutor$Worker::unlock (7 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease (12 bytes)
                                  @ 2   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                                  @ 7   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
  10706  743       3       java.util.concurrent.FutureTask::done (1 bytes)
  10711  753       3       java.util.concurrent.FutureTask::report (37 bytes)
<writer thread='139919014151936'/>
  10719  532  s    3       java.io.BufferedOutputStream::flush (12 bytes)   made not entrant
  10720  746       4       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
  10725  529       3       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)   made not entrant
<writer thread='139919013099264'/>
                              @ 21  java/util/concurrent/CancellationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 33   java.util.concurrent.ExecutionException::&lt;init&gt; (6 bytes)   not inlineable
<writer thread='139919014151936'/>
  10727  758   !   4       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)
<writer thread='139919013099264'/>
  10732  698       3       java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire (20 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
  10735  653       3       org.openjdk.jmh.infra.IterationParams::getTime (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getTime (5 bytes)
  10736  654       3       org.openjdk.jmh.infra.Control::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10742  655       3       org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10750  701       3       java.util.concurrent.ThreadPoolExecutor::runStateAtLeast (11 bytes)
  10756  656       3       org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10759  707       3       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)
  10759  723       3       org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
  10765  657       3       org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10769  658       3       org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10782  659       3       org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10793  708       3       java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)
<writer thread='139919014151936'/>
                              @ 42   java.io.ObjectOutputStream::reset (49 bytes)   executed &lt; MinInliningThreshold times
               !              @ 57   java.io.ObjectOutputStream::writeObject (38 bytes)   inline (hot)
               !                @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
               !                @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   too big
                              @ 64   java.io.ObjectOutputStream::flush (8 bytes)   inline (hot)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)   inline (hot)
                                  @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                    @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                     @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                     \-&gt; TypeProfile (5281/5281 counts) = java/io/BufferedOutputStream
                                      @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                   @ 8   java.io.BufferedOutputStream::flush (12 bytes)   already compiled into a big method
                                   \-&gt; TypeProfile (11210/11210 counts) = java/io/BufferedOutputStream
<writer thread='139919013099264'/>
                              @ 4   java.lang.Runnable::run (0 bytes)   not inlineable
  10801  660       3       org.openjdk.jmh.runner.InfraControl::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                  @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
<writer thread='139919015204608'/>
                              @ 5   java.io.ObjectOutputStream::writeUTF (9 bytes)   already compiled into a big method
                              @ 10   java.io.ObjectStreamClass::getSerialVersionUID (33 bytes)   inline (hot)
                                @ 29   java.lang.Long::longValue (5 bytes)   inline (hot)
                              @ 13   java.io.ObjectOutputStream::writeLong (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   inline (hot)
                                  @ 22   java.io.Bits::putLong (86 bytes)   inline (hot)
                              @ 88   java.io.ObjectOutputStream::writeByte (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 97   java.io.ObjectOutputStream::writeShort (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                  @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                              @ 122   java.io.ObjectStreamField::getTypeCode (9 bytes)   inline (hot)
                                @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 125   java.io.ObjectOutputStream::writeByte (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 131   java.io.ObjectStreamField::getName (5 bytes)   accessor
                              @ 134   java.io.ObjectOutputStream::writeUTF (9 bytes)   already compiled into a big method
                              @ 139   java.io.ObjectStreamField::isPrimitive (27 bytes)   inline (hot)
                                @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 148   java.io.ObjectStreamField::getTypeString (16 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamField::isPrimitive (27 bytes)   inline (hot)
                                  @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 151   java.io.ObjectOutputStream::writeTypeString (40 bytes)   inline (hot)
                                @ 16   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                  @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                @ 27   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                  @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                    @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                                @ 36   java.io.ObjectOutputStream::writeString (74 bytes)   inline (hot)
                                  @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                    @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                      @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                        @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                  @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   inline (hot)
                                    @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                      @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                                    @ 24   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                      @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                      @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                        @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                      @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139919013099264'/>
  10824  661       3       org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
  10827  709       3       org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)
               !              @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   callee is too large
  10831  662       3       org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
  10839  663       3       org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)
                              @ 1   org.openjdk.jmh.runner.InfraControlL1::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 32   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 44   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 52   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
                              @ 60   org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
<writer thread='139919014151936'/>
  10884  537   !   3       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   made not entrant
  10885  767       4       java.util.concurrent.TimeUnit::x (27 bytes)
  10887  538       3       java.util.concurrent.TimeUnit::x (27 bytes)   made not entrant
  10887  744       4       java.util.ArrayList::add (29 bytes)
                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                  @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                    @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                      @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
<writer thread='139919013099264'/>
  10919  768       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::awaitNanos (156 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 15   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)   callee is too large
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::fullyRelease (54 bytes)   callee is too large
                              @ 29   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 44   java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer::findNodeFromTail (26 bytes)
                              @ 61   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferAfterCancelledWait (34 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   callee is too large
                                @ 20   java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)   callee is too large
                                @ 26   java.lang.Thread::yield (0 bytes)   native method
                              @ 78   java.util.concurrent.locks.LockSupport::parkNanos (29 bytes)
                                @ 6   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 12   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                  @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                @ 20   sun.misc.Unsafe::park (0 bytes)   native method
                                @ 25   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                  @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                              @ 83   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::checkInterruptWhileWaiting (27 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 11   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferAfterCancelledWait (34 bytes)   callee is too large
                              @ 97   java.lang.System::nanoTime (0 bytes)   intrinsic
<writer thread='139919014151936'/>
  10934  262       3       java.util.ArrayList::add (29 bytes)   made not entrant
  10935  770 %     4       java.util.Arrays::fill @ 10 (28 bytes)
<writer thread='139919013099264'/>
               !              @ 112   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                              @ 135   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::unlinkCancelledWaiters (67 bytes)   callee is too large
                              @ 146   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::reportInterruptAfterWait (22 bytes)
                                @ 9   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 151   java.lang.System::nanoTime (0 bytes)   intrinsic
<writer thread='139919014151936'/>
  10996  771       4       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
  10998  298       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   made not entrant
  10998  773       4       java.lang.Integer::valueOf (32 bytes)
                              @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
  11015  551       3       java.lang.Integer::valueOf (32 bytes)   made not entrant
  11015  774       4       org.openjdk.jmh.infra.IterationParams::getCount (5 bytes)
<writer thread='139919013099264'/>
  11023  664       3       org.openjdk.jmh.runner.InfraControlL1::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11025  665       3       org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11026  691   !   3       org.openjdk.jmh.runner.InfraControlL2::awaitWarmupReady (19 bytes)
                              @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
<writer thread='139919014151936'/>
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getCount (5 bytes)   accessor
  11031  565       3       org.openjdk.jmh.infra.IterationParams::getCount (5 bytes)   made not entrant
  11031  775   !   4       java.util.concurrent.FutureTask::run (126 bytes)
<writer thread='139919013099264'/>
  11046  666       3       org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
  11047  667       3       org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::&lt;init&gt; (15 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
  11048  668       3       org.openjdk.jmh.infra.BenchmarkParams::getTimeout (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeout (5 bytes)
  11049  669       3       org.openjdk.jmh.runner.options.TimeValue::convertTo (13 bytes)
                              @ 9   java.util.concurrent.TimeUnit::convert (8 bytes)   no static binding
  11050  673       3       java.util.concurrent.TimeUnit$5::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
  11064  674   !   3       org.openjdk.jmh.runner.BenchmarkHandler::startProfilers (58 bytes)
                              @ 4   java.util.List::iterator (0 bytes)   no static binding
                              @ 11   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 20   java.util.Iterator::next (0 bytes)   no static binding
                              @ 34   org.openjdk.jmh.profile.InternalProfiler::beforeIteration (0 bytes)   not inlineable
                              @ 50   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
  11070  675       3       java.util.concurrent.ExecutorCompletionService::&lt;init&gt; (52 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (7 bytes)
                                @ 3   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)   callee is too large
  11085  676       3       java.util.concurrent.ExecutorCompletionService::submit (38 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 14   java.util.concurrent.ExecutorCompletionService::newTaskFor (25 bytes)
                                @ 12   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 21   java.util.concurrent.AbstractExecutorService::newTaskFor (9 bytes)
                                  @ 5   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                    @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.util.concurrent.ExecutorCompletionService$QueueingFuture::&lt;init&gt; (17 bytes)
                                @ 8   java.util.concurrent.FutureTask::&lt;init&gt; (19 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 7   java.util.concurrent.Executors::callable (22 bytes)
                                    @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                    @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 31   java.util.concurrent.Executor::execute (0 bytes)   not inlineable
  11107  677       3       java.util.concurrent.ExecutorCompletionService::newTaskFor (25 bytes)
                              @ 12   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 21   java.util.concurrent.AbstractExecutorService::newTaskFor (9 bytes)
                                @ 5   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
  11134  750       3       java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)
                              @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)
                              @ 11   java.util.concurrent.BlockingQueue::add (0 bytes)   not inlineable
  11136  751       3       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)
  11136  752   !   3       java.util.concurrent.ThreadPoolExecutor::getTask (179 bytes)
                              @ 6   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 11   java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
                              @ 29   java.util.concurrent.BlockingQueue::isEmpty (10 bytes)   not inlineable
                              @ 38   java.util.concurrent.ThreadPoolExecutor::decrementWorkerCount (15 bytes)
                                @ 5   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                                @ 8   java.util.concurrent.ThreadPoolExecutor::compareAndDecrementWorkerCount (12 bytes)
                                  @ 8   java.util.concurrent.atomic.AtomicInteger::compareAndSet (13 bytes)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 44   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
                              @ 100   java.util.concurrent.BlockingQueue::isEmpty (10 bytes)   not inlineable
                              @ 134   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
                              @ 149   java.util.concurrent.BlockingQueue::take (0 bytes)   not inlineable
                              @ 110   java.util.concurrent.ThreadPoolExecutor::compareAndDecrementWorkerCount (12 bytes)
                                @ 8   java.util.concurrent.atomic.AtomicInteger::compareAndSet (13 bytes)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
  11189  779       1       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)
  11189  707       3       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)   made not entrant
  11189  780       1       java.util.concurrent.FutureTask::done (1 bytes)
  11189  743       3       java.util.concurrent.FutureTask::done (1 bytes)   made not entrant
  11189  781       1       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)
  11190  751       3       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)   made not entrant
  11190  678       3       java.util.concurrent.AbstractExecutorService::newTaskFor (9 bytes)
                              @ 5   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
  11194  710   !   3       org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)
                              @ 1   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)
<writer thread='139919015204608'/>
  11196  617       3       java.io.ObjectStreamClass::writeNonProxy (161 bytes)   made not entrant
  11198  778       4       java.util.ArrayList$Itr::next (66 bytes)
<writer thread='139919013099264'/>
                              @ 14   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)
                              @ 50   java.lang.reflect.Method::invoke (62 bytes)   callee is too large
                              @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
                              @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   callee is too large
                              @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   callee is too large
                              @ 127   java.lang.Exception::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139919015204608'/>
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                              @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
  11214  540       3       java.util.ArrayList$Itr::next (66 bytes)   made not entrant
  11222  776       4       java.util.concurrent.CountDownLatch::countDown (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inline (hot)
                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                  @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   inline (hot)
  11237  568       3       java.util.concurrent.CountDownLatch::countDown (10 bytes)   made not entrant
  11242  777       4       java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                              @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
<writer thread='139919013099264'/>
  11248  697       3       org.openjdk.jmh.infra.BenchmarkParams::getMode (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getMode (5 bytes)
  11251  681       3       java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
  11252  682       3       java.util.concurrent.ExecutorCompletionService$QueueingFuture::&lt;init&gt; (17 bytes)
                              @ 8   java.util.concurrent.FutureTask::&lt;init&gt; (19 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 7   java.util.concurrent.Executors::callable (22 bytes)
                                  @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139919015204608'/>
  11255  570       3       java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   made not entrant
  11257  782       4       java.util.Arrays::fill (28 bytes)
                              @ 4   java.util.Arrays::rangeCheck (74 bytes)   inline (hot)
<writer thread='139919013099264'/>
  11283  702       3       org.openjdk.jmh.runner.InfraControl::announceDone (14 bytes)
  11284  686       3       java.util.concurrent.FutureTask::&lt;init&gt; (19 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 7   java.util.concurrent.Executors::callable (22 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11287  687       3       java.util.concurrent.Executors::callable (22 bytes)
<writer thread='139919015204608'/>
  11290  638       3       java.util.Arrays::fill (28 bytes)   made not entrant
  11299  783   !   4       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)
<writer thread='139919013099264'/>
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11303  706       3       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)
  11305  688       3       java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11310  689       3       java.util.concurrent.ThreadPoolExecutor::execute (132 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
<writer thread='139919015204608'/>
                              @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::predecessor (19 bytes)   inline (hot)
                              @ 22   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                               \-&gt; TypeProfile (7334/7334 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                  @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                  @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                  @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::setHead (16 bytes)   inline (hot)
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::shouldParkAfterFailedAcquire (50 bytes)   too big
                              @ 67   java.util.concurrent.locks.AbstractQueuedSynchronizer::parkAndCheckInterrupt (8 bytes)   executed &lt; MinInliningThreshold times
                              @ 87   java.util.concurrent.locks.AbstractQueuedSynchronizer::cancelAcquire (154 bytes)   too big
<writer thread='139919013099264'/>
                              @ 21   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
               !              @ 34   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
                              @ 45   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 50   java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
                              @ 61   java.util.concurrent.BlockingQueue::offer (0 bytes)   not inlineable
                              @ 73   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 78   java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
                              @ 86   java.util.concurrent.ThreadPoolExecutor::remove (17 bytes)
                                @ 5   java.util.concurrent.BlockingQueue::remove (0 bytes)   not inlineable
               !                @ 12   java.util.concurrent.ThreadPoolExecutor::tryTerminate (161 bytes)   callee is too large
                              @ 94   java.util.concurrent.ThreadPoolExecutor::reject (12 bytes)
                                @ 6   java.util.concurrent.ThreadPoolExecutor$AbortPolicy::rejectedExecution (42 bytes)   callee is too large
                              @ 101   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
               !              @ 110   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
               !              @ 120   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
                              @ 128   java.util.concurrent.ThreadPoolExecutor::reject (12 bytes)
                                @ 6   java.util.concurrent.ThreadPoolExecutor$AbortPolicy::rejectedExecution (42 bytes)   callee is too large
  11352  711       3       org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)
<writer thread='139919015204608'/>
  11370  606   !   3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   made not entrant
  11370  787       4       java.util.concurrent.TimeUnit$1::convert (6 bytes)
                              @ 2   java.util.concurrent.TimeUnit$5::toNanos (11 bytes)   inline (hot)
                              @ 2   java.util.concurrent.TimeUnit$4::toNanos (11 bytes)   inline (hot)
                               \-&gt; TypeProfile (4863/9727 counts) = java/util/concurrent/TimeUnit$4
                               \-&gt; TypeProfile (4864/9727 counts) = java/util/concurrent/TimeUnit$5
                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
<writer thread='139919013099264'/>
                              @ 43   org.openjdk.jmh.infra.Blackhole::&lt;init&gt; (24 bytes)   disallowed by CompilerOracle
                              @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)
                              @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontroldontinlineactualtest0_0 (39 bytes)   callee is too large
               !              @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)
<writer thread='139919015204608'/>
  11381  578       3       java.util.concurrent.TimeUnit$1::convert (6 bytes)   made not entrant
  11382  786       4       java.util.concurrent.CountDownLatch::await (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inline (hot)
                                @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
<writer thread='139919013099264'/>
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                                @ 23   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
                              @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)
                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
                              @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                              @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)
<writer thread='139919015204608'/>
  11407  575       3       java.util.concurrent.CountDownLatch::await (9 bytes)   made not entrant
  11408  788       4       org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                              @ 6   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   inline (hot)
                               \-&gt; TypeProfile (9838/9838 counts) = java/util/concurrent/ConcurrentHashMap
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
<writer thread='139919013099264'/>
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)
                              @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
                              @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                  @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)
                              @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)
<writer thread='139919015204608'/>
  11427  580       3       org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)   made not entrant
<writer thread='139919013099264'/>
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
                              @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   callee is too large
                              @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)
                                @ 5   java.util.Collection::add (0 bytes)   no static binding
                              @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                              @ 212   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
<writer thread='139919015204608'/>
  11430  790       4       java.lang.StringBuilder::toString (17 bytes)
                              @ 13   java.lang.String::&lt;init&gt; (82 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
  11474  178       3       java.lang.StringBuilder::toString (17 bytes)   made not entrant
  11491  784       4       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)
                              @ 31   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 36   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (15 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
  11506  609       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)   made not entrant
  11516  794       4       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)
<writer thread='139919013099264'/>
  11519  714       3       org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontroldontinlineactualtest0_0 (39 bytes)
                              @ 11   org.openjdk.jmh.runner.FailureAssistException::&lt;init&gt; (5 bytes)   not inlineable
                              @ 28   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_jmhType::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_jmhType_B3::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_jmhType_B2::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_jmhType_B1::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.it.ccontrol.CompilerControlDontInlineActualTest::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11526  715   !   3       org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)
                              @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                  @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                  @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
                              @ 23   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
  11564  754       3       org.openjdk.jmh.results.IterationResult::addResult (137 bytes)
                              @ 1   org.openjdk.jmh.results.Result::getRole (5 bytes)
                              @ 4   org.openjdk.jmh.results.ResultRole::isPrimary (13 bytes)
                              @ 22   java.util.Collections::singleton (9 bytes)
                                @ 5   java.util.Collections$SingletonSet::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 35   java.util.Collection::size (0 bytes)   no static binding
                              @ 49   java.util.ArrayList::&lt;init&gt; (61 bytes)   callee is too large
                              @ 58   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 66   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 85   java.util.Collection::add (0 bytes)   no static binding
                              @ 92   org.openjdk.jmh.results.Result::getRole (5 bytes)
                              @ 95   org.openjdk.jmh.results.ResultRole::isSecondary (20 bytes)
                              @ 116   org.openjdk.jmh.util.TreeMultimap::&lt;init&gt; (12 bytes)
                                @ 5   java.util.TreeMap::&lt;init&gt; (20 bytes)
                                  @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   org.openjdk.jmh.util.DelegatingMultimap::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 127   org.openjdk.jmh.results.Result::getLabel (5 bytes)
                              @ 131   org.openjdk.jmh.util.DelegatingMultimap::put (44 bytes)   callee is too large
<writer thread='139919015204608'/>
                              @ 4   java.util.HashMap::get (23 bytes)   inline (hot)
                                @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                  @ 9   java.lang.reflect.Method::hashCode (19 bytes)   inline (hot)
                                    @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                                    @ 4   java.lang.Class::getName (21 bytes)   inline (hot)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 7   java.lang.String::hashCode (55 bytes)   inline (hot)
                                    @ 11   java.lang.reflect.Method::getName (5 bytes)   accessor
                                    @ 14   java.lang.String::hashCode (55 bytes)   inline (hot)
                                @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                  @ 59   java.lang.reflect.Method::equals (69 bytes)   never executed
                                  @ 126   java.lang.reflect.Method::equals (69 bytes)   never executed
<writer thread='139919013099264'/>
  11611  763       2       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)
  11611  764   !   2       org.openjdk.jmh.runner.ForkedRunner$1::accept (25 bytes)
                              @ 4   org.openjdk.jmh.runner.ForkedRunner::access$000 (5 bytes)
                              @ 8   org.openjdk.jmh.runner.link.BinaryLinkClient::pushResults (13 bytes)
                                @ 6   org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !m               @ 9   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 20   org.openjdk.jmh.runner.ForkedRunner$SavedIOException::&lt;init&gt; (11 bytes)   not inlineable
  11614  716       2       org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11614  717       2       org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
  11615  755       2       org.openjdk.jmh.results.ResultRole::isPrimary (13 bytes)
  11626  798       1       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)
  11627  706       3       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)   made not entrant
  11627  765       2       org.openjdk.jmh.runner.link.BinaryLinkClient::pushResults (13 bytes)
                              @ 6   org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !m             @ 9   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
  11628  766       2       org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11629  756       2       java.util.Collections::singleton (9 bytes)
                              @ 5   java.util.Collections$SingletonSet::&lt;init&gt; (10 bytes)
                                @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11631  718       2       org.openjdk.jmh.it.ccontrol.CompilerControlDontInlineActualTest::compilerControlSpecimen (5 bytes)
                              @ 1   org.openjdk.jmh.it.ccontrol.CompilerControlDontInlineActualTest::trampoline (5 bytes)
                                @ 1   org.openjdk.jmh.it.ccontrol.CompilerControlDontInlineActualTest::strawMethod (1 bytes)   disallowed by CompilerOracle
  11660  759       2       java.util.Collections$SingletonSet::&lt;init&gt; (10 bytes)
                              @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11661  721       2       org.openjdk.jmh.it.ccontrol.CompilerControlDontInlineActualTest::strawMethod (1 bytes)
  11665  722       2       org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)
                              @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                  @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                  @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
<writer thread='139919015204608'/>
  11684  587       3       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   made not entrant
<writer thread='139919013099264'/>
  11685  742       2       org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)
                              @ 3   java.lang.String::equals (81 bytes)   callee is too large
                              @ 15   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
  11686  724       2       org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)
<writer thread='139919015204608'/>
  11686  793       4       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
<writer thread='139919013099264'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11688  725       2       org.openjdk.jmh.results.RawResults::getTime (26 bytes)
  11689  726       2       org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
  11690  728       2       org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)
                              @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 18   org.openjdk.jmh.results.Result::of (9 bytes)
                                @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)
                                  @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   callee is too large
                              @ 33   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 38   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 41   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)
                                @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   callee is too large
  11718  730       2       org.openjdk.jmh.results.Result::of (9 bytes)
                              @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)
                                @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11720  735       2       org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)
                              @ 4   java.lang.Enum::ordinal (5 bytes)
  11721  737       2       org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                                @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
                              @ 29   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                                @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
  11724  731       2       org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)
                              @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11725  734       2       org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11742  741       2       org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)
                              @ 5   java.util.Collection::add (0 bytes)   no static binding
  11743  760       2       org.openjdk.jmh.results.ResultRole::isSecondary (20 bytes)
  11744  761   !   2       org.openjdk.jmh.runner.BenchmarkHandler::stopProfilers (66 bytes)
                              @ 4   java.util.List::iterator (0 bytes)   no static binding
                              @ 13   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 23   java.util.Iterator::next (0 bytes)   no static binding
                              @ 39   org.openjdk.jmh.profile.InternalProfiler::afterIteration (0 bytes)   not inlineable
                              @ 44   org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
                                @ 1   java.util.Collection::iterator (0 bytes)   no static binding
                                @ 8   java.util.Iterator::hasNext (0 bytes)   no static binding
                                @ 17   java.util.Iterator::next (0 bytes)   no static binding
                                @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
                              @ 58   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
  11753  762   !   2       com.sun.proxy.$Proxy0::iterationResult (52 bytes)
                              @ 23   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 32   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                 @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 48   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
  11770  799       3       java.util.concurrent.TimeUnit$4::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
  11793  789       3       java.io.ObjectStreamClass::getSuperDesc (9 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
  11797  801       3       java.util.Arrays::fill (21 bytes)
  11809  679       1       java.lang.Enum::name (5 bytes)
  11818  800       3       java.io.ObjectOutputStream::writeEnum (63 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 10   java.io.ObjectStreamClass::getSuperDesc (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 18   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 33   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 55   java.lang.Enum::name (5 bytes)
                              @ 59   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
  11844  803   !   3       java.io.ObjectStreamClass::invokeWriteObject (79 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 24   java.lang.reflect.Method::invoke (62 bytes)   callee is too large
                              @ 33   java.lang.reflect.InvocationTargetException::getTargetException (5 bytes)   not inlineable
        
<writer thread='139919015204608'/>
                              @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   inline (hot)
                                @ 4   java.util.HashMap::get (23 bytes)   inline (hot)
                                  @ 2   java.util.HashMap::hash (20 bytes)   inline (hot)
                                    @ 9   java.lang.reflect.Method::hashCode (19 bytes)   inline (hot)
                                      @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)   accessor
                                      @ 4   java.lang.Class::getName (21 bytes)   inline (hot)
                                        @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                      @ 7   java.lang.String::hashCode (55 bytes)   inline (hot)
                                      @ 11   java.lang.reflect.Method::getName (5 bytes)   accessor
                                      @ 14   java.lang.String::hashCode (55 bytes)   inline (hot)
                                  @ 6   java.util.HashMap::getNode (148 bytes)   inline (hot)
                                    @ 59   java.lang.reflect.Method::equals (69 bytes)   never executed
                                    @ 126   java.lang.reflect.Method::equals (69 bytes)   never executed
                              @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)   inline (hot)
               !m               @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   already compiled into a big method
<writer thread='139919013099264'/>
                      @ 54   java.io.ObjectStreamClass::throwMiscException (43 bytes)   callee is too large
                              @ 66  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 74  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
  11881  804       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)
                              @ 33   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 53   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 66   java.io.OutputStream::write (79 bytes)   no static binding
  11906  694       1       java.util.TreeMap::access$100 (5 bytes)
  11909  772       1       java.io.ObjectOutputStream$HandleTable::size (5 bytes)
<writer thread='139919015204608'/>
  11949  586       3       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)   made not entrant
  11968  791       4       java.util.concurrent.FutureTask::set (36 bytes)
<writer thread='139919013099264'/>
  11991  805       3       java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                              @ 5   java.util.Arrays::fill (21 bytes)
                              @ 18   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
  12009  806       3       java.util.TreeMap::writeObject (65 bytes)
                              @ 1   java.io.ObjectOutputStream::defaultWriteObject (54 bytes)   callee is too large
                              @ 9   java.io.ObjectOutputStream::writeInt (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 13   java.util.TreeMap::entrySet (27 bytes)
                                @ 19   java.util.TreeMap$EntrySet::&lt;init&gt; (10 bytes)
                                  @ 6   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 16   java.util.Set::iterator (0 bytes)   no static binding
                              @ 23   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 32   java.util.Iterator::next (0 bytes)   no static binding
                              @ 43   java.util.Map$Entry::getKey (0 bytes)   not inlineable
               !              @ 48   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
                              @ 53   java.util.Map$Entry::getValue (0 bytes)   not inlineable
               !              @ 58   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
  12014  807       3       java.util.TreeMap$EntrySet::iterator (19 bytes)
                              @ 12   java.util.TreeMap::getFirstEntry (26 bytes)
                              @ 15   java.util.TreeMap$EntryIterator::&lt;init&gt; (12 bytes)
                                @ 8   java.util.TreeMap$PrivateEntryIterator::&lt;init&gt; (28 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 11   java.util.TreeMap::access$100 (5 bytes)
  12019  808       3       java.util.TreeMap$PrivateEntryIterator::hasNext (13 bytes)
  12100  810   !   3       sun.reflect.GeneratedMethodAccessor2::invoke (66 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 53   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 40   java.util.TreeMap::writeObject (65 bytes)   callee is too large
                              @ 62   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
<writer thread='139919015204608'/>
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   (intrinsic)
                              @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   inline (hot)
                                @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                                @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                                 \-&gt; TypeProfile (6118/12236 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                                 \-&gt; TypeProfile (6118/12236 counts) = java/util/concurrent/FutureTask
                                  @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                  @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                   \-&gt; TypeProfile (5862/5862 counts) = java/util/concurrent/LinkedBlockingQueue
               !                    @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   inline (hot)
                                      @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                      @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                      @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                        @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                          @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                            @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                          @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                                @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                            @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                            @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   already compiled into a medium method
                                            @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                      @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                      @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                                      @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                        @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                                      @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                       \-&gt; TypeProfile (12274/12274 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                        @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                         \-&gt; TypeProfile (18482/18482 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                          @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                          @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                          @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                              @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                            @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                      @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                        @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                          @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                            @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                            @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                          @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                            @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                              @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                              @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
               !                      @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                        @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                            @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                  @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inlining too deep
                                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   already compiled into a medium method
                                              @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                        @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                         \-&gt; TypeProfile (12629/12629 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                          @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                           \-&gt; TypeProfile (18482/18482 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                            @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                            @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                                @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                                @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                        @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                          @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                            @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                              @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                                        @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                      @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
<writer thread='139919013099264'/>
  12233  811       1       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)
  12234  763       2       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)   made not entrant
  12243  813       3       java.io.SerialCallbackContext::getObj (9 bytes)
                              @ 1   java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                                @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
  12245  814       3       java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                              @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
  12268  816       1       org.openjdk.jmh.it.ccontrol.CompilerControlDontInlineActualTest::strawMethod (1 bytes)
  12269  721       2       org.openjdk.jmh.it.ccontrol.CompilerControlDontInlineActualTest::strawMethod (1 bytes)   made not entrant
  12283  818       3       java.io.ObjectOutputStream::defaultWriteObject (54 bytes)
                              @ 15  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
                              @ 20   java.io.SerialCallbackContext::getObj (9 bytes)
                                @ 1   java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                                  @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
                              @ 25   java.io.SerialCallbackContext::getDesc (5 bytes)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
               !              @ 41   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
  12289  819       3       java.io.ObjectOutputStream::writeInt (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
<writer thread='139919015204608'/>
  12412  581       3       java.util.concurrent.FutureTask::set (36 bytes)   made not entrant
  12421  809   !   4       org.openjdk.jmh.runner.BenchmarkHandler::runIteration (628 bytes)
<writer thread='139919014151936'/>
                              @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 42   java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)   inline (hot)
                              @ 42   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)   inline (hot)
                               \-&gt; TypeProfile (4184/8368 counts) = org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask
                               \-&gt; TypeProfile (4184/8368 counts) = java/util/concurrent/Executors$RunnableAdapter
               !                @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   inline (hot)
                                  @ 1   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)   accessor
                                  @ 14   java.lang.ThreadLocal::get (38 bytes)   inline (hot)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                                     \-&gt; TypeProfile (4440/4780 counts) = org/openjdk/jmh/runner/BenchmarkHandler$1
                                    @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                      @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                        @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                        @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                                    @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                                  @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)   accessor
                                  @ 50   java.lang.reflect.Method::invoke (62 bytes)   inline (hot)
                                    @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)   inline (hot)
                                      @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   (intrinsic)
                                      @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                                    @ 56   sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)   inline (hot)
                                     \-&gt; TypeProfile (4337/4337 counts) = sun/reflect/DelegatingMethodAccessorImpl
               !                      @ 6   sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)   inline (hot)
                                       \-&gt; TypeProfile (3986/4337 counts) = sun/reflect/GeneratedMethodAccessor1
                                        @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   inline (hot)
                                          @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)   accessor
                                          @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontroldontinlineactualtest0_0 (39 bytes)   inline (hot)
               !                          @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   inline (hot)
                                            @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inline (hot)
                                                @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                          @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                          @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)   accessor
                                          @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                                          @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   inline (hot)
                                            @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inline (hot)
                                                @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                          @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)   accessor
                                          @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)   accessor
                                          @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)   inline (hot)
                                            @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)   inline (hot)
                                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inline (hot)
                                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                          @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)   inline (hot)
                                          @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)   accessor
                                          @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   inline (hot)
                                            @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.TimeUnit$5::toNanos (11 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.TimeUnit$4::toNanos (11 bytes)   inline (hot)
                                               \-&gt; TypeProfile (4310/8620 counts) = java/util/concurrent/TimeUnit$4
                                               \-&gt; TypeProfile (4310/8620 counts) = java/util/concurrent/TimeUnit$5
                                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
                                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
                                            @ 18   org.openjdk.jmh.results.Result::of (9 bytes)   inline (hot)
                                              @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                            @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)   inline (hot)
                                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   inline (hot)
                                              @ 4   java.lang.Enum::ordinal (5 bytes)   accessor
                                            @ 33   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inlining too deep
                                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inlining too deep
                                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 38   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inlining too deep
                                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inlining too deep
                                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 41   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                              @ 13   java.lang.String::&lt;init&gt; (82 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)   inline (hot)
                                              @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 14   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)   inline (hot)
                                                  @ 6   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (8690/8690 counts) = java/util/concurrent/ConcurrentHashMap
                                                @ 29   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)   inline (hot)
                                                  @ 6   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (8690/8690 counts) = java/util/concurrent/ConcurrentHashMap
                                          @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)   inline (hot)
                                            @ 5   java.util.ArrayList::add (29 bytes)   inline (hot)
                                             \-&gt; TypeProfile (4095/4095 counts) = java/util/ArrayList
                                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                                  @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                                  @ 22   java.util.ArrayList::grow (45 bytes)   inlining too deep
                                          @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                                  @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)   never executed
                                  @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)   never executed
                                  @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)   accessor
                                  @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   too big
                                  @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   too big
               !                @ 4   java.util.concurrent.FutureTask::run (126 bytes)   inline (hot)
                                 \-&gt; TypeProfile (4146/4146 counts) = java/util/concurrent/FutureTask
                                  @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                  @ 42   java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)   inline (hot)
                                  @ 42   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4184/8368 counts) = org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask
                                   \-&gt; TypeProfile (4184/8368 counts) = java/util/concurrent/Executors$RunnableAdapter
               !                    @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   inline (hot)
                                      @ 1   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                      @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)   accessor
                                      @ 14   java.lang.ThreadLocal::get (38 bytes)   inline (hot)
                                        @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                                         \-&gt; TypeProfile (4440/4780 counts) = org/openjdk/jmh/runner/BenchmarkHandler$1
                                        @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                          @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                            @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                            @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                            @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                                        @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                                      @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)   accessor
                                      @ 50   java.lang.reflect.Method::invoke (62 bytes)   inline (hot)
                                        @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)   inline (hot)
                                          @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   (intrinsic)
                                          @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                                        @ 56   sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)   inline (hot)
                                         \-&gt; TypeProfile (4337/4337 counts) = sun/reflect/DelegatingMethodAccessorImpl
               !                          @ 6   sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)   inline (hot)
                                           \-&gt; TypeProfile (3986/4337 counts) = sun/reflect/GeneratedMethodAccessor1
                                            @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   inline (hot)
                                              @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)   accessor
                                              @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontroldontinlineactualtest0_0 (39 bytes)   inline (hot)
               !                              @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inlining too deep
                                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inlining too deep
                                              @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                              @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)   accessor
                                              @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlDontInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                                              @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inlining too deep
                                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inlining too deep
                                              @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)   accessor
                                              @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)   accessor
                                              @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)   inline (hot)
                                                  @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inlining too deep
                                              @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)   inline (hot)
                                              @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)   accessor
                                              @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   inline (hot)
                                                @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.TimeUnit$5::toNanos (11 bytes)   inlining too deep
                                                  @ 2   java.util.concurrent.TimeUnit$4::toNanos (11 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (4310/8620 counts) = java/util/concurrent/TimeUnit$4
                                                   \-&gt; TypeProfile (4310/8620 counts) = java/util/concurrent/TimeUnit$5
                                                @ 18   org.openjdk.jmh.results.Result::of (9 bytes)   inline (hot)
                                                  @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)   inlining too deep
                                                @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)   inline (hot)
                                                  @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)   inlining too deep
                                                @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   inline (hot)
                                                  @ 4   java.lang.Enum::ordinal (5 bytes)   accessor
                                                @ 33   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inlining too deep
                                                @ 38   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inlining too deep
                                                @ 41   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                                  @ 13   java.lang.String::&lt;init&gt; (82 bytes)   inlining too deep
                                                @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)   inline (hot)
                                                  @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   inlining too deep
                                              @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)   inline (hot)
                                                @ 5   java.util.ArrayList::add (29 bytes)   inline (hot)
                                                 \-&gt; TypeProfile (4095/4095 counts) = java/util/ArrayList
                                                  @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inlining too deep
                                              @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                                      @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)   never executed
                                      @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)   never executed
                                      @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)   accessor
                                      @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   too big
                                      @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   too big
               !                    @ 4   java.util.concurrent.FutureTask::run (126 bytes)   recursive inlining is too deep
                                     \-&gt; TypeProfile (4146/4146 counts) = java/util/concurrent/FutureTask
                                  @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   too big
                                  @ 71   java.util.concurrent.FutureTask::set (36 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   (intrinsic)
                                    @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   inline (hot)
                                      @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                                      @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                                       \-&gt; TypeProfile (4863/9726 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                                       \-&gt; TypeProfile (4863/9726 counts) = java/util/concurrent/FutureTask
                                        @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                        @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                         \-&gt; TypeProfile (4607/4607 counts) = java/util/concurrent/LinkedBlockingQueue
               !                          @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   inline (hot)
                                            @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                            @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                              @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                                @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inlining too deep
                                                  @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                                  @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   already compiled into a medium method
                                                  @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                            @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                            @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                                            @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                                            @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                             \-&gt; TypeProfile (9726/9726 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                               \-&gt; TypeProfile (15810/15810 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                                @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                                  @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inlining too deep
                                                  @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                            @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inlining too deep
                                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                                  @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                                  @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inlining too deep
               !                            @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                              @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                                  @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                  @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inlining too deep
                                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                               \-&gt; TypeProfile (9952/9952 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                                 \-&gt; TypeProfile (15810/15810 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                                  @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inlining too deep
                                              @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inlining too deep
                                                  @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inlining too deep
                                              @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                            @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                  @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)   never executed
                              @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   too big
                              @ 71   java.util.concurrent.FutureTask::set (36 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   (intrinsic)
                                @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   inline (hot)
                                  @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                                  @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4863/9726 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                                   \-&gt; TypeProfile (4863/9726 counts) = java/util/concurrent/FutureTask
                                    @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                    @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                     \-&gt; TypeProfile (4607/4607 counts) = java/util/concurrent/LinkedBlockingQueue
               !                      @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   inline (hot)
                                        @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                        @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                          @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                        @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                            @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                  @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inlining too deep
                                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   already compiled into a medium method
                                              @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                        @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                        @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                                        @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                          @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                                        @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                         \-&gt; TypeProfile (9726/9726 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                          @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                           \-&gt; TypeProfile (15810/15810 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                            @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                            @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                                @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                                @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                        @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                          @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                            @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                              @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
               !                        @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                          @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inlining too deep
                                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   already compiled into a medium method
                                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                          @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                           \-&gt; TypeProfile (9952/9952 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                            @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                             \-&gt; TypeProfile (15810/15810 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                              @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inlining too deep
                                                  @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   inlining too deep
                                                  @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inlining too deep
                                                @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                            @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                                          @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                        @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                              @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)   never executed
<writer thread='139919013099264'/>
  12682  825       2       java.io.ObjectOutputStream::clear (15 bytes)
                              @ 4   java.io.ObjectOutputStream$ReplaceTable::clear (24 bytes)
                                @ 9   java.io.ObjectOutputStream$HandleTable::size (5 bytes)
                                @ 13   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
                                @ 20   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                  @ 5   java.util.Arrays::fill (21 bytes)
                                  @ 18   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
                              @ 11   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                @ 5   java.util.Arrays::fill (21 bytes)
                                @ 18   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
  12687  826       2       java.io.ObjectOutputStream$ReplaceTable::clear (24 bytes)
                              @ 9   java.io.ObjectOutputStream$HandleTable::size (5 bytes)
                              @ 13   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
                              @ 20   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                @ 5   java.util.Arrays::fill (21 bytes)
                                @ 18   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
  12839  827   !   2       sun.reflect.GeneratedMethodAccessor3::invoke (66 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 53   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 40   java.util.ArrayList::writeObject (60 bytes)   callee is too large
                              @ 62   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
  12908  828       2       java.io.ObjectOutputStream::reset (49 bytes)
                              @ 13   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 32   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 36   java.io.ObjectOutputStream::clear (15 bytes)
                                @ 4   java.io.ObjectOutputStream$ReplaceTable::clear (24 bytes)
                                  @ 9   java.io.ObjectOutputStream$HandleTable::size (5 bytes)
                                  @ 13   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
                                  @ 20   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                    @ 5   java.util.Arrays::fill (21 bytes)
                                    @ 18   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
                                @ 11   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                  @ 5   java.util.Arrays::fill (21 bytes)
                                  @ 18   java.util.Arrays::fill (28 bytes)   inlining prohibited by policy
                              @ 44   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
  12920  829       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)
                              @ 43   java.lang.Math::min (11 bytes)
                              @ 68   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 97   java.io.DataOutputStream::writeInt (65 bytes)   callee is too large
<writer thread='139919521801984'/>
  13039  525   !   4       java.io.ObjectStreamClass::lookup (335 bytes)   made not entrant
<writer thread='139919013099264'/>
  13040  830       2       java.lang.Long::valueOf (40 bytes)
                              @ 36   java.lang.Long::&lt;init&gt; (10 bytes)
<writer thread='139919521801984'/>
  13041  831     n 0       java.lang.Class::isAssignableFrom (native)   
<writer thread='139919013099264'/>
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  13043  832       2       sun.reflect.ClassFileAssembler::emitConstantPoolClass (23 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
  13046  833       2       sun.reflect.ClassFileAssembler::emitConstantPoolNameAndType (28 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 13   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
<writer thread='139919521801984'/>
  13085  493   !   4       java.io.ObjectOutputStream::writeObject0 (619 bytes)   made not entrant
  13089  740       4       java.io.ObjectStreamClass::writeNonProxy (161 bytes)   made not entrant
  13090  548   !   4       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   made not entrant
<writer thread='139919013099264'/>
  13090  836   !   2       java.io.ObjectStreamClass::lookup (335 bytes)
                              @ 7   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 15   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
                              @ 21   java.io.ObjectStreamClass::processQueue (21 bytes)
               !m               @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                                @ 11   java.util.concurrent.ConcurrentHashMap::remove (8 bytes)
               !m                 @ 4   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 29   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
                              @ 32   java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)
                                @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   java.lang.System::identityHashCode (0 bytes)   native method
                              @ 40   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   callee is too large
                              @ 57   java.lang.ref.Reference::get (5 bytes)   no static binding
                              @ 75   java.io.ObjectStreamClass$EntryFuture::&lt;init&gt; (5 bytes)
                                @ 1   java.io.ObjectStreamClass$EntryFuture::&lt;init&gt; (19 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 5   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 86   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 100   java.util.concurrent.ConcurrentHashMap::remove (32 bytes)
               !m               @ 20   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 112   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 126   java.lang.ref.Reference::get (5 bytes)   no static binding
                              @ 180   java.io.ObjectStreamClass$EntryFuture::getOwner (5 bytes)
                              @ 183   java.lang.Thread::currentThread (0 bytes)   intrinsic
              s!              @ 197   java.io.ObjectStreamClass$EntryFuture::get (46 bytes)   callee is too large
               !              @ 212   java.io.ObjectStreamClass::&lt;init&gt; (260 bytes)   callee is too large
              s               @ 230   java.io.ObjectStreamClass$EntryFuture::set (23 bytes)
<writer thread='139919521801984'/>
  13121  683       4       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   made not entrant
  13135  793       4       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)   made not entrant
  13135  794       4       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   made not entrant
<writer thread='139919013099264'/>
                                @ 18   java.lang.Object::notifyAll (0 bytes)   native method
                              @ 246   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 249   java.util.concurrent.ConcurrentHashMap::put (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
              s!              @ 260   java.io.ObjectStreamClass$EntryFuture::get (46 bytes)   callee is too large
                              @ 315   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 320   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 325   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 328   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 331  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139919004563200'/>
  13201  572   !   4       java.io.ObjectOutputStream::writeSerialData (221 bytes)   made not entrant
  13201  782       4       java.util.Arrays::fill (28 bytes)   made not entrant
  13202  747  s    4       java.io.BufferedOutputStream::flush (12 bytes)   made not entrant
<dependency_failed type='leaf_type' ctxk='java/net/SocketException' witness='sun/net/ConnectionResetException' stamp='13.203'/>
<writer thread='139919521801984'/>
C1 Runtime statistics:
 _resolve_invoke_virtual_cnt:     108
 _resolve_invoke_opt_virtual_cnt: 450
 _resolve_invoke_static_cnt:      80
 _handle_wrong_method_cnt:        95
 _ic_miss_cnt:                    48
 _generic_arraycopy_cnt:          0
 _generic_arraycopystub_cnt:      0
 _byte_arraycopy_cnt:             0
 _short_arraycopy_cnt:            0
 _int_arraycopy_cnt:              0
 _long_arraycopy_cnt:             0
 _primitive_arraycopy_cnt:        0
 _oop_arraycopy_cnt (C):          0
 _oop_arraycopy_cnt (stub):       0
 _arraycopy_slowcase_cnt:         0
 _arraycopy_checkcast_cnt:        0
 _arraycopy_checkcast_attempt_cnt:0
 _new_type_array_slowcase_cnt:    0
 _new_object_array_slowcase_cnt:  0
 _new_instance_slowcase_cnt:      0
 _new_multi_array_slowcase_cnt:   0
 _monitorenter_slowcase_cnt:      0
 _monitorexit_slowcase_cnt:       0
 _patch_code_slowcase_cnt:        3
 _throw_range_check_exception_count:            0:
 _throw_index_exception_count:                  0:
 _throw_div0_exception_count:                   0:
 _throw_null_pointer_exception_count:           0:
 _throw_class_cast_exception_count:             0:
 _throw_incompatible_class_change_error_count:  0:
 _throw_array_store_exception_count:            0:
 _throw_count:                                  0:

<statistics type='deoptimization'>
Deoptimization traps recorded:
    14 (100.0%) total
     null_check/make_not_entrant/checkcast: 3 (21.4%)
   null_assert/make_not_entrant/instanceof: 1 (7.1%)
                       constraint/none/nop: 4 (28.6%)
         predicate/maybe_recompile/aload_0: 1 (7.1%)
         unstable_if/reinterpret/ifnonnull: 4 (28.6%)
              unstable_if/reinterpret/ifne: 1 (7.1%)
</statistics>
<statistics type='SharedRuntime'>
    3 new instance requires GC
    4 new array requires GC
   48 inline cache miss in compiled
   95 wrong method
   80 unresolved static call site
  108 unresolved virtual call site
  450 unresolved opt virtual call site
  214 slow partial subtype
199384 byte array copies
274930 short array copies
18091 int array copies
  521 long array copies
    1 find exception handler
AdapterHandlerTable: empty 147 longest 3 total 201 average 1.376712
AdapterHandlerTable: lookups 11293 buckets 11711 equals 10815 hits 10815 compact 10815
</statistics>
<statistics type='nmethod'>
Statistics for 80 native nmethods:
 N. total size  = 76496
 N. relocation  = 6864
 N. main code   = 44592
Statistics for 642 bytecoded nmethods:
 total in heap  = 2176080
 relocation     = 137640
 constants      = 736
 main code      = 1089440
 stub code      = 126280
 oops           = 1224
 scopes data    = 213000
 scopes pcs     = 341824
 dependencies   = 5616
 handler table  = 22144
 nul chk table  = 15144
Debug Data Chunks: 56740, shared 6542+23099, non-SP&apos;s elided 491
PcDesc Statistics:  2117 queries, 9.46 comparisons per query
  caches=642 queries=2117/0, hits=0+411, tests=7772+12253, adds=1706
</statistics>
<statistics type='opto'>
--- Compiler Statistics ---
Methods seen: 1097  Methods parsed: 1097  Nodes created: 202551
Blocks parsed: 2996  Blocks seen: 3791
3862 original NULL checks - 3004 elided (77%); optimizer leaves 714,
455 made implicit (63%)
CCP: 109  constants found: 0
Total frameslots = 1068, Max frameslots = 40
Inserted 0 spill loads, 0 spill stores, 0 mem-mem moves and 0 copies.
Total load cost=      0, store cost =      0, mem-mem cost =  0.00, copy cost =     0.
Adjusted spill cost =       0.
Conservatively coalesced 570 copies, 0 pairs, 4273 post alloc.
Used cisc instruction  82,  remained in register 1330
Average allocation trips 1.717742
High Pressure Blocks = 0, Low Pressure Blocks = 0
Nops added 0 bytes to total of 126329 bytes, for 0.00%
Peephole: peephole rules applied: 0
PhaseIdealLoop=490, sum _unique=446152
</statistics>
<statistics type='intrinsic'>
Compiler intrinsic usage:
     1 ( 0.4%) _hashCode (worked,virtual)
     5 ( 2.1%) _getClass (worked)
    20 ( 8.3%) _min (worked)
     2 ( 0.8%) _max (worked)
     3 ( 1.2%) _doubleToLongBits (worked)
    13 ( 5.4%) _identityHashCode (worked)
     3 ( 1.2%) _nanoTime (worked)
    30 (12.4%) _arraycopy (worked)
     4 ( 1.7%) _isInterrupted (worked)
    48 (19.8%) _currentThread (worked)
     2 ( 0.8%) _isInstance (worked)
     1 ( 0.4%) _isArray (worked)
     1 ( 0.4%) _isPrimitive (worked)
     1 ( 0.4%) _getComponentType (worked)
     2 ( 0.8%) _getClassAccessFlags (worked)
     2 ( 0.8%) _copyOf (worked)
     1 ( 0.4%) _equals (worked)
    10 ( 4.1%) _Reference_get (worked)
     0 ( 0.0%) _unpark (failed)
     3 ( 1.2%) _getObject (worked)
     3 ( 1.2%) _getBoolean (worked)
     3 ( 1.2%) _getByte (worked)
     3 ( 1.2%) _getShort (worked)
     3 ( 1.2%) _getChar (worked)
     3 ( 1.2%) _getInt (worked)
     3 ( 1.2%) _getLong (worked)
     3 ( 1.2%) _getFloat (worked)
     3 ( 1.2%) _getDouble (worked)
     5 ( 2.1%) _getObjectVolatile (worked)
     1 ( 0.4%) _putObjectVolatile (worked)
    13 ( 5.4%) _compareAndSwapObject (worked)
     1 ( 0.4%) _compareAndSwapLong (worked)
    39 (16.1%) _compareAndSwapInt (worked)
     3 ( 1.2%) _putOrderedInt (worked)
     4 ( 1.7%) _getAndAddInt (worked)
   242 (100.0%) total (worked,failed,virtual)
</statistics>
<writer thread='139919097796352'/>
<destroy_vm stamp='13.230'/>
<writer thread='139919013099264'/>
  13242  841       2       sun.reflect.AccessorGenerator::sub (5 bytes)
<tty_done stamp='13.646'/>
</tty>
<hotspot_log_done stamp='13.646'/>
</hotspot_log>
