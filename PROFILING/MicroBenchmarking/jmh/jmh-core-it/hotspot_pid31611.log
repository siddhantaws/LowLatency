<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='31611' time_ms='1560356634363'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
25.71-b00-fastdebug
</release>
<info>
OpenJDK 64-Bit Server VM (25.71-b00-fastdebug) for linux-amd64 JRE (1.8.0-internal-suryasnata_2019_06_08_22_39-b00), built on Jun  8 2019 23:17:25 by &quot;suryasnata&quot; with gcc 7.4.0
</info>
</vm_version>
<vm_arguments>
<args>
-Djmh.ignoreLock=true -Xms256m -Xmx256m -Djmh.core.it.profile=default -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+PrintInlining -XX:CompileCommandFile=/tmp/jmh6373817922112790615compilecommand 
</args>
<command>
org.openjdk.jmh.runner.ForkedMain 127.0.0.1 32789
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.71-b00-fastdebug
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/endorsed
sun.boot.library.path=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/usr/lib/jvm/java-8-openjdkdebug/jre
java.class.path=/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core-it/target/test-classes:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core-it/target/classes:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-core/target/jmh-core-1.18-SNAPSHOT.jar:/home/suryasnata/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/home/suryasnata/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/suryasnata/.m2/repository/junit/junit/4.10/junit-4.10.jar:/home/suryasnata/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar:/home/suryasnata/IdeaProjects/LowLatency/PROFILING/MicroBenchmarking/jmh/jmh-generator-annprocess/target/jmh-generator-annprocess-1.18-SNAPSHOT.jar:
sun.boot.class.path=/usr/lib/jvm/java-8-openjdkdebug/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdkdebug/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
jmh.ignoreLock=true
jmh.core.it.profile=default
sun.java.command=org.openjdk.jmh.runner.ForkedMain 127.0.0.1 32789
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='139652869576448'/>
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='177714'/>
</blob>
<writer thread='139652429260544'/>
   1864    1       3       java.lang.String::hashCode (55 bytes)
   1874    2       3       java.lang.String::equals (81 bytes)
   1882    3       3       java.lang.String::length (6 bytes)
   1898    4       3       java.lang.Object::&lt;init&gt; (1 bytes)
   1899    5       3       java.lang.String::charAt (29 bytes)
                              @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   1900    6       3       java.lang.String::indexOf (70 bytes)
                              @ 66   java.lang.String::indexOfSupplementary (71 bytes)   callee is too large
   1904    7       3       java.lang.Math::min (11 bytes)
<writer thread='139652869576448'/>
   1905    9     n 0       java.lang.System::arraycopy (native)   (static)
<writer thread='139652429260544'/>
   1910    8       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                              @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                              @ 20   java.util.Arrays::copyOf (19 bytes)
                                @ 11   java.lang.Math::min (11 bytes)
                                @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   1940   10       3       java.util.Arrays::copyOfRange (63 bytes)
                              @ 16   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 32   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 35   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 54   java.lang.Math::min (11 bytes)
                              @ 57   java.lang.System::arraycopy (0 bytes)   intrinsic
   1947   11       3       java.lang.String::&lt;init&gt; (82 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 13  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 30  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 65  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 75   java.util.Arrays::copyOfRange (63 bytes)   callee is too large
   2018   12       3       java.lang.String::getChars (62 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 43  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 58   java.lang.System::arraycopy (0 bytes)   intrinsic
   2094   13       3       java.lang.CharacterData::of (120 bytes)
   2096   14       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)
   2128   15       3       java.util.jar.Attributes$Name::isValid (32 bytes)
                              @ 1   java.util.jar.Attributes$Name::isAlpha (30 bytes)   not inlineable
                              @ 8   java.util.jar.Attributes$Name::isDigit (18 bytes)   not inlineable
   2130   16       3       java.util.jar.Attributes$Name::isAlpha (30 bytes)
   2289   17       3       java.lang.System::getSecurityManager (4 bytes)
   2293   18       3       java.lang.String::indexOf (7 bytes)
                              @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
   2299   19       3       java.lang.String::lastIndexOf (52 bytes)
                              @ 16   java.lang.Math::min (11 bytes)
                              @ 48   java.lang.String::lastIndexOfSupplementary (70 bytes)   callee is too large
   2302   20       3       java.lang.String::startsWith (72 bytes)
   2376   21       3       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
<writer thread='139652869576448'/>
   2376   22     n 0       sun.misc.Unsafe::getObjectVolatile (native)   
<writer thread='139652429260544'/>
                              @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
   2378   23       3       java.lang.AbstractStringBuilder::append (50 bytes)
                              @ 5   java.lang.AbstractStringBuilder::appendNull (56 bytes)   callee is too large
                              @ 10   java.lang.String::length (6 bytes)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 35   java.lang.String::getChars (62 bytes)   callee is too large
   2390   24       3       java.lang.StringBuilder::append (8 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
   2490   25       3       sun.nio.cs.UTF_8$Decoder::decode (779 bytes)
                              @ 12   java.lang.Math::min (11 bytes)
                              @ 117   sun.nio.cs.UTF_8$Decoder::isNotContinuation (17 bytes)
                              @ 124   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 143   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 147   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 182   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 201   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 205   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 251   sun.nio.cs.UTF_8$Decoder::isMalformed3 (45 bytes)   callee is too large
                              @ 258   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 277   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 281   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 292   sun.nio.cs.UTF_8$Decoder::getByteBuffer (17 bytes)
                                @ 5   java.nio.ByteBuffer::wrap (8 bytes)
               !                  @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                    @ 7   java.nio.HeapByteBuffer::&lt;init&gt; (14 bytes)
                                      @ 10   java.nio.ByteBuffer::&lt;init&gt; (45 bytes)   callee is too large
                                    @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 11   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 301   sun.nio.cs.UTF_8$Decoder::malformedN (192 bytes)   callee is too large
                              @ 304   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 334   java.lang.Character::isSurrogate (18 bytes)
                              @ 341   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 360   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 364   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 385   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 407   sun.nio.cs.UTF_8$Decoder::isMalformed3_2 (34 bytes)
                              @ 421   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 425   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 440   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 444   java.lang.String::charAt (29 bytes)
        
<writer thread='139652430313216'/>
   2511   26       4       java.lang.String::charAt (29 bytes)
   2514    5       3       java.lang.String::charAt (29 bytes)   made not entrant
<writer thread='139652429260544'/>
                        @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 523   sun.nio.cs.UTF_8$Decoder::isMalformed4 (39 bytes)   callee is too large
                              @ 531   java.lang.Character::isSupplementaryCodePoint (18 bytes)
                              @ 601   java.lang.Character::highSurrogate (9 bytes)
                              @ 614   java.lang.Character::lowSurrogate (10 bytes)
                              @ 538   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 557   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 561   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 572   sun.nio.cs.UTF_8$Decoder::getByteBuffer (17 bytes)
                                @ 5   java.nio.ByteBuffer::wrap (8 bytes)
               !                  @ 4   java.nio.ByteBuffer::wrap (20 bytes)
                                    @ 7   java.nio.HeapByteBuffer::&lt;init&gt; (14 bytes)
                                      @ 10   java.nio.ByteBuffer::&lt;init&gt; (45 bytes)   callee is too large
                                    @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 11   java.nio.Buffer::position (43 bytes)   callee is too large
                              @ 581   sun.nio.cs.UTF_8$Decoder::malformedN (192 bytes)   callee is too large
                              @ 584   java.nio.charset.CoderResult::length (20 bytes)
                                @ 1   java.nio.charset.CoderResult::isError (14 bytes)
                                @ 11  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 622   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 664   sun.nio.cs.UTF_8$Decoder::isMalformed4_2 (56 bytes)   callee is too large
                              @ 701   sun.nio.cs.UTF_8$Decoder::isMalformed4_3 (17 bytes)
                              @ 715   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 719   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 734   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 738   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 678   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 682   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 746   java.nio.charset.CharsetDecoder::malformedInputAction (5 bytes)
                              @ 765   java.nio.charset.CharsetDecoder::replacement (5 bytes)
                              @ 769   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139652869576448'/>
   2766   29     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLL)L (native)   (static)
   2814   30     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLL)L (native)   (static)
   2841   34     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)L (native)   (static)
   2979   35     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)V (native)   (static)
   3019   36     n 0       java.lang.invoke.MethodHandle::linkToStatic(LL)J (native)   (static)
   3043   38     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)L (native)   (static)
   3060   40     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LLL)L (native)   (static)
<writer thread='139652429260544'/>
   3106   27       1       java.lang.Object::&lt;init&gt; (1 bytes)
   3107    4       3       java.lang.Object::&lt;init&gt; (1 bytes)   made not entrant
   3107   37       1       java.lang.String::length (6 bytes)
   3107    3       3       java.lang.String::length (6 bytes)   made not entrant
   3107   28       3       java.lang.Number::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   3108   33       1       java.lang.ref.Reference::get (5 bytes)
   3117   31       1       java.lang.Class::getClassLoader0 (5 bytes)
   3119   32       1       java.lang.reflect.Method::getName (5 bytes)
   3121   39       1       java.lang.Enum::ordinal (5 bytes)
   3123   41       1       java.lang.invoke.MethodType::returnType (5 bytes)
   3125   42       1       java.lang.invoke.MemberName::getDeclaringClass (5 bytes)
   3130   44       3       jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)
                              @ 33   jdk.internal.org.objectweb.asm.Item::isEqualTo (354 bytes)   callee is too large
   3136   45       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 15   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 41   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
                              @ 83   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 125   jdk.internal.org.objectweb.asm.ByteVector::encodeUTF8 (335 bytes)   callee is too large
<writer thread='139652869576448'/>
   3155   50     n 0       java.lang.Object::hashCode (native)   
<writer thread='139652429260544'/>
   3160   47       3       jdk.internal.org.objectweb.asm.ByteVector::putShort (52 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
   3176   43       3       jdk.internal.org.objectweb.asm.Item::set (143 bytes)
                              @ 104   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 108   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 90   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 123   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 127   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 133   java.lang.String::hashCode (55 bytes)   callee is too large
   3193   48       3       java.lang.AbstractStringBuilder::append (29 bytes)
                              @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   3215   52       3       jdk.internal.org.objectweb.asm.ClassWriter::put (152 bytes)
   3218   51       3       jdk.internal.org.objectweb.asm.Item::&lt;init&gt; (66 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   3244   49       3       java.lang.invoke.MemberName::testFlags (16 bytes)
   3251   57       1       java.util.ArrayList::access$000 (5 bytes)
<writer thread='139652430313216'/>
   3254   58       4       java.lang.String::indexOf (70 bytes)
<writer thread='139652429260544'/>
   3254   53       1       java.util.SubList::access$000 (5 bytes)
   3255   54       1       java.util.AbstractList$ListItr::nextIndex (5 bytes)
   3255   55       1       java.util.SubList::access$200 (5 bytes)
   3255   56       1       java.util.ArrayList::size (5 bytes)
   3256   46       1       java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry::hashCode (5 bytes)
<writer thread='139652430313216'/>
   3261    6       3       java.lang.String::indexOf (70 bytes)   made not entrant
<writer thread='139652429260544'/>
   3265   60       3       java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                              @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
   3266   62       3       java.lang.String::lastIndexOf (13 bytes)
                              @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
   3267   61       3       java.lang.Class::getClassLoader (28 bytes)
                              @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 11   java.lang.System::getSecurityManager (4 bytes)
                              @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                @ 0   java.lang.System::getSecurityManager (4 bytes)
                                @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                  @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                  @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
<writer thread='139652869576448'/>
   3281   66     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLL)V (native)   (static)
   3285   67     n 0       java.lang.Class::isPrimitive (native)   
<writer thread='139652429260544'/>
   3303   64       3       java.lang.String::replace (127 bytes)
                              @ 121   java.lang.String::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   3311   70       3       java.lang.Class::getName (21 bytes)
<writer thread='139652869576448'/>
   3318   72     n 0       java.lang.invoke.MethodHandle::linkToVirtual(LL)L (native)   (static)
<writer thread='139652429260544'/>
                              @ 11   java.lang.Class::getName0 (0 bytes)   native method
   3327   65       3       java.lang.invoke.MemberName::isInvocable (7 bytes)
                              @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
<writer thread='139652869576448'/>
   3333   73     n 0       java.lang.invoke.MethodHandle::invokeBasic(L)L (native)   
   3334   74     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLL)L (native)   (static)
<writer thread='139652429260544'/>
   3336   69       3       jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)
                              @ 18   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   callee is too large
<writer thread='139652869576448'/>
   3353   76     n 0       java.lang.invoke.MethodHandle::linkToStatic(L)L (native)   (static)
<writer thread='139652429260544'/>
   3365   71       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
<writer thread='139652869576448'/>
   3367   77     n 0       java.lang.invoke.MethodHandle::invokeBasic()L (native)   
<writer thread='139652429260544'/>
   3367   75       3       java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                              @ 1   java.lang.Object::&lt;init&gt;
<writer thread='139652869576448'/>
   3373   79     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LL)L (native)   (static)
<writer thread='139652429260544'/>
 (1 bytes)
   3374   63       3       java.lang.StringBuilder::append (8 bytes)
<writer thread='139652869576448'/>
   3385   83     n 0       java.lang.invoke.MethodHandle::invokeBasic(LL)L (native)   
<writer thread='139652429260544'/>
                              @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
<writer thread='139652869576448'/>
   3386   84     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLL)L (native)   (static)
<writer thread='139652429260544'/>
                                @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                  @ 20   java.util.Arrays::copyOf (19 bytes)
                                    @ 11   java.lang.Math::min (11 bytes)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
<writer thread='139652869576448'/>
   3388   86     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLL)L (native)   
   3389   87     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLL)L (native)   (static)
<writer thread='139652429260544'/>
   3405   80       3       jdk.internal.org.objectweb.asm.ClassWriter::newUTF8 (70 bytes)
                              
<writer thread='139652869576448'/>
   3406   89     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLL)L (native)   (static)
<writer thread='139652429260544'/>
@ 8   jdk.internal.org.objectweb.asm.Item::set (143 bytes)   callee is too large
                              @ 16   jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)   callee is too large
                              @ 29   jdk.internal.org.objectweb.asm.ByteVector::putByte (39 bytes)   callee is too large
                              @ 33   jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)   callee is too large
                              @ 56   jdk.internal.org.objectweb.asm.Item::&lt;init&gt; (66 bytes)   callee is too large
<writer thread='139652869576448'/>
   3409   91     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLL)L (native)   
<writer thread='139652429260544'/>
                              @ 62   jdk.internal.org.objectweb.asm.ClassWriter::put (152 bytes)   callee is too large
<writer thread='139652869576448'/>
   3410   92     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
   3411   81       3       java.util.Objects::requireNonNull (14 bytes)
<writer thread='139652430313216'/>
   3417   94       4       java.lang.String::hashCode (55 bytes)
   3425    1       3       java.lang.String::hashCode (55 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   3427   68       3       java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
<writer thread='139652869576448'/>
   3428   98     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   3429   85       1       java.lang.invoke.LambdaForm$Name::index (5 bytes)
<writer thread='139652869576448'/>
   3430   99     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLL)L (native)   
   3430  100     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
   3430   90       1       java.lang.invoke.LambdaForm$Name::type (5 bytes)
   3431   97       1       java.lang.invoke.LambdaForm$BasicType::basicTypeClass (5 bytes)
   3434   93       1       java.lang.invoke.LambdaForm$Name::access$000 (5 bytes)
   3435   95       1       java.lang.invoke.LambdaForm$BasicType::basicTypeChar (5 bytes)
   3442   96       1       java.lang.invoke.LambdaForm$BasicType::access$100 (5 bytes)
   3453  101       3       java.lang.invoke.MethodType$ConcurrentWeakInternSet::expungeStaleElements (27 bytes)
<writer thread='139652869576448'/>
   3453  103     n 0       sun.misc.Unsafe::putObjectVolatile (native)   
<writer thread='139652429260544'/>
               !m             @ 4   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 17   java.util.concurrent.ConcurrentMap::remove (10 bytes)
<writer thread='139652869576448'/>
   3455  104     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLL)L (native)   
<writer thread='139652429260544'/>
   no static binding
<writer thread='139652869576448'/>
   3455  105     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLL)L (native)   (static)
   3455  106     n 0       java.lang.Class::isArray (native)   
<writer thread='139652429260544'/>
   3456  102       3       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
                              @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   intrinsic
   3460  107       3       java.lang.String::indexOf (166 bytes)
<writer thread='139652869576448'/>
   3470  111     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLL)L (native)   (static)
   3483  113     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLL)L (native)   
<writer thread='139652429260544'/>
   3484  108       3       java.lang.invoke.MethodType::hashCode (53 bytes)
                              @ 6   java.lang.Object::hashCode (0 bytes)   native method
                              @ 40   java.lang.Object::hashCode (0 bytes)   native method
<writer thread='139652869576448'/>
   3485  114     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
   3487  110       3       java.lang.Object::equals (11 bytes)
   3494  112       3       java.lang.invoke.MemberName::testAllFlags (7 bytes)
                              @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
   3503  109       3       java.lang.AbstractStringBuilder::newCapacity (39 bytes)
                              @ 31   java.lang.AbstractStringBuilder::hugeCapacity (28 bytes)
                                @ 11   java.lang.OutOfMemoryError::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   3512   88       1       sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
<writer thread='139652869576448'/>
   3517  116     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
   3518   59       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
   3525  117       3       java.lang.invoke.LambdaForm$BasicType::basicType (19 bytes)
                              @ 1   java.lang.Class::isPrimitive
<writer thread='139652869576448'/>
   3530  120     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLL)L (native)   
   3531  121     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
 (0 bytes)   native method
                              @ 12   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                              @ 15   java.lang.invoke.LambdaForm$BasicType::basicType (10 bytes)
                                @ 1   sun.invoke.util.Wrapper::basicTypeChar (5 bytes)
                                @ 6   java.lang.invoke.LambdaForm$BasicType::basicType (172 bytes)   callee is too large
<writer thread='139652869576448'/>
   3534  123     n 0       java.lang.Object::getClass (native)   
   3541  125     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
   3544  119       3       java.lang.invoke.MethodType::parameterType (7 bytes)
   3545  122   !   3       java.lang.invoke.MemberName::getMethodType (208 bytes)
                              @ 8   java.lang.invoke.MemberName::expandFromVM (21 bytes)
                                @ 9   java.lang.invoke.MemberName::isResolved (13 bytes)
                                @ 17   java.lang.invoke.MethodHandleNatives::expand (0 bytes)   native method
                              @ 21   java.lang.invoke.MemberName::isInvocable (7 bytes)
                                @ 3   java.lang.invoke.MemberName::testAnyFlags (15 bytes)
                                  @ 3   java.lang.invoke.MemberName::testFlags (16 bytes)
                              @ 29   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 74   java.lang.invoke.MemberName::getClassLoader (8 bytes)
                                @ 4   java.lang.Class::getClassLoader (28 bytes)
                                  @ 1   java.lang.Class::getClassLoader0 (5 bytes)
<writer thread='139652869576448'/>
   3560  126     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLL)L (native)   
   3562  127     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
                                  @ 11   java.lang.System::getSecurityManager (4 bytes)
                                  @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                  @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)   callee is too large
                              @ 77   java.lang.invoke.MethodType::fromMethodDescriptorString (97 bytes)   callee is too large
                              @ 131   java.lang.invoke.MethodType::methodType (7 bytes)
                                @ 3   java.lang.invoke.MethodType::makeImpl (66 bytes)   callee is too large
<writer thread='139652869576448'/>
   3576  131     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLL)L (native)   (static)
   3608  132     n 0       java.lang.invoke.MethodHandle::invokeBasic(LLLLLLLLLL)L (native)   
   3608  133     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LLLLLLLLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
   3646  134       3       java.lang.String::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   3647  128       3       java.lang.invoke.MethodType::checkSlotCount (33 bytes)
                              @ 13   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
<writer thread='139652869576448'/>
   3649  137     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLLL)L (native)   (static)
   3654  139     n 0       java.lang.invoke.MethodHandle::linkToStatic(LLLLLLLLLLLLL)L (native)   (static)
<writer thread='139652429260544'/>
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 18   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 22   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 28   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139652869576448'/>
   3665  140     n 0       java.lang.invoke.MethodHandle::linkToStatic(LIL)V (native)   (static)
<writer thread='139652431365888'/>
   3672  141       4       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)
<writer thread='139652429260544'/>
   3685  136       3       java.lang.invoke.MethodType::checkPtype (19 bytes)
                              @ 1   java.util.Objects::requireNonNull (14 bytes)
                                @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 14   java.lang.invoke.MethodHandleStatics::newIllegalArgumentException (9 bytes)
                                @ 5   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   3693  138       3       java.lang.invoke.MethodTypeForm::canonicalize (233 bytes)
                              @ 10   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 53   sun.invoke.util.Wrapper::asPrimitiveType (20 bytes)
                                @ 1   sun.invoke.util.Wrapper::findWrapperType (25 bytes)
<writer thread='139652431365888'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 41   jdk.internal.org.objectweb.asm.ByteVector::enlarge (51 bytes)   executed &lt; MinInliningThreshold times
                              @ 83   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139652869576448'/>
   3708  142     n 0       java.lang.invoke.MethodHandle::linkToStatic(ILL)I (native)   (static)
<writer thread='139652429260544'/>
                                  @ 4   sun.invoke.util.Wrapper::hashWrap (62 bytes)   callee is too large
                                @ 10   sun.invoke.util.Wrapper::primitiveType (5 bytes)
                                @ 14   sun.invoke.util.Wrapper::forceType (165 bytes)   callee is too large
                              @ 149   sun.invoke.util.Wrapper::asWrapperType (18 bytes)
                                @ 1   java.lang.Class::isPrimitive (0 bytes)   native method
                                @ 8   sun.invoke.util.Wrapper::forPrimitiveType (49 bytes)   callee is too large
                                @ 12   sun.invoke.util.Wrapper::wrapperType (52 bytes)   callee is too large
   3750  124       3       java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   3759  118       3       jdk.internal.org.objectweb.asm.Frame::execute (2252 bytes)
                              @ 822   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 955   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 979   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 964   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 970   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 988   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 994   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1006   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1010   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1022   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1026   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1038   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 1042   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1054   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)
<writer thread='139652869576448'/>
   3763  143     n 0       java.lang.invoke.MethodHandle::linkToStatic(ILLL)L (native)   (static)
<writer thread='139652429260544'/>
   callee is too large
                              @ 1058   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 831   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 840   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 846   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 855   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
<writer thread='139652869576448'/>
   3777  147     n 0       java.lang.invoke.MethodHandle::invokeBasic(ILL)L (native)   
   3778  149     n 0       java.lang.invoke.MethodHandle::linkToSpecial(LILLL)L (native)   (static)
<writer thread='139652429260544'/>
                              @ 864   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 870   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1067   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1070   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1112   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1118   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1146   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1150   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1161   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1078   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1084   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1246   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1250   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
<writer thread='139652431365888'/>
   3786   45       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 1259   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1268   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1279   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1329   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1304   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1168   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1177   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1188   jdk.internal.org.objectweb.asm.Frame::get (46 bytes)   callee is too large
                              @ 1238   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1213   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1345   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1337   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1368   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1376   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1382   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1389   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1395   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1403   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1409   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1415   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1422   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1428   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1434   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1442   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1448   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1454   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1460   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1467   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1473   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1481   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1487   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1493   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1499   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1506   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1512   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1518   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1526   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1532   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1538   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1544   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1550   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1557   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1563   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1569   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1575   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1583   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1589   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1595   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1601   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1607   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1613   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1620   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1626   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1634   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1640   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1696   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1702   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1708   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1716   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1722   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1728   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1662   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1668   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1674   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1738   jdk.internal.org.objectweb.asm.Frame::set (65 bytes)   callee is too large
                              @ 1766   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1772   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1126   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1132   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1138   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1746   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1752   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1758   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1780   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1786   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1792   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1092   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1098   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1104   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1682   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1688   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1648   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1654   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1814   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1820   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1832   java.lang.RuntimeException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 1361   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1843   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1855   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1863   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1873   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1885   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1889   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1902   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1913   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 1931   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 1942   jdk.internal.org.objectweb.asm.Frame::init (77 bytes)   callee is too large
                              @ 1952   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1964   jdk.internal.org.objectweb.asm.Frame::pop (53 bytes)   callee is too large
                              @ 1974   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1990   jdk.internal.org.objectweb.asm.ClassWriter::addUninitializedType (71 bytes)   callee is too large
                              @ 1994   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2001   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2051   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2060   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2096   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2105   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2069   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2078   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2087   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2114   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2128   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2135   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 2149   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 2154   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (29 bytes)
                                  @ 7   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                    @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                    @ 20   java.util.Arrays::copyOf (19 bytes)
                                      @ 11   java.lang.Math::min (11 bytes)
                                      @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 2159   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 2162   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 2165   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2177   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 2181   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2195   jdk.internal.org.objectweb.asm.Frame::pop (43 bytes)   callee is too large
                              @ 2202   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 2214   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 2226   jdk.internal.org.objectweb.asm.ClassWriter::addType (39 bytes)   callee is too large
                              @ 2230   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1800   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 1806   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                              @ 1353   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 2238   jdk.internal.org.objectweb.asm.Frame::pop (45 bytes)   callee is too large
                              @ 2248   jdk.internal.org.objectweb.asm.Frame::push (34 bytes)
                                @ 2   jdk.internal.org.objectweb.asm.Frame::type (416 bytes)   callee is too large
                                @ 12   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
                                @ 30   jdk.internal.org.objectweb.asm.Frame::push (110 bytes)   callee is too large
<writer thread='139652430313216'/>
   3921  154       4       java.lang.String::equals (81 bytes)
   3936    2       3       java.lang.String::equals (81 bytes)   made not entrant
   4270  164       4       java.lang.Math::min (11 bytes)
   4271    7       3       java.lang.Math::min (11 bytes)   made not entrant
<writer thread='139652431365888'/>
   4354  173       4       java.lang.String::lastIndexOf (52 bytes)
                              @ 16   java.lang.Math::min (11 bytes)   (intrinsic)
   4365   19       3       java.lang.String::lastIndexOf (52 bytes)   made not entrant
<writer thread='139652430313216'/>
   4394  176       4       java.lang.String::replace (127 bytes)
<writer thread='139652429260544'/>
   4435  168       3       java.util.HashMap::getNode (148 bytes)
                              @ 59   java.lang.Object::equals (11 bytes)   no static binding
                              @ 94   java.util.HashMap$TreeNode::getTreeNode (22 bytes)   not inlineable
                              @ 126   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='139652430313216'/>
                              @ 121   java.lang.String::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
<writer thread='139652429260544'/>
   4455  174       1       java.lang.reflect.Field::getName (5 bytes)
   4458  171       3       java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)
                              @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
   4466  163       3       java.util.Arrays::copyOf (19 bytes)
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   4472  167       3       java.util.HashMap::hash (20 bytes)
                              @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
   4475  169       3       java.util.HashMap::get (23 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
   4503  146       3       java.lang.String::substring (79 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 44  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 75   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   4506  155       1       java.net.URL::getProtocol (5 bytes)
   4509  156       1       java.net.URL::getHost (5 bytes)
   4510  157       1       java.net.URL::getPath (5 bytes)
   4510  158       1       java.net.URL::getAuthority (5 bytes)
   4510  160       1       java.net.URL::getRef (5 bytes)
   4516  159       1       java.net.URL::getFile (5 bytes)
   4516   78       1       java.lang.invoke.MethodType::form (5 bytes)
   4517  161       1       java.net.URL::getQuery (5 bytes)
   4518  162       1       java.net.URL::getPort (5 bytes)
   4524  175       1       sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
<writer thread='139652430313216'/>
   4536   64       3       java.lang.String::replace (127 bytes)   made not entrant
<writer thread='139652429260544'/>
   4537  178       1       java.util.zip.ZipFile::access$000 (5 bytes)
   4538  180       3       java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
<writer thread='139652869576448'/>
   4539  181     n 0       sun.misc.Unsafe::compareAndSwapObject (native)   
<writer thread='139652429260544'/>
                              @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
   4550  183       3       java.lang.String::startsWith (7 bytes)
                              @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
   4556  179       3       java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   4559  182       3       java.util.ArrayList::get (11 bytes)
                              @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 7   java.util.ArrayList::elementData (7 bytes)
   4585  177       1       java.lang.StringCoding$StringEncoder::requestedCharsetName (5 bytes)
   4586  184       1       java.net.URL::getUserInfo (5 bytes)
   4587  185       1       java.security.ProtectionDomain::getCodeSource (5 bytes)
   4600  186       3       java.lang.ClassLoader::checkName (43 bytes)
                              @ 5   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 23   sun.misc.VM::allowArraySyntax (4 bytes)
                              @ 31   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139652869576448'/>
   4648  187     n 0       sun.reflect.Reflection::getCallerClass (native)   (static)
<writer thread='139652429260544'/>
   4655  188       3       sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                              @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   4656  189       3       sun.reflect.ByteVectorImpl::add (38 bytes)
                              @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   callee is too large
   4677  190   !   3       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)
                              @ 17   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 121   java.util.concurrent.ConcurrentHashMap::helpTransfer (132 bytes)   callee is too large
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 192   java.lang.Object::equals (11 bytes)   no static binding
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 282  java/util/concurrent/ConcurrentHashMap$TreeBin::putTreeVal (not loaded)   not inlineable
               !m             @ 339   java.util.concurrent.ConcurrentHashMap::treeifyBin (164 bytes)   callee is too large
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   callee is too large
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   callee is too large
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
   4724  192       3       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)
                              @ 14   java.lang.Math::min (11 bytes)
                              @ 139   java.lang.Character::isSurrogate (18 bytes)
                              @ 157  sun/nio/cs/Surrogate$Parser::&lt;init&gt; (not loaded)   not inlineable
                              @ 175  sun/nio/cs/Surrogate$Parser::parse (not loaded)   not inlineable
                              @ 186   java.nio.charset.CharsetEncoder::malformedInputAction (5 bytes)
<writer thread='139652869576448'/>
   4737  196     n 0       java.lang.String::intern (native)   
<writer thread='139652429260544'/>
   4775  191       3       java.lang.StringBuilder::toString (17 bytes)
                              @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   4776  195       3       java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   4778  197   !   3       java.lang.ref.ReferenceQueue::poll (28 bytes)
                              @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
   4779  194       3       sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                              @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   4802  193       3       java.lang.Class::privateGetDeclaredFields (67 bytes)
                              @ 0   java.lang.Class::checkInitted (19 bytes)
                                @ 11   java.lang.Class$3::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 4   java.lang.Class::reflectionData (49 bytes)   callee is too large
                              @ 37   java.lang.Class::getDeclaredFields0 (0 bytes)   native method
                              @ 40   sun.reflect.Reflection::filterFields (31 bytes)
                                @ 13   java.util.Map::get (0 bytes)   no static binding
                                @ 21   sun.reflect.Reflection::filter (220 bytes)   callee is too large
   4809  199       3       java.lang.String::endsWith (17 bytes)
<writer thread='139652430313216'/>
   4817  201 %     4       java.lang.String::indexOf @ 53 (166 bytes)
<writer thread='139652429260544'/>
                              @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
   4861  202       3       java.lang.String::indexOf (25 bytes)
                              @ 21   java.lang.String::indexOf (166 bytes)   callee is too large
   4872  205  s!   3       sun.misc.URLClassPath::getLoader (243 bytes)
                              @ 13   java.util.ArrayList::size (5 bytes)
                              @ 33   java.util.Stack::empty (13 bytes)
              s                 @ 1   java.util.Vector::size (5 bytes)
              s               @ 47   java.util.Stack::pop (19 bytes)
              s                 @ 1   java.util.Vector::size (5 bytes)
              s                 @ 6   java.util.Stack::peek (25 bytes)
              s                   @ 1   java.util.Vector::size (5 bytes)
                                  @ 13  java/util/EmptyStackException::&lt;init&gt; (not loaded)   not inlineable
              s                   @ 21   java.util.Vector::elementAt (48 bytes)   callee is too large
              s                 @ 14   java.util.Vector::removeElementAt (115 bytes)   callee is too large
                              @ 67   sun.net.util.URLUtil::urlNoFragString (114 bytes)   callee is too large
                              @ 76   java.util.HashMap::containsKey (18 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
               !              @ 87   sun.misc.URLClassPath::getLoader (29 bytes)
                                @ 6   sun.misc.URLClassPath$3::&lt;init&gt; (15 bytes)
                                  @ 11   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 22  java/security/PrivilegedActionException::getException (not loaded)   not inlineable
                              @ 94   sun.misc.URLClassPath$Loader::getClassPath (2 bytes)   no static binding
               !m             @ 107   sun.misc.URLClassPath::push (46 bytes)   callee is too large
                              @ 169   java.util.ArrayList::size (5 bytes)
              s               @ 173   sun.misc.URLClassPath::validateLookupCache (80 bytes)   callee is too large
                              @ 182   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 193   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
                              @ 236   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
<writer thread='139652869576448'/>
   4958  209     n 0       java.lang.System::nanoTime (native)   (static)
   4989  211     n 0       java.lang.Object::clone (native)   
<writer thread='139652431365888'/>
   4993  213       4       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                              @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                              @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652430313216'/>
   5009  212       4       sun.reflect.ClassFileAssembler::emitByte (11 bytes)
<writer thread='139652431365888'/>
   5013    8       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   made not entrant
<writer thread='139652430313216'/>
                              @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                               \-&gt; TypeProfile (5401/5401 counts) = sun/reflect/ByteVectorImpl
                                @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
   5020  188       3       sun.reflect.ClassFileAssembler::emitByte (11 bytes)   made not entrant
<writer thread='139652431365888'/>
   5060  214       4       sun.reflect.ByteVectorImpl::add (38 bytes)
                              @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
   5064  189       3       sun.reflect.ByteVectorImpl::add (38 bytes)   made not entrant
<writer thread='139652429260544'/>
   5123  215       3       sun.reflect.UTF8::utf8Length (81 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 16   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   5153  223       1       java.lang.System::getSecurityManager (4 bytes)
   5154   17       3       java.lang.System::getSecurityManager (4 bytes)   made not entrant
   5175  222       3       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)
               !              @ 1   sun.reflect.UTF8::encode (191 bytes)   callee is too large
                              @ 7   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 14   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 29   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
   5192  221   !   3       sun.reflect.UTF8::encode (191 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   callee is too large
                              @ 26   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 185  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   5244  226  s    3       java.io.ByteArrayOutputStream::write (32 bytes)
                              @ 7   java.io.ByteArrayOutputStream::ensureCapacity (16 bytes)
                                @ 12   java.io.ByteArrayOutputStream::grow (43 bytes)   callee is too large
   5263  208       3       java.lang.ref.SoftReference::get (29 bytes)
                              @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
   5265  219       1       java.lang.reflect.Field::getModifiers (5 bytes)
   5270  227       3       java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5280  198  s    1       java.util.Vector::size (5 bytes)
   5284  230       1       java.lang.CharacterDataLatin1::getProperties (11 bytes)
   5297   14       3       java.lang.CharacterDataLatin1::getProperties (11 bytes)   made not entrant
   5302  228       3       java.lang.Character::toLowerCase (9 bytes)
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
   5307  229       3       java.lang.CharacterDataLatin1::toLowerCase (39 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
   5315  232       3       java.util.HashMap::afterNodeInsertion (1 bytes)
   5319  231       3       java.util.HashMap::newNode (13 bytes)
                              @ 9   java.util.HashMap$Node::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   5332  233       1       java.lang.ThreadLocal::access$400 (5 bytes)
   5336  225       1       java.lang.reflect.Constructor::getDeclaringClass (5 bytes)
   5357  234       3       sun.misc.FDBigInteger::mult (64 bytes)
   5360  235       3       sun.misc.FDBigInteger::&lt;init&gt; (30 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 26   sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)   not inlineable
   5363  236       3       sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)
   5373  237       3       sun.misc.FDBigInteger::makeImmutable (6 bytes)
   5374  238       3       sun.misc.FDBigInteger::mult (44 bytes)
                              @ 28   sun.misc.FDBigInteger::mult (64 bytes)   callee is too large
                              @ 40   sun.misc.FDBigInteger::&lt;init&gt; (30 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 26   sun.misc.FDBigInteger::trimLeadingZeros (57 bytes)   callee is too large
   5402  239       3       java.lang.ThreadLocal::get (38 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 6   java.lang.ThreadLocal::getMap (5 bytes)   no static binding
                              @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)
                                @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   callee is too large
                              @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   callee is too large
   5412  240       3       java.lang.StringCoding::deref (19 bytes)
                              @ 1   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 15   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
   5418  241       3       java.lang.StringCoding::access$000 (6 bytes)
                              @ 2   java.lang.StringCoding::scale (7 bytes)
   5421  242       3       java.lang.StringCoding::scale (7 bytes)
   5445  245       3       java.util.HashMap::putVal (300 bytes)
                              @ 20   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 56   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 91   java.lang.Object::equals (11 bytes)   no static binding
                              @ 123   java.util.HashMap$TreeNode::putTreeVal (314 bytes)   not inlineable
                              @ 152   java.util.HashMap::newNode (13 bytes)   no static binding
                              @ 169   java.util.HashMap::treeifyBin (110 bytes)   callee is too large
                              @ 203   java.lang.Object::equals (11 bytes)   no static binding
                              @ 253   java.util.HashMap::afterNodeAccess (1 bytes)   no static binding
                              @ 288   java.util.HashMap::resize (359 bytes)   callee is too large
                              @ 295   java.util.HashMap::afterNodeInsertion (1 bytes)   no static binding
   5504  248       3       java.lang.Character::toUpperCaseEx (30 bytes)
<writer thread='139652430313216'/>
   5516  252       4       java.lang.CharacterData::of (120 bytes)
   5518   13       3       java.lang.CharacterData::of (120 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 22   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 26   java.lang.CharacterData::toUpperCaseEx (6 bytes)   no static binding
   5522  249       3       java.lang.CharacterDataLatin1::toUpperCaseEx (71 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
   5527  255       3       sun.reflect.ClassFileAssembler::cpi (22 bytes)
                              @ 13   java.lang.RuntimeException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   5534  253       3       java.lang.Character::toLowerCase (6 bytes)
                              @ 1   java.lang.Character::toLowerCase (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
   5543  254       1       java.util.HashMap$Node::getValue (5 bytes)
   5546  246       3       java.lang.String::indexOf (7 bytes)
                              @ 3   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
   5554  244       3       java.util.HashMap::put (13 bytes)
                              @ 2   java.util.HashMap::hash (20 bytes)
                                @ 9   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
   5571  247       3       java.lang.String::substring (56 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 30  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 52   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   5578  243       3       java.nio.charset.CharsetEncoder::maxBytesPerChar (5 bytes)
   5590  257       3       sun.reflect.ByteVectorImpl::getLength (7 bytes)
   5591  256       3       sun.reflect.ByteVectorImpl::get (26 bytes)
                              @ 11   sun.reflect.ByteVectorImpl::resize (44 bytes)   callee is too large
   5593  259       3       java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                              @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   5595  261       3       sun.misc.MetaIndex::mayContain (51 bytes)
                              @ 10   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 35   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
   5616  260       3       java.io.ObjectStreamClass::requireInitialized (18 bytes)
                              @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   5619  258       3       java.io.ObjectStreamField::isPrimitive (27 bytes)
                              @ 5   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   5628  262       1       sun.misc.URLClassPath$JarLoader::access$700 (5 bytes)
<writer thread='139652430313216'/>
   5631  263 %     4       java.lang.String::indexOf @ 69 (166 bytes)
<writer thread='139652869576448'/>
   5633  264     n 0       sun.misc.Unsafe::compareAndSwapLong (native)   
   5635  268     n 0       java.lang.ClassLoader::findLoadedClass0 (native)   
<writer thread='139652429260544'/>
   5657  265   !   3       java.lang.ClassLoader::loadClass (122 bytes)
                              @ 2   java.lang.ClassLoader::getClassLoadingLock (35 bytes)
                                @ 13   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 23   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m                 @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 10   java.lang.ClassLoader::findLoadedClass (16 bytes)
                                @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                                @ 12   java.lang.ClassLoader::findLoadedClass0 (0 bytes)   native method
                              @ 20   java.lang.System::nanoTime (0 bytes)   intrinsic
               !m             @ 38   java.lang.ClassLoader::loadClass (122 bytes)   no static binding
                              @ 48   java.lang.ClassLoader::findBootstrapClassOrNull (16 bytes)
                                @ 2   java.lang.ClassLoader::checkName (43 bytes)   callee is too large
                                @ 12   java.lang.ClassLoader::findBootstrapClass (0 bytes)   native method
                              @ 63   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 70   java.lang.ClassLoader::findClass (9 bytes)   no static binding
                              @ 75   sun.misc.PerfCounter::getParentDelegationTime (4 bytes)
                              @ 83   sun.misc.PerfCounter::addTime (6 bytes)
              s                 @ 2   sun.misc.PerfCounter::add (18 bytes)
<writer thread='139652430313216'/>
<writer thread='139652429260544'/>
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 86   sun.misc.PerfCounter::getFindClassTime (4 bytes)
                              @ 91   sun.misc.PerfCounter::addElapsedTimeFrom (10 bytes)
                                @ 1   java.lang.System::nanoTime (0 bytes)   intrinsic
              s                 @ 6   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1   sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 94   sun.misc.PerfCounter::getFindClasses (4 bytes)
                              @ 97   sun.misc.PerfCounter::increment (6 bytes)
              s                 @ 2   sun.misc.PerfCounter::add (18 bytes)
              s                   @ 1  
<writer thread='139652869576448'/>
   5738  276     n 0       java.lang.Class::isInterface (native)   
<writer thread='139652429260544'/>
 sun.misc.PerfCounter::get (9 bytes)
                                    @ 5   java.nio.LongBuffer::get (0 bytes)   no static binding
                                  @ 13   java.nio.LongBuffer::put (0 bytes)   no static binding
                              @ 107   java.lang.ClassLoader::resolveClass (6 bytes)
                                @ 2   java.lang.ClassLoader::resolveClass0 (0 bytes)   native method
<writer thread='139652430313216'/>
   5746  279       4       java.lang.String::indexOf (166 bytes)
<writer thread='139652429260544'/>
   5792  278       1       sun.reflect.ByteVectorImpl::getLength (7 bytes)
   5793  257       3       sun.reflect.ByteVectorImpl::getLength (7 bytes)   made not entrant
   5793  277       3       java.lang.Class::searchFields (41 bytes)
                              @ 1   java.lang.String::intern (0 bytes)   native method
                              @ 16   java.lang.reflect.Field::getName (5 bytes)
                              @ 23   java.lang.Class::getReflectionFactory (26 bytes)
                                @ 10   sun.reflect.ReflectionFactory$GetReflectionFactoryAction::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 13   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 29   sun.reflect.ReflectionFactory::copyField (10 bytes)
                                @ 0   sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
<writer thread='139652431365888'/>
   5832  287       4       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='139652429260544'/>
                                  @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
                                @ 4   java.lang.reflect.ReflectAccess::copyField (5 bytes)
                                  @ 1   java.lang.reflect.Field::copy (76 bytes)   callee is too large
<writer thread='139652431365888'/>
                              @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   5839   10       3       java.util.Arrays::copyOfRange (63 bytes)   made not entrant
<writer thread='139652429260544'/>
   5849  283       1       java.io.ObjectStreamField::getName (5 bytes)
   5850  282       3       java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                              @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
   5864  288       1       java.lang.reflect.Field::getType (5 bytes)
   5864  273       1       java.io.ObjectStreamField::getField (5 bytes)
   5865  280       3       java.util.ArrayList::calculateCapacity (16 bytes)
                              @ 10   java.lang.Math::max (11 bytes)
   5866  281       3       java.util.ArrayList::ensureCapacityInternal (13 bytes)
                              @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                @ 10   java.lang.Math::max (11 bytes)
                              @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
<writer thread='139652430313216'/>
   5877  107       3       java.lang.String::indexOf (166 bytes)   made not entrant
<writer thread='139652429260544'/>
   5886  291       3       java.io.ObjectStreamField::getTypeCode (9 bytes)
<writer thread='139652430313216'/>
   5890  292       4       java.lang.String::getChars (62 bytes)
                              @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                              @ 5   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   5908  295       3       java.io.ObjectInputStream$PeekInputStream::readFully (48 bytes)
                              @ 19   java.io.ObjectInputStream$PeekInputStream::read (115 bytes)   callee is too large
<writer thread='139652430313216'/>
   5911   12       3       java.lang.String::getChars (62 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 33  java/io/EOFException::&lt;init&gt; (not loaded)   not inlineable
   5913  296  s    3       java.io.BufferedInputStream::read (113 bytes)
                              @ 1   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 26  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 49   java.io.BufferedInputStream::read1 (108 bytes)   callee is too large
                              @ 101   java.io.InputStream::available (2 bytes)   no static binding
<writer thread='139652430313216'/>
   5927  300       4       java.lang.String::&lt;init&gt; (82 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652431365888'/>
   5936  301       4       java.lang.StringBuilder::append (8 bytes)
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                    @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
   5946  302       3       java.io.ObjectStreamField::setOffset (6 bytes)
   5947  289       3       java.util.ArrayList::add (29 bytes)
                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
<writer thread='139652430313216'/>
   5965   11       3       java.lang.String::&lt;init&gt; (82 bytes)   made not entrant
   5968  303       4       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)
<writer thread='139652429260544'/>
   5970  285       1       java.io.ObjectStreamField::getOffset (5 bytes)
   5970  286       1       java.io.ObjectStreamField::getSignature (5 bytes)
   5971  297       3       java.io.BufferedInputStream::read1 (108 bytes)
                              @ 18   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 33   java.io.BufferedInputStream::getInIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139652431365888'/>
   5993   24       3       java.lang.StringBuilder::append (8 bytes)   made not entrant
<writer thread='139652429260544'/>
               !              @ 39   java.io.InputStream::read (109 bytes)   no static binding
                              @ 44   java.io.BufferedInputStream::fill (233 bytes)   callee is too large
                              @ 80   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139652431365888'/>
   5996  304       4       sun.reflect.ClassFileAssembler::emitShort (24 bytes)
<writer thread='139652429260544'/>
                              @ 91   java.lang.System::arraycopy (0 bytes)   intrinsic
   6009  305       3       java.lang.Class::reflectionData (49 bytes)
                              @ 21   java.lang.ref.SoftReference::get (29 bytes)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 45   java.lang.Class::newReflectionData (74 bytes)   callee is too large
   6014  306       3       java.lang.Class::checkInitted (19 bytes)
                              @ 11   java.lang.Class$3::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   java.security.AccessController::doPrivileged (0 bytes)   native method
   6016  298       3       java.io.ObjectInputStream$PeekInputStream::read (115 bytes)
               !              @ 20   java.io.InputStream::read (109 bytes)   no static binding
               !              @ 75   java.io.InputStream::read (109 bytes)   no static binding
<writer thread='139652431365888'/>
                              @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (26652/26652 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (26652/26652 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
<writer thread='139652429260544'/>
   6047  311       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
                              @ 1   java.lang.Object::hashCode (0 bytes)   no static binding
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   intrinsic
                              @ 73   java.lang.Object::equals (11 bytes)   no static binding
                              @ 93   java.util.concurrent.ConcurrentHashMap$Node::find (52 bytes)   no static binding
                              @ 149   java.lang.Object::equals (11 bytes)   no static binding
<writer thread='139652431365888'/>
   6053  194       3       sun.reflect.ClassFileAssembler::emitShort (24 bytes)   made not entrant
   6056  309       4       sun.reflect.UTF8::utf8Length (81 bytes)
<writer thread='139652869576448'/>
   6057  313     n 0       java.lang.Class::getSuperclass (native)   
<writer thread='139652429260544'/>
   6080  314       3       sun.reflect.ClassFileAssembler::setStack (25 bytes)
   6081  308  s    3       java.io.BufferedInputStream::read (49 bytes)
                              @ 12   java.io.BufferedInputStream::fill (233 bytes)   callee is too large
<writer thread='139652431365888'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
<writer thread='139652429260544'/>
                              @ 29   java.io.BufferedInputStream::getBufIfOpen (21 bytes)
                                @ 15   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
   6083  294       3       sun.reflect.ReflectionFactory::langReflectAccess (15 bytes)
                              @ 7   java.lang.reflect.Modifier::isPublic (12 bytes)
   6107  299       3       java.lang.AbstractStringBuilder::append (40 bytes)
                              @ 11   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   callee is too large
                                @ 20   java.util.Arrays::copyOf (19 bytes)
                                  @ 11   java.lang.Math::min (11 bytes)
<writer thread='139652431365888'/>
   6123  215       3       sun.reflect.UTF8::utf8Length (81 bytes)   made not entrant
   6123  307       4       java.lang.AbstractStringBuilder::append (50 bytes)
<writer thread='139652429260544'/>
                                  @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 25   java.lang.System::arraycopy (0 bytes)   intrinsic
   6129  317  s    3       sun.misc.URLClassPath::getNextLoader (88 bytes)
<writer thread='139652430313216'/>
               !              @ 1   sun.reflect.UTF8::encode (191 bytes)   inline (hot)
                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                @ 6   sun.reflect.UTF8::utf8Length (81 bytes)   inline (hot)
                                  @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 16   java.lang.String::charAt (29 bytes)   inline (hot)
                                @ 26   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 7   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (25424/25424 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 14   sun.reflect.ClassFileAssembler::emitShort (24 bytes)   inline (hot)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                   \-&gt; TypeProfile (25424/25424 counts) = sun/reflect/ByteVectorImpl
                                    @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                   \-&gt; TypeProfile (25424/25424 counts) = sun/reflect/ByteVectorImpl
                                    @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
                              @ 29   sun.reflect.ClassFileAssembler::emitByte (11 bytes)   inline (hot)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   inline (hot)
                                 \-&gt; TypeProfile (25424/25424 counts) = sun/reflect/ByteVectorImpl
                                  @ 24   sun.reflect.ByteVectorImpl::resize (44 bytes)   too big
<writer thread='139652431365888'/>
                              @ 10   java.lang.String::length (6 bytes)   inline (hot)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inline (hot)
                                @ 20   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                  @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                              @ 26   java.util.ArrayList::get (11 bytes)
                                @ 2   java.util.ArrayList::rangeCheck (22 bytes)
                                  @ 14   java.util.ArrayList::outOfBoundsMsg (32 bytes)   callee is too large
                                  @ 17  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                                @ 7   java.util.ArrayList::elementData (7 bytes)
              s!m             @ 84   sun.misc.URLClassPath::getLoader (243 bytes)   callee is too large
   6181  319       3       java.util.zip.ZStreamRef::address (5 bytes)
   6182  266       3       java.lang.ClassLoader::getClassLoadingLock (35 bytes)
                              @ 13   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 23   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
   6184  290       3       java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   6185  316       1       java.net.URLStreamHandler::getDefaultPort (2 bytes)
   6185  322       1       java.security.CodeSource::getLocation (5 bytes)
<writer thread='139652431365888'/>
   6201   23       3       java.lang.AbstractStringBuilder::append (50 bytes)   made not entrant
   6204  318       4       java.lang.String::startsWith (72 bytes)
<writer thread='139652429260544'/>
   6205  323       3       java.lang.String::toCharArray (25 bytes)
                              @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
   6208  320       1       java.net.URLClassLoader::access$000 (5 bytes)
   6209  321       1       java.util.zip.ZipCoder::isUTF8 (5 bytes)
   6216  324       3       sun.net.www.ParseUtil::encodePath (336 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 15   java.lang.String::toCharArray (25 bytes)
                                @ 20   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 21   java.lang.String::length (6 bytes)
                              @ 142   java.util.BitSet::get (69 bytes)   callee is too large
                              @ 152   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 193   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 212   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 230   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 252   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 270   sun.net.www.ParseUtil::escape (42 bytes)   callee is too large
                              @ 313   java.lang.System::arraycopy (0 bytes)   intrinsic
                              @ 332   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
<writer thread='139652431365888'/>
   6232   20       3       java.lang.String::startsWith (72 bytes)   made not entrant
<writer thread='139652429260544'/>
   6271  327       3       java.io.UnixFileSystem::normalize (75 bytes)
<writer thread='139652430313216'/>
   6271  222       3       sun.reflect.ClassFileAssembler::emitConstantPoolUTF8 (50 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 1   java.lang.String::length (6 bytes)
                              @ 19   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 44   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
                              @ 69   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
   6281  330   !   3       sun.misc.URLClassPath$JarLoader::getResource (85 bytes)
                              @ 12   sun.misc.MetaIndex::mayContain (51 bytes)   callee is too large
               !              @ 21   sun.misc.URLClassPath$JarLoader::ensureOpen (36 bytes)   callee is too large
                              @ 33  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 42   java.util.jar.JarFile::getJarEntry (9 bytes)
                                @ 2   java.util.jar.JarFile::getEntry (22 bytes)
               !m                 @ 2   java.util.zip.ZipFile::getEntry (101 bytes)   callee is too large
                                  @ 16   java.util.jar.JarFile$JarFileEntry::&lt;init&gt; (11 bytes)
                                    @ 7   java.util.jar.JarEntry::&lt;init&gt; (6 bytes)
                                      @ 2   java.util.zip.ZipEntry::&lt;init&gt; (146 bytes)   callee is too large
               !              @ 54   sun.misc.URLClassPath$JarLoader::checkResource (55 bytes)   callee is too large
                              @ 71   java.util.HashSet::&lt;init&gt; (16 bytes)
                                @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.HashMap::&lt;init&gt; (11 bytes)
                                  @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !              @ 81   sun.misc.URLClassPath$JarLoader::getResource (353 bytes)   callee is too large
   6313  332       3       java.nio.DirectLongBufferU::ix (10 bytes)
   6313  331       3       java.nio.Buffer::checkIndex (22 bytes)
                              @ 16  java/lang/IndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   6315  333       3       java.lang.Character::toUpperCase (6 bytes)
                              @ 1   java.lang.Character::toUpperCase (9 bytes)
                                @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
   6316  334       3       java.lang.Character::toUpperCase (9 bytes)
                              @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                              @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
   6318  335       3       java.lang.CharacterDataLatin1::toUpperCase (53 bytes)
                              @ 4   java.lang.CharacterDataLatin1::getProperties (11 bytes)
   6319  336       3       java.util.Arrays::copyOf (19 bytes)
                              @ 11   java.lang.Math::min (11 bytes)
                              @ 14   java.lang.System::arraycopy (0 bytes)   intrinsic
   6345  338   !   3       java.net.URL::&lt;init&gt; (543 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 33   java.lang.System::getSecurityManager (4 bytes)
                              @ 46   java.net.URL::checkSpecifyHandler (8 bytes)
                                @ 4   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 50   java.lang.String::length (6 bytes)
                              @ 65   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 89   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 111   java.lang.String::regionMatches (149 bytes)   callee is too large
                              @ 123   java.lang.String::length (6 bytes)
                              @ 132   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 162   java.lang.String::charAt (29 bytes)
<writer thread='139652430313216'/>
   6360  339       4       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)
<writer thread='139652431365888'/>
   6361  340       4       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)
<writer thread='139652429260544'/>
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139652431365888'/>
                              @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                              @ 185   java.lang.String::substring (79 bytes)   callee is too large
                              @ 188   java.lang.String::toLowerCase (8 bytes)
<writer thread='139652431365888'/>
   6363   21       3       java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   made not entrant
<writer thread='139652429260544'/>
                                @ 1   java.util.Locale::getDefault (4 bytes)
<writer thread='139652430313216'/>
                              @ 15   sun.misc.Unsafe::putObjectVolatile (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                                @ 4   java.lang.String::toLowerCase (439 bytes)   callee is too large
<writer thread='139652430313216'/>
   6365  102       3       java.util.concurrent.ConcurrentHashMap::setTabAt (19 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 196   java.net.URL::isValidProtocol (78 bytes)   callee is too large
                              @ 242   java.lang.String::equalsIgnoreCase (48 bytes)   callee is too large
                              @ 270   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 358   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 363   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 368   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 371   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 374   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
               !m             @ 386   java.net.URL::getURLStreamHandler (313 bytes)   callee is too large
                              @ 402   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 407   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 414   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 417   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 420   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
                              @ 434   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 452   java.lang.String::substring (79 bytes)   callee is too large
                              @ 504   java.net.URLStreamHandler::parseURL (1193 bytes)   no static binding
                              @ 523   java.lang.Throwable::getMessage (5 bytes)
                              @ 526   java.net.MalformedURLException::&lt;init&gt; (6 bytes)   not inlineable
              s               @ 535   java.lang.Throwable::initCause (64 bytes)   no static binding
   6556  344       3       java.lang.String::regionMatches (149 bytes)
                              @ 107   java.lang.Character::toUpperCase (6 bytes)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 114   java.lang.Character::toUpperCase (6 bytes)
                                @ 1   java.lang.Character::toUpperCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toUpperCase (0 bytes)   no static binding
                              @ 131   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
                              @ 136   java.lang.Character::toLowerCase (6 bytes)
                                @ 1   java.lang.Character::toLowerCase (9 bytes)
                                  @ 1   java.lang.CharacterData::of (120 bytes)   callee is too large
                                  @ 5   java.lang.CharacterData::toLowerCase (0 bytes)   no static binding
   6602  343       3       java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)
                              @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   intrinsic
                              @ 58  java/util/concurrent/ThreadLocalRandom::getProbe (not loaded)   not inlineable
                              @ 91   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   intrinsic
                              @ 115   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
                              @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)
                                @ 1   java.lang.Integer::numberOfLeadingZeros (76 bytes)   callee is too large
                              @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
               !m             @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   callee is too large
                              @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
               !m             @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   callee is too large
                              @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   callee is too large
               !              @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (487 bytes)   callee is too large
   6621  329       3       java.lang.String::equalsIgnoreCase (48 bytes)
                              @ 36   java.lang.String::regionMatches (149 bytes)   callee is too large
   6623  337       3       java.lang.ThreadLocal::getMap (5 bytes)
<writer thread='139652431365888'/>
   6623  346 %     4       sun.nio.cs.UTF_8$Encoder::encode @ 20 (359 bytes)
<writer thread='139652429260544'/>
   6623  341       3       java.util.ArrayList$Itr::hasNext (20 bytes)
                              @ 8   java.util.ArrayList::access$000 (5 bytes)
   6624  342       3       java.util.BitSet::wordIndex (5 bytes)
   6625  325       3       java.util.WeakHashMap::maskNull (12 bytes)
   6645  347  s!   3       java.net.URLStreamHandler::getHostAddress (54 bytes)
                              @ 13   java.net.URL::getHost (5 bytes)
                              @ 24   java.lang.String::equals (81 bytes)   callee is too large
                              @ 34   java.net.InetAddress::getByName (7 bytes)
                                @ 1   java.net.InetAddress::getAllByName (6 bytes)
<writer thread='139652431365888'/>
<writer thread='139652429260544'/>
                                  @ 2   java.net.InetAddress::getAllByName (387 bytes)   callee is too large
   6660  345       1       java.io.File::getPath (5 bytes)
   6667  348   !   3       sun.misc.URLClassPath$FileLoader::getResource (164 bytes)
                              @ 5   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
                              @ 10   java.net.URL::&lt;init&gt; (8 bytes)
               !                @ 4   java.net.URL::&lt;init&gt; (543 bytes)   callee is too large
                              @ 20   sun.misc.URLClassPath$Loader::getBaseURL (5 bytes)
                              @ 25   sun.net.www.ParseUtil::encodePath (336 bytes)   callee is too large
                              @ 28   java.net.URL::&lt;init&gt; (8 bytes)
               !                @ 4   java.net.URL::&lt;init&gt; (543 bytes)   callee is too large
                              @ 33   java.net.URL::getFile (5 bytes)
                              @ 38   java.net.URL::getFile (5 bytes)
                              @ 41   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
               !              @ 54   sun.misc.URLClassPath::check (123 bytes)   callee is too large
                              @ 60   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 81   java.lang.String::replace (127 bytes)   callee is too large
                              @ 84   java.io.File::&lt;init&gt; (113 bytes)   callee is too large
                              @ 87   java.io.File::getCanonicalFile (21 bytes)
                                @ 1   java.io.File::getCanonicalPath (31 bytes)
                                  @ 1   java.io.File::isInvalid (47 bytes)   callee is too large
                                  @ 13   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                                  @ 24   java.io.UnixFileSystem::resolve (27 bytes)
                                    @ 2   java.io.UnixFileSystem::isAbsolute (13 bytes)
                                      @ 1   java.io.File::getPrefixLength (5 bytes)
                                    @ 9   java.io.File::getPath (5 bytes)
                                    @ 16   java.lang.System::getProperty (25 bytes)   callee is too large
                                    @ 20   java.io.File::getPath (5 bytes)
                                    @ 23   java.io.UnixFileSystem::resolve (103 bytes)   callee is too large
                                  @ 27   java.io.UnixFileSystem::canonicalize (232 bytes)   callee is too large
                                @ 14   java.io.UnixFileSystem::prefixLength (25 bytes)
                                  @ 1   java.lang.String::length (6 bytes)
                                  @ 11   java.lang.String::charAt (29 bytes)   callee is too large
                                @ 17   java.io.File::&lt;init&gt; (20 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 94   java.io.File::getPath (5 bytes)
                              @ 101   java.io.File::getPath (5 bytes)
                              @ 104   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 126   java.lang.String::replace (127 bytes)   callee is too large
                              @ 129   java.io.File::&lt;init&gt; (113 bytes)   callee is too large
                              @ 136   java.io.File::exists (43 bytes)   callee is too large
                              @ 151   sun.misc.URLClassPath$FileLoader$1::&lt;init&gt; (26 bytes)
<writer thread='139652869576448'/>
   6698  353     n 0       java.util.zip.Inflater::inflateBytes (native)   
<writer thread='139652429260544'/>
                                @ 22   sun.misc.Resource::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   6753  355       3       java.lang.Math::max (11 bytes)
   6754  351       3       java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)
                              @ 1   java.lang.ThreadLocal::access$400 (5 bytes)
                              @ 25   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   callee is too large
   6756  357       3       java.net.URL::&lt;init&gt; (8 bytes)
               !              @ 4   java.net.URL::&lt;init&gt; (543 bytes)   callee is too large
   6757  358       3       java.net.URLStreamHandler::setURL (40 bytes)
                              @ 14  java/lang/SecurityException::&lt;init&gt; (not loaded)   not inlineable
                              @ 20   java.net.URL::getProtocol (5 bytes)
               !m             @ 36   java.net.URL::set (114 bytes)   callee is too large
<writer thread='139652869576448'/>
   6769  363     n 0       java.lang.Throwable::fillInStackTrace (native)   
<writer thread='139652429260544'/>
   6799  361       3       java.lang.Class::checkMemberAccess (49 bytes)
                              @ 0   java.lang.System::getSecurityManager (4 bytes)
                              @ 11   java.lang.ClassLoader::getClassLoader (11 bytes)
                                @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 17   java.lang.Class::getClassLoader0 (5 bytes)
                              @ 38   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 45   java.lang.Class::checkPackageAccess (94 bytes)   callee is too large
   6804  362  s    3       java.lang.Throwable::fillInStackTrace (29 bytes)
                              @ 16   java.lang.Throwable::fillInStackTrace (0 bytes)   native method
   6805  360       3       java.lang.reflect.AccessibleObject::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   6824  359   !   3       java.net.URL::set (114 bytes)
                              @ 35   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 40   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 45   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 50   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 53   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
   6896  349       3       sun.net.www.protocol.file.Handler::parseURL (18 bytes)
                              @ 8   java.lang.String::replace (127 bytes)   callee is too large
                              @ 14   java.net.URLStreamHandler::parseURL (1193 bytes)   callee is too large
   6897  350       3       java.net.URLStreamHandler::parseURL (1193 bytes)
                              @ 1   java.net.URL::getProtocol (5 bytes)
                              @ 7   java.net.URL::getAuthority (5 bytes)
                              @ 13   java.net.URL::getUserInfo (5 bytes)
                              @ 19   java.net.URL::getHost (5 bytes)
                              @ 25   java.net.URL::getPort (5 bytes)
                              @ 31   java.net.URL::getPath (5 bytes)
                              @ 37   java.net.URL::getQuery (5 bytes)
                              @ 43   java.net.URL::getRef (5 bytes)
                              @ 63   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 101   java.lang.String::substring (79 bytes)   callee is too large
                              @ 121   java.lang.String::substring (79 bytes)   callee is too large
                              @ 138   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 150   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 162   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 174   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 204   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 216   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 231   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 252   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 277   java.lang.String::substring (79 bytes)   callee is too large
                              @ 289   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 306   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 326   java.lang.String::substring (79 bytes)   callee is too large
                              @ 337   java.lang.String::substring (56 bytes)   callee is too large
                              @ 355   java.lang.String::length (6 bytes)
                              @ 364   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 376   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 397   java.lang.String::substring (79 bytes)   callee is too large
                              @ 407   java.lang.String::substring (79 bytes)   callee is too large
                              @ 410   sun.net.util.IPAddressUtil::isIPv6LiteralAddress (13 bytes)
                                @ 1   sun.net.util.IPAddressUtil::textToNumericFormatV6 (500 bytes)   callee is too large
                              @ 424   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 429   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 434   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 437   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 440   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 449   java.lang.String::length (6 bytes)
                              @ 465   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 478   java.lang.String::length (6 bytes)
                              @ 494   java.lang.String::substring (56 bytes)   callee is too large
                              @ 497   java.lang.Integer::parseInt (7 bytes)
                                @ 3   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 513   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 518   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 523   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 526   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 529   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 544   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 549   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 554   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 557   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 560   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 568   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
                              @ 583   java.lang.String::length (6 bytes)
                              @ 599   java.lang.String::substring (56 bytes)   callee is too large
                              @ 602   java.lang.Integer::parseInt (7 bytes)
                                @ 3   java.lang.Integer::parseInt (261 bytes)   callee is too large
                              @ 612   java.lang.String::substring (79 bytes)   callee is too large
                              @ 638   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 643   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 648   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 651   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 654   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 668   java.lang.String::length (6 bytes)
                              @ 695   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 707   java.lang.String::substring (79 bytes)   callee is too large
                              @ 722   java.lang.String::length (6 bytes)
                              @ 735   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 763   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 773   java.lang.String::substring (79 bytes)   callee is too large
                              @ 776   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 781   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 788   java.lang.String::substring (79 bytes)   callee is too large
                              @ 791   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 794   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 820   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 825   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 832   java.lang.String::substring (79 bytes)   callee is too large
                              @ 835   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 838   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 860   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 877   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 885   java.lang.String::substring (79 bytes)   callee is too large
                              @ 888   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 893   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 896   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 919   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 932   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 940   java.lang.String::substring (79 bytes)   callee is too large
                              @ 943   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 952   java.lang.String::substring (56 bytes)   callee is too large
                              @ 955   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 958   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 975   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 997   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 1012   java.lang.String::indexOf (25 bytes)
                                @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1022   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 1030   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1033   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1042   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1045   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 1048   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 1072   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1082   java.lang.String::indexOf (7 bytes)
                                @ 3   java.lang.String::indexOf (25 bytes)
                                  @ 21   java.lang.String::indexOf (166 bytes)   inlining prohibited by policy
                              @ 1095   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 1111   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1123   java.lang.String::startsWith (7 bytes)
                                @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1131   java.lang.String::length (6 bytes)
                              @ 1141   java.lang.String::substring (56 bytes)   callee is too large
                              @ 1150   java.lang.String::endsWith (17 bytes)
                                @ 13   java.lang.String::startsWith (72 bytes)   callee is too large
                              @ 1161   java.lang.String::length (6 bytes)
                              @ 1166   java.lang.String::substring (79 bytes)   callee is too large
                              @ 1189   java.net.URLStreamHandler::setURL (40 bytes)   callee is too large
<writer thread='139652431365888'/>
   7048  372       4       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)
                              @ 14   java.lang.Math::min (11 bytes)   (intrinsic)
   7067  192       3       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)   made not entrant
<writer thread='139652869576448'/>
   7457  384     n 0       java.lang.System::identityHashCode (native)   (static)
<writer thread='139652421654272'/>
   7522  391     n 0       java.lang.Thread::currentThread (native)   (static)
<writer thread='139652430313216'/>
   7707  402       4       java.io.ObjectStreamClass::requireInitialized (18 bytes)
   7709  260       3       java.io.ObjectStreamClass::requireInitialized (18 bytes)   made not entrant
<writer thread='139652421654272'/>
   7790  405     n 0       sun.misc.Unsafe::compareAndSwapInt (native)   
<writer thread='139652869576448'/>
   7883  408     n 0       sun.misc.Unsafe::getObject (native)   
<writer thread='139652431365888'/>
   7999  426       4       java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)
<writer thread='139652430313216'/>
   8001  427       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)
<writer thread='139652431365888'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652430313216'/>
                              @ 1   java.lang.String::length (6 bytes)   inline (hot)
                              @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139652429260544'/>
   8104  388       2       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)
                              @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   native method
   8133  364       3       java.lang.String::compareTo (78 bytes)
                              @ 14   java.lang.Math::min (11 bytes)
   8136  390       2       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                              @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   8146  389       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                              @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   8158  392       3       java.io.Bits::putInt (36 bytes)
<writer thread='139652869576448'/>
   8161  429     n 0       java.lang.Class::isInstance (native)   
<writer thread='139652429260544'/>
   8164  387       2       java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                              @ 1   java.lang.System::identityHashCode (0 bytes)   native method
   8174  438       3       java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 77   sun.misc.Unsafe::getObject (0 bytes)   intrinsic
                              @ 88  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   8187  432   !   3       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)
                              @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 15   java.lang.Class::isInstance (0 bytes)   intrinsic
                              @ 25   java.lang.ClassCastException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                                @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                  @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
                              @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)
                              @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   callee is too large
                              @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   callee is too large
                              @ 90   java.io.ObjectStreamClass::getFields (22 bytes)
                              @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)
                              @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   callee is too large
        
<writer thread='139652431365888'/>
   8265  447       4       java.io.Bits::putInt (36 bytes)
   8268  392       3       java.io.Bits::putInt (36 bytes)   made not entrant
   8269  448       4       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
<writer thread='139652430313216'/>
   8269  446       4       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)
                              @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
<writer thread='139652869576448'/>
   8278  454     n 0       sun.misc.Unsafe::getBoolean (native)   
<writer thread='139652431365888'/>
                              @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                 @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                 \-&gt; TypeProfile (2762/2762 counts) = java/io/BufferedOutputStream
                                  @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652430313216'/>
   8309  388       2       java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   made not entrant
   8310  449       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
<writer thread='139652429260544'/>
                      @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)
               !              @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
<writer thread='139652430313216'/>
   8338  389       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   made not entrant
   8365  461       4       java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                              @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
   8367  387       2       java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   made not entrant
<writer thread='139652429260544'/>
   8384  435       3       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 187   sun.misc.Unsafe::getByte (0 bytes)   intrinsic
                              @ 203   sun.misc.Unsafe::getChar (0 bytes)   intrinsic
                              @ 206   java.io.Bits::putChar (16 bytes)
                              @ 293   sun.misc.Unsafe::getDouble (0 bytes)   intrinsic
                              @ 296   java.io.Bits::putDouble
<writer thread='139652430313216'/>
   8387  462       4       java.lang.ref.SoftReference::get (29 bytes)
                              @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
   8390  208       3       java.lang.ref.SoftReference::get (29 bytes)   made not entrant
<writer thread='139652431365888'/>
   8392  390       2       java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   made not entrant
<writer thread='139652429260544'/>
 (10 bytes)
                                @ 3   java.lang.Double::doubleToLongBits (33 bytes)   callee is too large
                                @ 6   java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 257   sun.misc.Unsafe::getFloat (0 bytes)   intrinsic
                              @ 260   java.io.Bits::putFloat (10 bytes)
                                @ 3   java.lang.Float::floatToIntBits (26 bytes)
                                  @ 1   java.lang.Float::floatToRawIntBits (0 bytes)   intrinsic
                                @ 6   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 239   sun.misc.Unsafe::getInt (0 bytes)   intrinsic
                              @ 242   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 275   sun.misc.Unsafe::getLong (0 bytes)   intrinsic
                              @ 278   java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 221   sun.misc.Unsafe::getShort (0 bytes)   intrinsic
                              @ 224   java.io.Bits::putShort (16 bytes)
<writer thread='139652431365888'/>
   8425  467       4       java.lang.ref.Reference::&lt;init&gt; (25 bytes)
<writer thread='139652429260544'/>
                              @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   intrinsic
                              @ 172   java.io.Bits::putBoolean (14 bytes)
                              @ 306  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139652431365888'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
   8440   75       3       java.lang.ref.Reference::&lt;init&gt; (25 bytes)   made not entrant
<writer thread='139652429260544'/>
   8450  465   !   3       java.io.ObjectOutputStream::writeSerialData (221 bytes)
                              @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)
                                @ 9   java.io.ObjectStreamClass::getClassDataLayout0 (296 bytes)   callee is too large
                              @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 15   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
               !              @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   callee is too large
                              @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)
                              @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)
               !              @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   callee is too large
   8513  394       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)
<writer thread='139652430313216'/>
   8534  468   !   4       java.lang.ref.ReferenceQueue::poll (28 bytes)
   8535  197   !   3       java.lang.ref.ReferenceQueue::poll (28 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 21   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 42   java.io.DataOutputStream::writeInt (65 bytes)   callee is too large
   8559  393  s    2       java.io.BufferedOutputStream::write (67 bytes)
                              @ 10   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 39   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 53   java.lang.System::arraycopy (0 bytes)   intrinsic
   8604  395   !   2       java.io.ObjectOutputStream::writeObject0 (619 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 24   java.io.ObjectOutputStream$ReplaceTable::lookup (24 bytes)
                                @ 5   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 33   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 51   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 65   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 78   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
<writer thread='139652421654272'/>
   8631  471     n 0       java.lang.Thread::isInterrupted (native)   
<writer thread='139652429260544'/>
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 114   java.io.ObjectOutputStream::writeClass (37 bytes)   callee is too large
                              @ 132   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 150   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 168   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 177   java.lang.Object::getClass (0 bytes)   intrinsic
               !              @ 185   java.io.ObjectStreamClass::lookup (335 bytes)   callee is too large
                              @ 192   java.io.ObjectStreamClass::hasWriteReplaceMethod (17 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
               !              @ 201   java.io.ObjectStreamClass::invokeWriteReplace (73 bytes)   callee is too large
<writer thread='139652430313216'/>
   8672  472       4       java.io.ObjectStreamField::isPrimitive (27 bytes)
                              @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
   8676  258       3       java.io.ObjectStreamField::isPrimitive (27 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 210   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 240   java.io.ObjectOutputStream::replaceObject (2 bytes)
                              @ 287   java.io.ObjectOutputStream$ReplaceTable::assign (33 bytes)
                                @ 5   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                                @ 19   java.io.ObjectOutputStream$ReplaceTable::grow (34 bytes)   callee is too large
                              @ 295   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 313   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 327   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 340   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 358   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 376   java.io.ObjectOutputStream::writeClass (37 bytes)   callee is too large
                              @ 394   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
<writer thread='139652431365888'/>
   8692  473       4       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
                              @ 1   java.lang.Object::hashCode (0 bytes)   (intrinsic, virtual)
                              @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 412   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 430   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 448   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
                              @ 456   java.lang.Class::isArray (0 bytes)   native method
               !              @ 467   java.io.ObjectOutputStream::writeArray (611 bytes)   callee is too large
                              @ 488   java.io.ObjectOutputStream::writeEnum (63 bytes)   callee is too large
               !              @ 506   java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   callee is too large
                              @ 587   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 565   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 568  java/io/NotSerializableException::&lt;init&gt; (not loaded)   not inlineable
                              @ 611   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
<writer thread='139652431365888'/>
   8725  311       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)   made not entrant
<writer thread='139652430313216'/>
   8726  475       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)
                              @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
   8731  394       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   made not entrant
   8743  476   !   4       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)
<writer thread='139652431365888'/>
   8756  477       4       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)
                              @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                              @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                              @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                              @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                              @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                              @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                              @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                              @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                              @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                              @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                              @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                @ 6   java.io.Bits::putLong (86 bytes)   too big
                              @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                              @ 206   java.io.Bits::putChar (16 bytes)   never executed
                              @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
   8878  396       2       java.io.ObjectOutputStream$ReplaceTable::lookup (24 bytes)
                              @ 5   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
<writer thread='139652431365888'/>
   8930  435       3       java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   made not entrant
   8930  478       4       java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)
<writer thread='139652429260544'/>
   8931  403       2       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
   8932  404       2       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)
                              @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   callee is too large
                              @ 36   java.io.OutputStream::write (79 bytes)   no static binding
   8933  407       2       java.io.ObjectStreamClass::forClass (52 bytes)
                              @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 13   java.lang.System::getSecurityManager (4 bytes)
                              @ 19   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 24   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 31   java.lang.Class::getClassLoader (28 bytes)
                                @ 1   java.lang.Class::getClassLoader0 (5 bytes)
                                @ 11   java.lang.System::getSecurityManager (4 bytes)
                                @ 20   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                                @ 23   java.lang.ClassLoader::checkClassLoaderPermission (29 bytes)
                                  @ 0   java.lang.System::getSecurityManager (4 bytes)
                                  @ 9   java.lang.ClassLoader::getClassLoader (11 bytes)
                                    @ 7   java.lang.Class::getClassLoader0 (5 bytes)
                                  @ 15   java.lang.ClassLoader::needsClassLoaderPermissionCheck (27 bytes)
<writer thread='139652431365888'/>
                              @ 77   sun.misc.Unsafe::getObject (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                                    @ 15   java.lang.ClassLoader::isAncestor (20 bytes)
                                  @ 25   java.lang.SecurityManager::checkPermission (5 bytes)   not inlineable
                              @ 34   sun.reflect.misc.ReflectUtil::needsPackageAccessCheck (31 bytes)
                                @ 19   sun.reflect.misc.ReflectUtil::isAncestor (20 bytes)
                                  @ 3   java.lang.ClassLoader::getParent (32 bytes)   callee is too large
                              @ 44   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)
<writer thread='139652430313216'/>
                              @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 15   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                              @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)   accessor
                              @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   inline (hot)
                                  @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                                  @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                                  @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                                  @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                                  @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                  @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                                  @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                  @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                                  @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                                  @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                                  @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                                  @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                    @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                    @ 6   java.io.Bits::putLong (86 bytes)   too big
                                  @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                                  @ 206   java.io.Bits::putChar (16 bytes)   never executed
                                  @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                              @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   inline (hot)
                                @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (5383/5383 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                 @ 23   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                 \-&gt; TypeProfile (5119/5119 counts) = java/io/BufferedOutputStream
                                  @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 90   java.io.ObjectStreamClass::getFields (22 bytes)   inline (hot)
                              @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)   accessor
                              @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   inline (hot)
                                  @ 77   sun.misc.Unsafe::getObject (0 bytes)   (intrinsic)
                              @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)   accessor
               !              @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
<writer thread='139652431365888'/>
   8996  438       3       java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   made not entrant
   8997  479  s    4       java.io.BufferedOutputStream::write (67 bytes)
<writer thread='139652429260544'/>
                                @ 1   java.lang.Class::getName (21 bytes)
                                  @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                @ 4   sun.reflect.misc.ReflectUtil::checkPackageAccess (77 bytes)   callee is too large
                                @ 8   sun.reflect.misc.ReflectUtil::isNonPublicProxyClass (51 bytes)   callee is too large
<writer thread='139652431365888'/>
                              @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                                @ 15   sun.reflect.misc.ReflectUtil::checkProxyPackageAccess (50 bytes)   callee is too large
<writer thread='139652431365888'/>
   9016  393  s    2       java.io.BufferedOutputStream::write (67 bytes)   made not entrant
<writer thread='139652429260544'/>
   9035  397       2       java.io.ObjectOutputStream::writeHandle (21 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
   9037  410       2       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
   9038  383       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
   9038  406       2       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)
                              @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   native method
   9041  428       2       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)
                              @ 13   java.io.ObjectOutputStream$HandleTable::growEntries (58 bytes)   callee is too large
<writer thread='139652431365888'/>
   9056  484   !   4       java.io.ObjectOutputStream::writeObject0 (619 bytes)
<writer thread='139652429260544'/>
                              @ 28   java.io.ObjectOutputStream$HandleTable::growSpine (67 bytes)   callee is too large
                              @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   callee is too large
   9066  441       2       java.io.ObjectStreamClass::getFields (22 bytes)
                              @ 8   java.lang.Object::clone (0 bytes)   no static binding
   9074  431       2       java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   9075  433       2       java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
   9089  434       2       java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)
                              @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   callee is too large
   9090  436       2       java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)
                              @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 23   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 42   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 68   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   callee is too large
                              @ 80   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 107   java.lang.Math::min (11 bytes)
                              @ 124   java.lang.System::arraycopy (0 bytes)   intrinsic
   9094  437       2       java.io.ObjectStreamClass::getObjFieldValues (10 bytes)
                              @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   callee is too large
   9095  443       2       java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   9096  440       2       java.io.ObjectOutputStream::writeClassDesc (60 bytes)
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
<writer thread='139652421654272'/>
   9108  488     n 0       sun.misc.Unsafe::getIntVolatile (native)   
<writer thread='139652429260544'/>
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 47   java.io.ObjectOutputStream::writeProxyDesc (136 bytes)   callee is too large
                              @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   callee is too large
   9134  486       1       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
   9134  403       2       java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   made not entrant
   9134  493       2       java.io.Bits::putShort (16 bytes)
   9135  494       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)
                              @ 12  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
                              @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   callee is too large
                              @ 24   java.lang.String::length (6 bytes)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   callee is too large
                              @ 42   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTFBody (386 bytes)   callee is too large
   9137  489       3       java.io.ObjectOutputStream::writeByte (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
   9139  490       3       java.io.ObjectOutputStream::writeUTF (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
   9140  491       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                              @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                              @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
   9171  382       1       java.io.ObjectStreamClass$WeakClassKey::hashCode (5 bytes)
   9171  439       2       java.io.ObjectStreamClass::processQueue (21 bytes)
               !m             @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                              @ 11   java.util.concurrent.ConcurrentMap::remove (10 bytes)   no static binding
   9174  442   !   2       java.io.ObjectStreamClass::lookup (335 bytes)
                              @ 7   java.lang.Class::isAssignableFrom (0 bytes)   native method
                              @ 15   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
                              @ 21   java.io.ObjectStreamClass::processQueue (21 bytes)
               !m               @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)
                                  @ 17   java.lang.ref.ReferenceQueue::reallyPoll (65 bytes)   callee is too large
                                @ 11   java.util.concurrent.ConcurrentHashMap::remove (8 bytes)
               !m                 @ 4   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 29   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)
                              @ 32   java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)
                                @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   java.lang.System::identityHashCode (0 bytes)   native method
                              @ 40   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   callee is too large
                              @ 57   java.lang.ref.Reference::get (5 bytes)   no static binding
                              @ 75   java.io.ObjectStreamClass$EntryFuture::&lt;init&gt; (5 bytes)
                                @ 1   java.io.ObjectStreamClass$EntryFuture::&lt;init&gt; (19 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 5   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 86   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 100   java.util.concurrent.ConcurrentHashMap::remove (32 bytes)
               !m               @ 20   java.util.concurrent.ConcurrentHashMap::replaceNode (416 bytes)   callee is too large
                              @ 112   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
                              @ 126   java.lang.ref.Reference::get (5 bytes)   no static binding
                              @ 180   java.io.ObjectStreamClass$EntryFuture::getOwner (5 bytes)
                              @ 183   java.lang.Thread::currentThread (0 bytes)   intrinsic
              s!              @ 197   java.io.ObjectStreamClass$EntryFuture::get (46 bytes)   callee is too large
               !              @ 212   java.io.ObjectStreamClass::&lt;init&gt; (260 bytes)   callee is too large
              s               @ 230   java.io.ObjectStreamClass$EntryFuture::set (23 bytes)
                                @ 18   java.lang.Object::notifyAll (0 bytes)   native method
                              @ 246   java.lang.ref.SoftReference::&lt;init&gt; (13 bytes)
                                @ 2   java.lang.ref.Reference::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 249   java.util.concurrent.ConcurrentHashMap::put (8 bytes)
               !m               @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   callee is too large
<writer thread='139652430313216'/>
   9219  432   !   3       java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   made not entrant
<writer thread='139652429260544'/>
              s!              @ 260   java.io.ObjectStreamClass$EntryFuture::get (46 bytes)   callee is too large
<writer thread='139652430313216'/>
   9229  497       4       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)
<writer thread='139652429260544'/>
                              @ 315   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 320   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 325   java.lang.StringBuilder::append (9 bytes)
                                @ 2   java.lang.String::valueOf (14 bytes)
                                  @ 10   java.lang.Object::toString (36 bytes)   no static binding
                                @ 5   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 328   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 331  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
<writer thread='139652430313216'/>
                              @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s               @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                               \-&gt; TypeProfile (6045/6045 counts) = java/io/BufferedOutputStream
                                @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
   9272  404       2       java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   made not entrant
   9272  510       4       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)
                              @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
   9289  406       2       java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   made not entrant
   9292  511       4       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)
<writer thread='139652429260544'/>
   9295  507       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
   9295  410       2       java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   made not entrant
   9295  450       2       java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)
                              @ 15   java.lang.ref.Reference::get (5 bytes)   intrinsic
                              @ 28   java.lang.ref.Reference::get (5 bytes)   intrinsic
   9297  452       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   9298  430       2       java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)
                              @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 8   java.lang.System::identityHashCode (0 bytes)   native method
<writer thread='139652430313216'/>
                              @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
   9338  385       1       java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
   9338  386       1       java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
   9339  466       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   9339  459       2       java.io.ObjectStreamClass::isExternalizable (9 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
   9347  460       2       java.io.ObjectStreamClass::getClassDataLayout (20 bytes)
                              @ 9   java.io.ObjectStreamClass::getClassDataLayout0 (296 bytes)   callee is too large
<writer thread='139652430313216'/>
   9350  428       2       java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   made not entrant
   9402  513       4       java.io.ObjectOutputStream::writeClassDesc (60 bytes)
<writer thread='139652429260544'/>
   9406  463   !   2       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)
                              @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                                @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                  @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
                              @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 117   java.io.ObjectStreamClass::isProxy (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
               !              @ 128   java.io.ObjectOutputStream::writeExternalData (137 bytes)   callee is too large
               !              @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   callee is too large
   9440  464       2       java.io.ObjectStreamClass::checkSerialize (20 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 15   java.io.ObjectStreamClass$ExceptionInfo::newInvalidClassException (16 bytes)
                                @ 12  java/io/InvalidClassException::&lt;init&gt; (not loaded)   not inlineable
   9456  469       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryRelease (8 bytes)   no static binding
                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
   9466  470       3       java.lang.Thread::interrupted (8 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
   9479  474       3       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 7   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
                              @ 21   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   9484  480       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   9486  481       3       java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   9488  482       3       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   callee is too large
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
   9498  495       3       java.util.AbstractList::&lt;init&gt; (10 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139652869576448'/>
   9503  532     n 0       java.net.SocketOutputStream::socketWrite0 (native)   
<writer thread='139652429260544'/>
   9504  485       3       java.util.Arrays::copyOf (46 bytes)
                              @ 17   java.lang.Class::getComponentType (0 bytes)   native method
                              @ 21   java.lang.reflect.Array::newInstance (6 bytes)
                                @ 2   java.lang.reflect.Array::newArray (0 bytes)   native method
                              @ 38   java.lang.Math::min (11 bytes)
                              @ 41   java.lang.System::arraycopy (0 bytes)   intrinsic
   9516  500       3       java.util.Arrays::copyOf (13 bytes)
                              @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                              @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
   9521  498       3       java.util.ArrayList::&lt;init&gt; (12 bytes)
                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   9532  499       3       java.io.Bits::putLong (86 bytes)
   9542  496       3       java.util.ArrayList::iterator (9 bytes)
                              @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   9546  502       3       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   9557  537       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   9558  452       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   made not entrant
   9558  501       3       java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
   9560  487       3       sun.misc.Unsafe::getAndAddInt (27 bytes)
                              @ 3   sun.misc.Unsafe::getIntVolatile (0 bytes)   intrinsic
                              @ 18   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   9565  503       3       java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   9572  504       3       java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
<writer thread='139652430313216'/>
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                  @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 22   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   already compiled into a medium method
                                @ 36   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                @ 44   java.io.ObjectOutputStream::writeClassDescriptor (6 bytes)   inline (hot)
                                  @ 2   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                @ 48   java.io.ObjectStreamClass::forClass (52 bytes)   too big
                                @ 57   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                @ 66   java.io.ObjectOutputStream::isCustomSubclass (21 bytes)   inline (hot)
                                  @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                  @ 4   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                    @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                    @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                  @ 9   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                    @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                    @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                @ 73   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)   never executed
                                @ 78   java.io.ObjectOutputStream::annotateClass (1 bytes)   inline (hot)
                                @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 101   java.io.ObjectStreamClass::getSuperDesc (9 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 105   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   too big
<writer thread='139652429260544'/>
   9581  512       3       java.util.ArrayList::grow (45 bytes)
                              @ 28   java.util.ArrayList::hugeCapacity (26 bytes)
                                @ 8   java.lang.OutOfMemoryError::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 38   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
   9590  539       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   9595  466       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   made not entrant
   9596  505       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
<writer thread='139652869576448'/>
   9614  542     n 0       java.lang.Class::getComponentType (native)   
<writer thread='139652429260544'/>
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
   9628  506       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                              @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
   9637  508       3       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
                              @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
   9642  515       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
   9655  516   !   3       java.io.ObjectOutputStream::writeObject (38 bytes)
                              @ 9   java.io.ObjectOutputStream::writeObjectOverride (1 bytes)
               !              @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
               !              @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   callee is too large
   9660  517       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   callee is too large
   9670  518       3       java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                              @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)
                              @ 53   java.lang.Error::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
   9690  525       3       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
   9692  520   !   3       java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)
   9693  522   !   3       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)
<writer thread='139652430313216'/>
   9696  440       2       java.io.ObjectOutputStream::writeClassDesc (60 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 33   java.net.AbstractPlainSocketImpl::socketClose (6 bytes)
                                @ 2   java.net.AbstractPlainSocketImpl::socketClose0 (0 bytes)   no static binding
<writer thread='139652430313216'/>
   9703  538       4       java.io.Bits::putLong (86 bytes)
<writer thread='139652869576448'/>
   9709  546     n 0       sun.misc.Unsafe::putObject (native)   
<writer thread='139652429260544'/>
   9714  544       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer::findNodeFromTail (26 bytes)
   9718  547   !   3       java.io.ObjectOutputStream::writeArray (611 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 12   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 28   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 33   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 36   java.lang.Class::getComponentType (0 bytes)   native method
<writer thread='139652430313216'/>
   9722  499       3       java.io.Bits::putLong (86 bytes)   made not entrant
   9726  514       4       java.io.Bits::putShort (16 bytes)
<writer thread='139652429260544'/>
                              @ 43   java.lang.Class::isPrimitive (0 bytes)   native method
                              @ 73   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)   callee is too large
                              @ 116   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 130   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   callee is too large
                              @ 160   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt
<writer thread='139652430313216'/>
<writer thread='139652429260544'/>
 (46 bytes)   callee is too large
                              @ 173   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongs (105 bytes)   callee is too large
<writer thread='139652430313216'/>
   9732  493       2       java.io.Bits::putShort (16 bytes)   made not entrant
   9733  521   !   4       java.io.ObjectStreamClass::lookup (335 bytes)
<writer thread='139652429260544'/>
                              @ 203   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 216   java.io.ObjectOutputStream$BlockDataOutputStream::writeFloats (101 bytes)   callee is too large
                              @ 246   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 259   java.io.ObjectOutputStream$BlockDataOutputStream::writeDoubles (101 bytes)   callee is too large
                              @ 289   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 302   java.io.ObjectOutputStream$BlockDataOutputStream::writeShorts (104 bytes)   callee is too large
                              @ 332   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 345   java.io.ObjectOutputStream$BlockDataOutputStream::writeChars (104 bytes)   callee is too large
                              @ 375   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 388   java.io.ObjectOutputStream$BlockDataOutputStream::writeBooleans (79 bytes)   callee is too large
                              @ 398  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 422   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
               !              @ 533   java.io.ObjectOutputStream::writeObject0 (619 bytes)   callee is too large
   9848  553       1       java.lang.ThreadLocal::getMap (5 bytes)
   9853  337       3       java.lang.ThreadLocal::getMap (5 bytes)   made not entrant
   9854  526       3       java.io.ObjectOutputStream::flush (8 bytes)
                              @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                                @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                                @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   9860  527       3       java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                              @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
             
<writer thread='139652430313216'/>
                              @ 15   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   inline (hot)
                              @ 21   java.io.ObjectStreamClass::processQueue (21 bytes)   inline (hot)
               !m               @ 1   java.lang.ref.ReferenceQueue::poll (28 bytes)   inline (hot)
                              @ 29   java.io.ObjectStreamClass$Caches::access$200 (4 bytes)   inline (hot)
                              @ 32   java.io.ObjectStreamClass$WeakClassKey::&lt;init&gt; (15 bytes)   inline (hot)
                                @ 3   java.lang.ref.WeakReference::&lt;init&gt; (7 bytes)   inline (hot)
                                  @ 3   java.lang.ref.Reference::&lt;init&gt; (25 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 8   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 40   java.util.concurrent.ConcurrentHashMap::get (162 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass$WeakClassKey::hashCode (5 bytes)   accessor
                                @ 4   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                                @ 34   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                  @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                                @ 73   java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)   inline (hot)
                                  @ 15   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 28   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                @ 149   java.io.ObjectStreamClass$WeakClassKey::equals (42 bytes)   inline (hot)
                                  @ 15   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                  @ 28   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                              @ 57   java.lang.ref.SoftReference::get (29 bytes)   inline (hot)
                                @ 1   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                 @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   9872  528  s    3       java.io.BufferedOutputStream::flush (12 bytes)
                              @ 1   java.io.BufferedOutputStream::flushBuffer (29 bytes)
                                @ 20   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
   9889  523       3       java.io.OutputStream::flush (1 bytes)
   9891  529       3       java.io.BufferedOutputStream::flushBuffer (29 bytes)
                              @ 20   java.io.OutputStream::write (79 bytes)   no static binding
   9902  533       3       java.util.concurrent.TimeUnit::x (27 bytes)
   9905  530       3       java.net.SocketOutputStream::write (8 bytes)
               !              @ 4   java.net.SocketOutputStream::socketWrite (159 bytes)   callee is too large
   9917  531   !   3       java.net.SocketOutputStream::socketWrite (159 bytes)
               !m             @ 71   java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)
                              @ 82   java.net.SocketOutputStream::socketWrite0 (0 bytes)   native method
<writer thread='139652431365888'/>
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (6045/6045 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 24   java.io.ObjectOutputStream$ReplaceTable::lookup (24 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                  @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 33   java.io.ObjectOutputStream::writeNull (10 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 51   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                              @ 65   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                  @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 78   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                  @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                              @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (6045/6045 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 177   java.lang.Object::getClass (0 bytes)   (intrinsic)
               !              @ 185   java.io.ObjectStreamClass::lookup (335 bytes)   hot method too big
                              @ 192   java.io.ObjectStreamClass::hasWriteReplaceMethod (17 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 448   java.io.ObjectOutputStream::writeString (74 bytes)   inline (hot)
                                @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   too big
                                @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   already compiled into a medium method
                                @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   too big
                                @ 61   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 70   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongUTF (29 bytes)   never executed
                              @ 456   java.lang.Class::isArray (0 bytes)   (intrinsic)
               !              @ 467   java.io.ObjectOutputStream::writeArray (611 bytes)   hot method too big
                              @ 488   java.io.ObjectOutputStream::writeEnum (63 bytes)   too big
               !              @ 506   java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   inline (hot)
                                @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                    @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                      @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                  @ 31   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                    @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                      @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                                  @ 38   java.io.ObjectStreamClass::isProxy (9 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                  @ 56   java.io.ObjectOutputStream::writeNonProxyDesc (109 bytes)   inline (hot)
                                    @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 22   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   too big
                                    @ 36   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                    @ 44   java.io.ObjectOutputStream::writeClassDescriptor (6 bytes)   inline (hot)
                                      @ 2   java.io.ObjectStreamClass::writeNonProxy (161 bytes)   too big
                                    @ 48   java.io.ObjectStreamClass::forClass (52 bytes)   too big
                                    @ 57   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                    @ 66   java.io.ObjectOutputStream::isCustomSubclass (21 bytes)   inline (hot)
                                      @ 1   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 4   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                        @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                        @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                      @ 9   java.lang.Class::getClassLoader (28 bytes)   inline (hot)
                                        @ 1   java.lang.Class::getClassLoader0 (5 bytes)   accessor
                                        @ 11   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                    @ 73   sun.reflect.misc.ReflectUtil::checkPackageAccess (19 bytes)   never executed
                                    @ 78   java.io.ObjectOutputStream::annotateClass (1 bytes)   inline (hot)
                                    @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                    @ 96   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                    @ 101   java.io.ObjectStreamClass::getSuperDesc (9 bytes)   inline (hot)
                                      @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                    @ 105   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   too big
                                @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                  @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                    @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                      @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
               !                @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)   inline (hot)
                                  @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                  @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                    @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
               !                  @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   too big
                                  @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                  @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
                                  @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
               !                  @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   inline (hot)
                                    @ 1   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                      @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                      @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                                    @ 15   java.lang.Class::isInstance (0 bytes)   (intrinsic)
                                    @ 30   java.io.ObjectStreamClass::checkDefaultSerialize (20 bytes)   inline (hot)
                                      @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                    @ 34   java.io.ObjectStreamClass::getPrimDataSize (5 bytes)   accessor
                                    @ 70   java.io.ObjectStreamClass::getPrimFieldValues (10 bytes)   inline (hot)
                                      @ 6   java.io.ObjectStreamClass$FieldReflector::getPrimFieldValues (317 bytes)   inline (hot)
                                        @ 169   sun.misc.Unsafe::getBoolean (0 bytes)   (intrinsic)
                                        @ 172   java.io.Bits::putBoolean (14 bytes)   inline (hot)
                                        @ 221   sun.misc.Unsafe::getShort (0 bytes)   (intrinsic)
                                        @ 224   java.io.Bits::putShort (16 bytes)   call site not reached
                                        @ 275   sun.misc.Unsafe::getLong (0 bytes)   (intrinsic)
                                        @ 278   java.io.Bits::putLong (86 bytes)   inline (hot)
                                        @ 239   sun.misc.Unsafe::getInt (0 bytes)   (intrinsic)
                                        @ 242   java.io.Bits::putInt (36 bytes)   inline (hot)
                                        @ 257   sun.misc.Unsafe::getFloat (0 bytes)   (intrinsic)
                                        @ 260   java.io.Bits::putFloat (10 bytes)   never executed
                                        @ 293   sun.misc.Unsafe::getDouble (0 bytes)   (intrinsic)
                                        @ 296   java.io.Bits::putDouble (10 bytes)   inline (hot)
                                          @ 3   java.lang.Double::doubleToLongBits (33 bytes)   (intrinsic)
                                          @ 6   java.io.Bits::putLong (86 bytes)   too big
                                        @ 203   sun.misc.Unsafe::getChar (0 bytes)   (intrinsic)
                                        @ 206   java.io.Bits::putChar (16 bytes)   never executed
                                        @ 187   sun.misc.Unsafe::getByte (0 bytes)   (intrinsic)
                                    @ 85   java.io.ObjectOutputStream$BlockDataOutputStream::write (152 bytes)   inline (hot)
                                      @ 13   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                        @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                         @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                         \-&gt; TypeProfile (6045/6045 counts) = java/io/BufferedOutputStream
                                          @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                       @ 23   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                       \-&gt; TypeProfile (6707/6707 counts) = java/io/BufferedOutputStream
                                        @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 90   java.io.ObjectStreamClass::getFields (22 bytes)   inline (hot)
                                    @ 96   java.io.ObjectStreamClass::getNumObjFields (5 bytes)   accessor
                                    @ 117   java.io.ObjectStreamClass::getObjFieldValues (10 bytes)   inline (hot)
                                      @ 6   java.io.ObjectStreamClass$FieldReflector::getObjFieldValues (99 bytes)   inline (hot)
                                        @ 77   sun.misc.Unsafe::getObject (0 bytes)   (intrinsic)
                                    @ 223   java.io.ObjectStreamField::isUnshared (5 bytes)   accessor
               !                    @ 226   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
                              @ 587   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   inline (hot)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                  @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                   @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                   \-&gt; TypeProfile (6045/6045 counts) = java/io/BufferedOutputStream
                                    @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 611   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
<writer thread='139652429260544'/>
               !m             @ 109   java.net.AbstractPlainSocketImpl::setConnectionResetPending (37 bytes)   callee is too large
                              @ 118   java.net.SocketException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139652430313216'/>
   9929  442   !   2       java.io.ObjectStreamClass::lookup (335 bytes)   made not entrant
   9929  554   !   4       java.io.ObjectOutputStream::writeSerialData (221 bytes)
<writer thread='139652429260544'/>
               !m             @ 127   java.net.AbstractPlainSocketImpl::isClosedOrPending (34 bytes)
                              @ 139   java.net.SocketException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
               !m             @ 152   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   callee is too large
               !m             @ 89   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 34   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 38   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 43   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 47   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 52   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 57   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 60   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 63  java/lang/ArrayIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
   9989  535       3       java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10004  536       3       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
  10005  534   !   3       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)
                              @ 13   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 42   java.io.ObjectOutputStream::reset (49 bytes)   callee is too large
               !              @ 57   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
                              @ 64   java.io.ObjectOutputStream::flush (8 bytes)
<writer thread='139652430313216'/>
                              @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)   inline (hot)
                              @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
               !              @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   too big
                              @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                              @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
                              @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
               !              @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   already compiled into a big method
<writer thread='139652429260544'/>
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)
                                  @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                                  @ 8   java.io.OutputStream::flush (1 bytes)   no static binding
  10017  540       3       java.util.ArrayList$Itr::next (66 bytes)
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)
                                @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 14   java.util.ArrayList::access$000 (5 bytes)
                              @ 24  java/util/NoSuchElementException::&lt;init&gt; (not loaded)   not inlineable
                              @ 46  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
  10025  575       1       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
<writer thread='139652430313216'/>
  10038  465   !   3       java.io.ObjectOutputStream::writeSerialData (221 bytes)   made not entrant
  10039  557       4       java.io.ObjectStreamField::getTypeCode (9 bytes)
<writer thread='139652429260544'/>
  10039  515       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   made not entrant
  10039  541       3       java.util.ArrayList$Itr::checkForComodification (23 bytes)
                              @ 18  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
  10041  545       3       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                              @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
  10045  401       1       org.openjdk.jmh.results.Result::getRole (5 bytes)
  10047  563   !   3       java.util.concurrent.FutureTask::run (126 bytes)
                              @ 15   java.lang.Thread::currentThread
<writer thread='139652430313216'/>
                              @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
  10049  291       3       java.io.ObjectStreamField::getTypeCode (9 bytes)   made not entrant
  10050  519       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)
<writer thread='139652421654272'/>
  10050  576     n 0       sun.misc.Unsafe::putOrderedInt (native)   
<writer thread='139652429260544'/>
 (0 bytes)   intrinsic
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 42   java.util.concurrent.Callable::call (0 bytes)   not inlineable
                              @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   callee is too large
                              @ 71   java.util.concurrent.FutureTask::set (36 bytes)   callee is too large
                              @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)
                                @ 13   java.lang.Thread::yield (0 bytes)   native method
                              @ 91   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)
                                @ 13   java.lang.Thread::yield (0 bytes)   native method
  10069  581       3       org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)
                              @ 4   java.util.HashMap::get (23 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.reflect.Method::hashCode (19 bytes)
                                    @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                                    @ 4   java.lang.Class::getName (21 bytes)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                                    @ 11   java.lang.reflect.Method::getName (5 bytes)
                                    @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 6   java.util.HashMap::getNode (148 bytes)   callee is too large
                              @ 21   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 27   java.lang.reflect.Method::getName (5 bytes)
                              @ 30   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 35   java.lang.reflect.Method::getParameterTypes (11 bytes)
                                @ 4   java.lang.Object::clone (0 bytes)   no static binding
                              @ 62   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 65   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 72   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 83   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 92   java.util.HashMap::put (13 bytes)
                                @ 2   java.util.HashMap::hash (20 bytes)
                                  @ 9   java.lang.reflect.Method::hashCode (19 bytes)
                                    @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                                    @ 4   java.lang.Class::getName (21 bytes)
                                      @ 11   java.lang.Class::getName0 (0 bytes)   native method
                                    @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                                    @ 11   java.lang.reflect.Method::getName (5 bytes)
                                    @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
                                @ 9   java.util.HashMap::putVal (300 bytes)   callee is too large
<writer thread='139652430313216'/>
                              @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                              @ 24   java.lang.String::length (6 bytes)   inline (hot)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
  10154  494       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   made not entrant
  10159  587       4       java.io.ObjectOutputStream::writeByte (9 bytes)
<writer thread='139652429260544'/>
  10168  589       1       java.io.OutputStream::flush (1 bytes)
  10169  523       3       java.io.OutputStream::flush (1 bytes)   made not entrant
  10172  590       1       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
  10173  536       3       java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)   made not entrant
  10174  593       1       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                              @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
  10176  545       3       java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)   made not entrant
  10176  400       1       org.openjdk.jmh.infra.IterationParamsL2::getCount (5 bytes)
<writer thread='139652430313216'/>
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
  10180  489       3       java.io.ObjectOutputStream::writeByte (9 bytes)   made not entrant
  10180  588       4       java.io.ObjectOutputStream::writeUTF (9 bytes)
<writer thread='139652429260544'/>
  10188  594       3       java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
  10189  550       3       java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
  10201  551       3       java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
  10223  548       3       java.lang.Integer::valueOf (32 bytes)
                              @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10226  549       3       java.lang.Integer::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10235  552       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
  10243  586   !   3       java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)
                              @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
  10257  555       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10276  556       3       java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10285  591       3       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
  10295  564       3       java.util.concurrent.CountDownLatch::countDown (10 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
             
<writer thread='139652430313216'/>
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)   inline (hot)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   inline (hot)
                                  @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                                  @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                    @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   inline (hot)
                                  @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                    @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                                  @ 24   java.lang.String::length (6 bytes)   inline (hot)
                                  @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                    @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                   @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
  10325  399       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
  10325  558       3       org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
  10326  561       3       org.openjdk.jmh.infra.IterationParams::getCount (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getCount (5 bytes)
  10326  560       3       java.lang.reflect.Method::hashCode (19 bytes)
                              @ 1   java.lang.reflect.Method::getDeclaringClass (5 bytes)
                              @ 4   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 7   java.lang.String::hashCode (55 bytes)   callee is too large
                              @ 11   java.lang.reflect.Method::getName (5 bytes)
                              @ 14   java.lang.String::hashCode (55 bytes)   callee is too large
  10335  559       3       java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10338  562       3       java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
  10339  565       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryReleaseShared (8 bytes)   no static binding
                              @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
  10341  599       3       java.io.ObjectOutputStream::writeString (74 bytes)
                              @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                              @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 61   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 70   java.io.ObjectOutputStream$BlockDataOutputStream::writeLongUTF (29 bytes)
                                @ 2   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   callee is too large
                                @ 7   java.lang.String::length (6 bytes)
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   callee is too large
                                @ 25   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTFBody (386 bytes)   callee is too large
<writer thread='139652430313216'/>
  10386  490       3       java.io.ObjectOutputStream::writeUTF (9 bytes)   made not entrant
  10406  597       4       java.lang.Thread::interrupted (8 bytes)
<writer thread='139652429260544'/>
  10413  566       3       java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
<writer thread='139652430313216'/>
                              @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
  10415  567       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 41   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
                              @ 55   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
<writer thread='139652430313216'/>
  10417  470       3       java.lang.Thread::interrupted (8 bytes)   made not entrant
  10419  601       4       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
<writer thread='139652429260544'/>
  10426  603   !   3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)
                              @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::predecessor (19 bytes)
                                @ 13   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 22   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::setHead (16 bytes)
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::shouldParkAfterFailedAcquire (50 bytes)   callee is too large
                              @ 67   java.util.concurrent.locks.AbstractQueuedSynchronizer::parkAndCheckInterrupt (8 bytes)
                                @ 1   java.util.concurrent.locks.LockSupport::park (23 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 6   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                    @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                  @ 14   sun.misc.Unsafe::park (0 bytes)   native method
                                  @ 19   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                    @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 87   java.util.concurrent.locks.AbstractQueuedSynchronizer::cancelAcquire (154 bytes)   callee is too large
<writer thread='139652430313216'/>
  10437  474       3       java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   made not entrant
  10437  596       4       java.util.ArrayList$Itr::hasNext (20 bytes)
                              @ 8   java.util.ArrayList::access$000 (5 bytes)   accessor
  10448  341       3       java.util.ArrayList$Itr::hasNext (20 bytes)   made not entrant
  10449  543   !   4       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)
<writer thread='139652429260544'/>
  10455  580       3       org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                              @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                              @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m               @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
  10457  568       3       java.util.concurrent.CountDownLatch::await (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
  10460  582       3       org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10483  571       3       java.util.concurrent.TimeUnit$1::convert (6 bytes)
                              @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
  10484  583       3       org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m             @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
  10484  569       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                     
<writer thread='139652421654272'/>
  10485  610     n 0       sun.reflect.Reflection::getClassAccessFlags (native)   (static)
<writer thread='139652429260544'/>
           @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquireShared (8 bytes)   no static binding
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
  10489  611       3       java.io.ObjectStreamClass::writeNonProxy (161 bytes)
                              @ 5   java.io.ObjectOutputStream::writeUTF (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                  @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                  @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 10   java.io.ObjectStreamClass::getSerialVersionUID (33 bytes)
                                @ 13   java.io.ObjectStreamClass$2::&lt;init&gt; (10 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   java.security.AccessController::doPrivileged (0 bytes)   native method
                                @ 29   java.lang.Long::longValue (5 bytes)
                              @ 13   java.io.ObjectOutputStream::writeLong (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   callee is too large
                              @ 31   java.io.ObjectOutputStream::getProtocolVersion (5 bytes)
                              @ 88   java.io.ObjectOutputStream::writeByte (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 97   java.io.ObjectOutputStream::writeShort (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   callee is too large
                              @ 122   java.io.ObjectStreamField::getTypeCode (9 bytes)
                                @ 5   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 125   java.io.ObjectOutputStream::writeByte (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 131   java.io.ObjectStreamField::getName (5 bytes)
                              @ 134   java.io.ObjectOutputStream::writeUTF (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (11 bytes)
                                  @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   callee is too large
                                  @ 7   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   callee is too large
                              @ 139   java.io.ObjectStreamField::isPrimitive (27 bytes)
                                @ 5   java.lang.String::charAt (29 bytes)
                                  @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 148   java.io.ObjectStreamField::getTypeString (16 bytes)
                                @ 1   java.io.ObjectStreamField::isPrimitive (27 bytes)
                                  @ 5   java.lang.String::charAt (29 bytes)   callee is too large
                              @ 151   java.io.ObjectOutputStream::writeTypeString (40 bytes)   callee is too large
<writer thread='139652421654272'/>
  10525  614     n 0       sun.misc.Unsafe::park (native)   
<writer thread='139652869576448'/>
  10525  617     n 0       sun.misc.Unsafe::unpark (native)   
<writer thread='139652429260544'/>
  10541  584   !   3       java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                              @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)
                              @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
  10574  570       3       java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
  10575  592       3       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
  10576  572       3       org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                              @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
  10577  573       3       java.util.concurrent.FutureTask::set (36 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   intrinsic
                              @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   callee is too large
  10579  585       3       java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)
  10579  577       3       java.util.concurrent.FutureTask::finishCompletion (74 bytes)
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 39   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                              @ 65   java.util.concurrent.FutureTask::done (1 bytes)   no static binding
  10583  578       3       java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !                @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
<writer thread='139652430313216'/>
                              @ 74   java.io.ObjectStreamClass::checkSerialize (20 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 83   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 89   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   already compiled into a big method
                              @ 105   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                  @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 110   java.io.ObjectStreamClass::isExternalizable (9 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
               !              @ 137   java.io.ObjectOutputStream::writeSerialData (221 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamClass::getClassDataLayout (20 bytes)   inline (hot)
                                @ 26   java.io.ObjectStreamClass::hasWriteObjectMethod (17 bytes)   inline (hot)
                                  @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 98   java.io.SerialCallbackContext::&lt;init&gt; (22 bytes)   inline (hot)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                  @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 109   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
               !                @ 117   java.io.ObjectStreamClass::invokeWriteObject (79 bytes)   too big
                                @ 125   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)   already compiled into a medium method
                                @ 135   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                @ 142   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
                                @ 173   java.io.SerialCallbackContext::setUsed (6 bytes)   inline (hot)
               !                @ 211   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   already compiled into a big method
<writer thread='139652429260544'/>
  10599  579       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
  10604  608       3       java.lang.Long::longValue (5 bytes)
  10604  612       3       java.io.ObjectStreamClass::getSerialVersionUID (33 bytes)
                              @ 13   java.io.ObjectStreamClass$2::&lt;init&gt; (10 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 16   java.security.AccessController::doPrivileged (0 bytes)   native method
                              @ 29   java.lang.Long::longValue (5 bytes)
  10607  600       3       java.lang.reflect.Method::invoke (62 bytes)
                              @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)
                                @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   native method
                                @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)
                              @ 21   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 36   java.lang.reflect.AccessibleObject::checkAccess (96 bytes)   callee is too large
                              @ 49   java.lang.reflect.Method::acquireMethodAccessor (44 bytes)   callee is too large
                              @ 56   sun.reflect.MethodAccessor::invoke (0 bytes)   not inlineable
  10622  607       3       sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)
                              @ 6   sun.reflect.MethodAccessorImpl::invoke (0 bytes)   no static binding
  10624  605       3       java.util.AbstractSet::&lt;init&gt; (5 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10627  602       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)
                              @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
  10639  606       3       java.lang.reflect.Modifier::isPublic (12 bytes)
  10640  615       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)
                              @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
  10653  628       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)
                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
                              @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   intrinsic
  10656  613       3       sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)
                              @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   native method
                              @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)
  10658  604       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)
                              @ 19   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::unlinkCancelledWaiters (67 bytes)   callee is too large
                              @ 31   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 36   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10661  616       3       java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                              @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
  10670  618       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (15 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  10671  625   !   3       java.util.concurrent.locks.AbstractQueuedSynchronizer::fullyRelease (54 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
                              @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryRelease (8 bytes)   no static binding
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
                              @ 36   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
  10675  626       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)
                              @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   callee is too large
  10676  627       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)
                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   callee is too large
                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 40   java.util.concurrent.locks.LockSupport::unpark (12 bytes)
                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
  10689  631       3       java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)
                              @ 22   java.io.Bits::putLong (86 bytes)   callee is too large
                              @ 44   java.io.DataOutputStream::writeLong (118 bytes)   callee is too large
  10690  629       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::checkInterruptWhileWaiting (27 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 11   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferAfterCancelledWait (34 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   callee is too large
                                @ 20   java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)   callee is too large
                                @ 26   java.lang.Thread::yield (0 bytes)   native method
<writer thread='139652430313216'/>
  10710  463   !   2       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   made not entrant
  10711  609       4       java.util.AbstractCollection::&lt;init&gt; (5 bytes)
<writer thread='139652429260544'/>
  10718  648   !   3       org.openjdk.jmh.runner.BenchmarkHandler::runIteration (628 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
                              @ 7   org.openjdk.jmh.infra.IterationParams::getTime (5 bytes)
                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getTime (5 bytes)
                              @ 18   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139652430313216'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
  10721  290       3       java.util.AbstractCollection::&lt;init&gt; (5 bytes)   made not entrant
  10723  622       4       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
<writer thread='139652429260544'/>
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 29   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 14   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 38   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 58   org.openjdk.jmh.infra.Control::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                        @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                          @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 61   org.openjdk.jmh.runner.InfraControl::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                                  @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                    @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
                              @ 95   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::&lt;init&gt; (15 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 105   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 109   org.openjdk.jmh.infra.BenchmarkParams::getTimeout (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeout (5 bytes)
                              @ 115   org.openjdk.jmh.runner.options.TimeValue::convertTo (13 bytes)
                                @ 9   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                  @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
               !              @ 124   org.openjdk.jmh.runner.BenchmarkHandler::startProfilers (58 bytes)   callee is too large
                              @ 131   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 144   java.util.concurrent.ExecutorCompletionService::&lt;init&gt; (52 bytes)   callee is too large
                              @ 179   java.util.concurrent.ExecutorCompletionService::submit (38 bytes)   callee is too large
                              @ 193   org.openjdk.jmh.runner.InfraControl::awaitWarmupReady (5 bytes)
               !                @ 1   org.openjdk.jmh.runner.InfraControlL2::awaitWarmupReady (19 bytes)
                                  @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
<writer thread='139652430313216'/>
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                  @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                  @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                  @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                  @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                  @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                    @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                    @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
<writer thread='139652429260544'/>
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 200   org.openjdk.jmh.infra.BenchmarkParams::getMode (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getMode (5 bytes)
                              @ 203   java.lang.Enum::ordinal (5 bytes)
                              @ 234   org.openjdk.jmh.runner.options.TimeValue::convertTo (13 bytes)
                                @ 9   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                  @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 240   java.util.concurrent.ExecutorCompletionService::poll (15 bytes)
                                @ 6   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
                              @ 256   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 262   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 274   org.openjdk.jmh.runner.InfraControl::announceDone (14 bytes)
                              @ 279   org.openjdk.jmh.runner.InfraControl::awaitWarmdownReady (5 bytes)
               !                @ 1   org.openjdk.jmh.runner.InfraControlL2::awaitWarmdownReady (19 bytes)
<writer thread='139652430313216'/>
  10760  482       3       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   made not entrant
  10764  623       4       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
<writer thread='139652429260544'/>
                                  @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 284   java.util.ArrayList::size (5 bytes)
                              @ 300   java.util.concurrent.TimeUnit$3::toNanos (11 bytes)
                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
                              @ 305   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 309   java.lang.Math::max (12 bytes)
                              @ 321   java.util.concurrent.ExecutorCompletionService::poll (15 bytes)
                                @ 6   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
               !              @ 339   com.sun.proxy.$Proxy0::print (34 bytes)
<writer thread='139652430313216'/>
  10774  591       3       java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)   made not entrant
  10775  651       4       java.util.Arrays::copyOf (46 bytes)
<writer thread='139652429260544'/>
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
                              @ 372   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::access$100 (5 bytes)
               !m             @ 384   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 400   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 417   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
                              @ 431   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 438   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 447   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 457   java.util.Iterator::next (0 bytes)   no static binding
                              @ 469   java.util.concurrent.FutureTask::get (23 bytes)
                                @ 13   java.util.concurrent.FutureTask::awaitDone (171 bytes)   callee is too large
                                @ 19   java.util.concurrent.FutureTask::report (37 bytes)   callee is too large
                              @ 483   org.openjdk.jmh.results.BenchmarkTaskResult::getResults (5 bytes)
                              @ 486   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 496   org.openjdk.jmh.results.BenchmarkTaskResult::getAllOps (5 bytes)
                              @ 506   org.openjdk.jmh.results.BenchmarkTaskResult::getMeasuredOps (5 bytes)
              s               @ 519   java.lang.Throwable::getCause (17 bytes)   no static binding
              s               @ 522   java.lang.Throwable::getCause (17 bytes)   no static binding
              s               @ 525   java.lang.Throwable::getCause (17 bytes)   no static binding
                              @ 542   java.util.List::add (0 bytes)   no static binding
                              @ 559   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
                              @ 580   org.openjdk.jmh.results.IterationResultMetaData::&lt;init&gt; (15 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 583   org.openjdk.jmh.results.IterationResult::&lt;init&gt; (34 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 592   org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
<writer thread='139652430313216'/>
                              @ 38   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 41   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='139652429260544'/>
                                @ 1   java.util.ArrayList::iterator (9 bytes)
                                  @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   java.util.ArrayList$Itr::hasNext (20 bytes)
                                  @ 8   java.util.ArrayList::access$000 (5 bytes)
                                @ 17   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                                @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
               !              @ 600   org.openjdk.jmh.runner.BenchmarkHandler::stopProfilers (66 bytes)   callee is too large
                              @ 605   java.util.List::isEmpty (0 bytes)   no static binding
                              @ 621   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (42 bytes)   not inlineable
<writer thread='139652430313216'/>
  10812  485       3       java.util.Arrays::copyOf (46 bytes)   made not entrant
  10817  598       4       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                              @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease (12 bytes)   inline (hot)
                               \-&gt; TypeProfile (633/11273 counts) = java/util/concurrent/ThreadPoolExecutor$Worker
                               \-&gt; TypeProfile (10640/11273 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                @ 2   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 7   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
  10873  469       2       java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   made not entrant
  10875  657       4       java.util.ArrayList::&lt;init&gt; (12 bytes)
                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)   inline (hot)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
  10889  498       3       java.util.ArrayList::&lt;init&gt; (12 bytes)   made not entrant
  10892  660       4       java.util.ArrayList::iterator (9 bytes)
                              @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
  10917  496       3       java.util.ArrayList::iterator (9 bytes)   made not entrant
  10920  658       4       java.util.ArrayList::ensureCapacityInternal (13 bytes)
                              @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                              @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                  @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                    @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                    @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
  10965  281       3       java.util.ArrayList::ensureCapacityInternal (13 bytes)   made not entrant
  10967  664       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                    @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                    @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                    @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
  11025  505       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   made not entrant
  11025  663       4       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)   inline (hot)
                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)   inline (hot)
                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)   inline (hot)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
  11047  502       3       java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)   made not entrant
  11047  509       4       java.io.ObjectStreamClass::forClass (52 bytes)
                              @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                              @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
  11066  407       2       java.io.ObjectStreamClass::forClass (52 bytes)   made not entrant
  11066  670       4       java.util.Arrays::copyOf (13 bytes)
                              @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                              @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
  11090  500       3       java.util.Arrays::copyOf (13 bytes)   made not entrant
  11090  673       4       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                               \-&gt; TypeProfile (9524/9524 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                  @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                    @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                    @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   executed &lt; MinInliningThreshold times
                                    @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                      @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                  @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
  11126  506       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   made not entrant
  11126  674       4       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)
                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                              @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
  11129  508       3       java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   made not entrant
  11129  669       4       java.util.ArrayList::grow (45 bytes)
                              @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
  11137  512       3       java.util.ArrayList::grow (45 bytes)   made not entrant
  11137  492       4       java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)
                              @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
  11152  678   !   4       java.io.ObjectOutputStream::writeArray (611 bytes)
<writer thread='139652429260544'/>
  11192  668       1       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
  11193  592       3       java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)   made not entrant
  11193  675       3       org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)
                              @ 4   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 30   org.openjdk.jmh.it.ccontrol.CompilerControlInlineActualTest::compilerControlSpecimen (5 bytes)   force inline by CompileOracle
                                @ 1   org.openjdk.jmh.it.ccontrol.CompilerControlInlineActualTest::trampoline (5 bytes)
                                  @ 1   org.openjdk.jmh.it.ccontrol.CompilerControlInlineActualTest::strawMethod (1 bytes)   force inline by CompileOracle
                              @ 40   java.lang.System::nanoTime (0 bytes)   intrinsic
<writer thread='139652430313216'/>
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 12   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   already compiled into a big method
                              @ 28   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                  @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                              @ 33   java.io.ObjectStreamClass::forClass (52 bytes)   inline (hot)
                                @ 10   java.io.ObjectStreamClass::requireInitialized (18 bytes)   inline (hot)
                                @ 13   java.lang.System::getSecurityManager (4 bytes)   inline (hot)
                              @ 36   java.lang.Class::getComponentType (0 bytes)   (intrinsic)
                              @ 43   java.lang.Class::isPrimitive (0 bytes)   (intrinsic)
                              @ 73   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   too big
                              @ 86   java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)   too big
                              @ 422   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
               !              @ 533   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
<writer thread='139652429260544'/>
  11224  676       3       org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
                              @ 1   java.util.Collection::iterator (0 bytes)   no static binding
                              @ 8   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 17   java.util.Iterator::next (0 bytes)   no static binding
                              @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
  11247  630       3       java.io.ObjectOutputStream::writeTypeString (40 bytes)
                              @ 5   java.io.ObjectOutputStream::writeNull (10 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                              @ 16   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   callee is too large
                              @ 27   java.io.ObjectOutputStream::writeHandle (21 bytes)
                                @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   callee is too large
                                @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 36   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
  11259  688       3       java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)
                              @ 4   java.lang.Runnable::run (0 bytes)   not inlineable
  11264  619       3       java.util.ArrayList::isEmpty (13 bytes)
  11268  409       1       java.lang.Boolean::booleanValue (5 bytes)
  11281  632       3       java.lang.Boolean::valueOf (14 bytes)
  11284  633       3       java.util.ArrayList::addAll (54 bytes)
                              @ 1   java.util.Collection::toArray (0 bytes)   no static binding
                              @ 17   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                  @ 10   java.lang.Math::max (11 bytes)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 31   java.lang.System::arraycopy (0 bytes)   intrinsic
  11303  693       3       java.util.concurrent.ExecutorCompletionService$QueueingFuture::&lt;init&gt; (17 bytes)
                              @ 8   java.util.concurrent.FutureTask::&lt;init&gt; (19 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 7   java.util.concurrent.Executors::callable (22 bytes)
                                  @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11329  620       3       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
  11337  634       3       java.util.AbstractQueue::&lt;init&gt; (5 bytes)
                              @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11339  635       3       java.util.ArrayList::toArray (12 bytes)
                              @ 8   java.util.Arrays::copyOf (13 bytes)
                                @ 3   java.lang.Object::getClass (0 bytes)   intrinsic
                                @ 6   java.util.Arrays::copyOf (46 bytes)   callee is too large
  11341  416       1       org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)
<writer thread='139652430313216'/>
  11342  547   !   3       java.io.ObjectOutputStream::writeArray (611 bytes)   made not entrant
  11343  679   !   4       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)
<writer thread='139652429260544'/>
  11346  639       3       java.util.AbstractQueue::add (20 bytes)
                              @ 2   java.util.AbstractQueue::offer (10 bytes)   no static binding
                              @ 16   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
  11352  636       3       java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (7 bytes)
                              @ 3   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)   callee is too large
  11357  640       3       java.util.concurrent.ThreadPoolExecutor$Worker::unlock (7 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)
                                @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryRelease (12 bytes)
                                  @ 2   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                                  @ 7   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   callee is too large
  11371  637       3       java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)
                              @ 1   java.util.AbstractQueue::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 31   java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 42   java.util.concurrent.locks.ReentrantLock::&lt;init&gt; (16 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 9   java.util.concurrent.locks.ReentrantLock$NonfairSync::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.concurrent.locks.ReentrantLock$Sync::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 53   java.util.concurrent.locks.ReentrantLock::newCondition (8 bytes)
                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::newCondition (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::&lt;init&gt; (10 bytes)
                                    @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 67   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 83   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11457  638       3       java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                              @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m               @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
  11466  412       1       org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
  11468  683       3       java.util.concurrent.ExecutorCompletionService::&lt;init&gt; (52 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (7 bytes)
                                @ 3   java.util.concurrent.LinkedBlockingQueue::&lt;init&gt; (94 bytes)   callee is too large
  11476  643       3       java.util.concurrent.TimeUnit$3::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
  11481  414       1       org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)
  11484  415       1       org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)
  11488  728   !   3       java.util.concurrent.LinkedBlockingQueue::take (93 bytes)
                              @ 15   java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
                              @ 19   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::await (98 bytes)   callee is too large
                              @ 38   java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
<writer thread='139652430313216'/>
                              @ 17   java.lang.String::hashCode (55 bytes)   inline (hot)
                               \-&gt; TypeProfile (6550/6798 counts) = java/lang/String
                              @ 20   java.util.concurrent.ConcurrentHashMap::spread (10 bytes)   inline (hot)
                              @ 69   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                              @ 92   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 95   java.util.concurrent.ConcurrentHashMap::casTabAt (20 bytes)   inline (hot)
                                @ 16   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 142   java.util.concurrent.ConcurrentHashMap::tabAt (21 bytes)   inline (hot)
                                @ 14   sun.misc.Unsafe::getObjectVolatile (0 bytes)   (intrinsic)
                               \-&gt; TypeProfile (3132/3132 counts) = java/lang/String
                              @ 192   java.lang.String::equals (81 bytes)   (intrinsic)
                              @ 244   java.util.concurrent.ConcurrentHashMap$Node::&lt;init&gt; (26 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 357   java.util.concurrent.ConcurrentHashMap::addCount (292 bytes)   inline (hot)
                                @ 31   sun.misc.Unsafe::compareAndSwapLong (0 bytes)   (intrinsic)
                                @ 161   java.util.concurrent.ConcurrentHashMap::resizeStamp (13 bytes)   executed &lt; MinInliningThreshold times
                                @ 235   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 246   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                                @ 269   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
               !m               @ 279   java.util.concurrent.ConcurrentHashMap::transfer (832 bytes)   too big
                                @ 283   java.util.concurrent.ConcurrentHashMap::sumCount (48 bytes)   too big
               !                @ 104   java.util.concurrent.ConcurrentHashMap::fullAddCount (487 bytes)   too big
               !              @ 49   java.util.concurrent.ConcurrentHashMap::initTable (115 bytes)   too big
<writer thread='139652429260544'/>
                              @ 43   java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 56   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
<writer thread='139652431365888'/>
  11505  395   !   2       java.io.ObjectOutputStream::writeObject0 (619 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 73   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 63   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 88   java.util.concurrent.LinkedBlockingQueue::signalNotFull (33 bytes)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
<writer thread='139652431365888'/>
  11520  720       4       java.io.ObjectStreamClass::writeNonProxy (161 bytes)
<writer thread='139652429260544'/>
  11543  729   !   3       java.util.concurrent.LinkedBlockingQueue::poll (134 bytes)
                              @ 8   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 27   java.util.concurrent.locks.ReentrantLock::lockInterruptibly (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::tryAcquire (8 bytes)   no static binding
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireInterruptibly (97 bytes)   callee is too large
                              @ 32   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 50   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 62   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::awaitNanos (156 bytes)   callee is too large
                              @ 73   java.util.concurrent.LinkedBlockingQueue::dequeue (32 bytes)
                              @ 80   java.util.concurrent.atomic.AtomicInteger::getAndDecrement (12 bytes)
                                @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   intrinsic
                              @ 95   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)
                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::isHeldExclusively (8 bytes)   no static binding
                                @ 14   java.lang.IllegalMonitorStateException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   callee is too large
                              @ 112   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                              @ 102   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
               !              @ 128   java.util.concurrent.LinkedBlockingQueue::signalNotFull (33 bytes)
                                @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)
                                  @ 4   java.util.concurrent.locks.ReentrantLock$Sync::lock (0 bytes)   no static binding
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   callee is too large
                                @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
                                @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   callee is too large
  11591  739       3       java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::await (98 bytes)
                              @ 0   java.lang.Thread::interrupted (8 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                              @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 15   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::addConditionWaiter (64 bytes)   callee is too large
               !              @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::fullyRelease (54 bytes)   callee is too large
                              @ 35   java.util.concurrent.locks.AbstractQueuedSynchronizer::isOnSyncQueue (33 bytes)
                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer::findNodeFromTail (26 bytes)
                              @ 42   java.util.concurrent.locks.LockSupport::park (23 bytes)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 6   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                  @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                                @ 14   sun.misc.Unsafe::park (0 bytes)   native method
                                @ 19   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                  @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                              @ 47   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::checkInterruptWhileWaiting (27 bytes)
                                @ 0   java.lang.Thread::interrupted (8 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                @ 11   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferAfterCancelledWait (34 bytes)   callee is too large
               !              @ 64   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                              @ 85   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::unlinkCancelledWaiters (67 bytes)   callee is too large
                              @ 94   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::reportInterruptAfterWait (22 bytes)
                                @ 9   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
  11633  740       1       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
  11634  620       3       java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)   made not entrant
  11634  424       1       org.openjdk.jmh.results.IterationResult::getMetadata (5 bytes)
  11635  425       1       org.openjdk.jmh.runner.ForkedRunner::access$000 (5 bytes)
  11636  730       3       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)
  11637  731       3       java.util.concurrent.FutureTask::report (37 bytes)
                              @ 21  java/util/concurrent/CancellationException::&lt;init&gt; (not loaded)   not inlineable
                              @ 33   java.util.concurrent.ExecutionException::&lt;init&gt; (6 bytes)   not inlineable
  11641  644   !   3       org.openjdk.jmh.runner.BaseRunner::runSystemGC (309 bytes)
<writer thread='139652430313216'/>
  11642  190   !   3       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   made not entrant
  11643  710       4       java.util.HashMap::getNode (148 bytes)
<writer thread='139652429260544'/>
                              @ 4   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                  @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)   recursive inlining too deep
                                  @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
                                @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
<writer thread='139652430313216'/>
<writer thread='139652429260544'/>
                              @ 10   java.lang.Boolean::valueOf (14 bytes)
                              @ 13   org.openjdk.jmh.util.Optional::orElse (16 bytes)
                              @ 19   java.lang.Boolean::booleanValue (5 bytes)
                              @ 29   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 35   java.lang.management.ManagementFactory::getGarbageCollectorMXBeans (4 bytes)
                                @ 0   sun.management.ManagementFactoryHelper::getGarbageCollectorMXBeans (66 bytes)   callee is too large
                              @ 38   java.util.List::iterator (0 bytes)   no static binding
                              @ 47   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 57   java.util.Iterator::next (0 bytes)   no static binding
                              @ 69  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
                              @ 88   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 98   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 107   java.util.ArrayList$Itr::hasNext (20 bytes)
                                @ 8   java.util.ArrayList::access$000 (5 bytes)
                              @ 117   java.util.ArrayList$Itr::next (66 bytes)   callee is too large
                              @ 130  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
                              @ 140   java.lang.System::gc (7 bytes)
                                @ 0   java.lang.Runtime::getRuntime (4 bytes)
                                @ 3   java.lang.Runtime::gc (0 bytes)   native method
                              @ 149   java.util.ArrayList::isEmpty (13 bytes)
               !              @ 163   com.sun.proxy.$Proxy0::println (34 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
                              @ 174   java.util.concurrent.TimeUnit::sleep (27 bytes)
                                @ 8   java.util.concurrent.TimeUnit$3::toMillis (2 bytes)
                                @ 15   java.util.concurrent.TimeUnit$3::excessNanos (2 bytes)
                                @ 23   java.lang.Thread::sleep (61 bytes)   callee is too large
                              @ 182   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m             @ 185   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 190   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 198   java.lang.System::nanoTime (0 bytes)   intrinsic
                              @ 204   java.util.concurrent.TimeUnit$1::toMillis (6 bytes)
                              @ 220   java.util.concurrent.TimeUnit::sleep (27 bytes)
                                @ 8   java.util.concurrent.TimeUnit$3::toMillis (2 bytes)
                                @ 15   java.util.concurrent.TimeUnit$3::excessNanos (2 bytes)
                                @ 23   java.lang.Thread::sleep (61 bytes)   callee is too large
                              @ 228   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m             @ 231   java.lang.Thread::interrupt (56 bytes)   callee is too large
                              @ 238   java.util.ArrayList::iterator (9 bytes)
                                @ 5   java.util.ArrayList$Itr::&lt;init&gt; (26 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 247   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 257   java.util.Iterator::next (0 bytes)   no static binding
                              @ 271  java/lang/management/GarbageCollectorMXBean::getCollectionCount (not loaded)   not inlineable
               !              @ 300   com.sun.proxy.$Proxy0::println (34 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                  @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                  @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                   @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                                @ 30   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
<writer thread='139652430313216'/>
  11684  168       3       java.util.HashMap::getNode (148 bytes)   made not entrant
  11685  692   !   4       java.io.ObjectOutputStream::writeObject (38 bytes)
               !              @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
               !              @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   too big
  11689  516   !   3       java.io.ObjectOutputStream::writeObject (38 bytes)   made not entrant
  11689  703       4       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)
                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
  11740  517       3       java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   made not entrant
  11740  724       4       java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                              @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                              @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                              @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                              @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
  11744  518       3       java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   made not entrant
  11744  741   !   4       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)
  11776  522   !   3       java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   made not entrant
  11776  747  s    4       java.io.BufferedOutputStream::flush (12 bytes)
                              @ 1   java.io.BufferedOutputStream::flushBuffer (29 bytes)   inline (hot)
                                @ 20   java.net.SocketOutputStream::write (8 bytes)   inline (hot)
                                 \-&gt; TypeProfile (11324/11324 counts) = java/net/SocketOutputStream
               !                  @ 4   java.net.SocketOutputStream::socketWrite (159 bytes)   inline (hot)
               !m                   @ 71   java.net.AbstractPlainSocketImpl::acquireFD (29 bytes)   inline (hot)
                                    @ 82   java.net.SocketOutputStream::socketWrite0 (0 bytes)   native method
               !m                   @ 89   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   inline (hot)
               !m                   @ 127   java.net.AbstractPlainSocketImpl::isClosedOrPending (34 bytes)   executed &lt; MinInliningThreshold times
               !m                   @ 152   java.net.AbstractPlainSocketImpl::releaseFD (74 bytes)   already compiled into a medium method
                              @ 8   java.io.OutputStream::flush (1 bytes)   inline (hot)
                               \-&gt; TypeProfile (11324/11324 counts) = java/net/SocketOutputStream
<writer thread='139652429260544'/>
  11868  645       3       org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
<writer thread='139652430313216'/>
  11882  528  s    3       java.io.BufferedOutputStream::flush (12 bytes)   made not entrant
<writer thread='139652429260544'/>
                              @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)
                                @ 15   org.openjdk.jmh.runner.options.OptionsBuilder::shouldDoGC (29 bytes)   recursive inlining too deep
                                @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
                              @ 20   org.openjdk.jmh.util.Optional::orAnother (13 bytes)
<writer thread='139652430313216'/>
  11895  742       4       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Number::&lt;init&gt; (5 bytes)   inline (hot)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
  11897  525       3       java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)   made not entrant
  11897  750   !   4       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)
<writer thread='139652431365888'/>
                              @ 5   java.io.ObjectOutputStream::writeUTF (9 bytes)   already compiled into a big method
                              @ 10   java.io.ObjectStreamClass::getSerialVersionUID (33 bytes)   inline (hot)
                                @ 29   java.lang.Long::longValue (5 bytes)   inline (hot)
                              @ 13   java.io.ObjectOutputStream::writeLong (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   inline (hot)
                                  @ 22   java.io.Bits::putLong (86 bytes)   inline (hot)
                              @ 88   java.io.ObjectOutputStream::writeByte (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 97   java.io.ObjectOutputStream::writeShort (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                  @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                              @ 122   java.io.ObjectStreamField::getTypeCode (9 bytes)   inline (hot)
                                @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 125   java.io.ObjectOutputStream::writeByte (9 bytes)   inline (hot)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                              @ 131   java.io.ObjectStreamField::getName (5 bytes)   accessor
                              @ 134   java.io.ObjectOutputStream::writeUTF (9 bytes)   already compiled into a big method
                              @ 139   java.io.ObjectStreamField::isPrimitive (27 bytes)   inline (hot)
                                @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 148   java.io.ObjectStreamField::getTypeString (16 bytes)   inline (hot)
                                @ 1   java.io.ObjectStreamField::isPrimitive (27 bytes)   inline (hot)
                                  @ 5   java.lang.String::charAt (29 bytes)   inline (hot)
                              @ 151   java.io.ObjectOutputStream::writeTypeString (40 bytes)   inline (hot)
                                @ 16   java.io.ObjectOutputStream$HandleTable::lookup (56 bytes)   inline (hot)
                                  @ 11   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                    @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                @ 27   java.io.ObjectOutputStream::writeHandle (21 bytes)   inline (hot)
                                  @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 17   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   inline (hot)
                                    @ 21   java.io.Bits::putInt (36 bytes)   inline (hot)
                                @ 36   java.io.ObjectOutputStream::writeString (74 bytes)   inline (hot)
                                  @ 13   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   inline (hot)
                                    @ 37   java.io.ObjectOutputStream$HandleTable::insert (39 bytes)   inline (hot)
                                      @ 2   java.io.ObjectOutputStream$HandleTable::hash (8 bytes)   inline (hot)
                                        @ 1   java.lang.System::identityHashCode (0 bytes)   (intrinsic)
                                  @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::getUTFLength (124 bytes)   inline (hot)
                                    @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 23   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 41   java.lang.String::getChars (62 bytes)   inline (hot)
                                      @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                  @ 40   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)   inline (hot)
                                  @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::writeUTF (46 bytes)   inline (hot)
                                    @ 19   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   inline (hot)
                                      @ 22   java.io.Bits::putShort (16 bytes)   inline (hot)
                                    @ 24   java.lang.String::length (6 bytes)   inline (hot)
                                    @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::writeBytes (144 bytes)   inline (hot)
                                      @ 1   java.lang.String::length (6 bytes)   inline (hot)
                                      @ 34   java.lang.Math::min (11 bytes)   (intrinsic)
                                      @ 52   java.lang.String::getChars (62 bytes)   inline (hot)
                                        @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                      @ 81   java.lang.Math::min (11 bytes)   (intrinsic)
<writer thread='139652429260544'/>
  11905  417       1       org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
  11906  743       3       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)
  11906  744   !   3       org.openjdk.jmh.runner.ForkedRunner$1::accept (25 bytes)
                              @ 4   org.openjdk.jmh.runner.ForkedRunner::access$000 (5 bytes)
                              @ 8   org.openjdk.jmh.runner.link.BinaryLinkClient::pushResults (13 bytes)
                                @ 6   org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !m               @ 9   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 20   org.openjdk.jmh.runner.ForkedRunner$SavedIOException::&lt;init&gt; (11 bytes)   not inlineable
  11911  646       3       org.openjdk.jmh.util.Optional::orElse (16 bytes)
  11916  647   !   3       com.sun.proxy.$Proxy0::iteration (47 bytes)
                              @ 23   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 27   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                 @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 43   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
<writer thread='139652430313216'/>
                              @ 42   java.io.ObjectOutputStream::reset (49 bytes)   executed &lt; MinInliningThreshold times
               !              @ 57   java.io.ObjectOutputStream::writeObject (38 bytes)   inline (hot)
               !                @ 16   java.io.ObjectOutputStream::writeObject0 (619 bytes)   hot method too big
               !                @ 32   java.io.ObjectOutputStream::writeFatalException (57 bytes)   too big
                              @ 64   java.io.ObjectOutputStream::flush (8 bytes)   inline (hot)
                                @ 4   java.io.ObjectOutputStream$BlockDataOutputStream::flush (12 bytes)   inline (hot)
                                  @ 1   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   inline (hot)
                                    @ 20   java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)   too big
              s                     @ 36   java.io.BufferedOutputStream::write (67 bytes)   inline (hot)
                                     \-&gt; TypeProfile (6045/6045 counts) = java/io/BufferedOutputStream
                                      @ 53   java.lang.System::arraycopy (0 bytes)   (intrinsic)
              s                   @ 8   java.io.BufferedOutputStream::flush (12 bytes)   already compiled into a big method
                                   \-&gt; TypeProfile (12311/12311 counts) = java/io/BufferedOutputStream
<writer thread='139652429260544'/>
  11948  418       1       org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)
  11949  419       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
  11949  649       3       org.openjdk.jmh.infra.IterationParams::getTime (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getTime (5 bytes)
  11950  650       3       org.openjdk.jmh.infra.Control::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11957  667       3       org.openjdk.jmh.runner.InfraControlL1::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  11966  420       1       org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
  11967  421       1       java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)
  11967  621       3       java.util.concurrent.TimeUnit$4::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
  11974  732       3       org.openjdk.jmh.results.IterationResult::addResult (137 bytes)
                              @ 1   org.openjdk.jmh.results.Result::getRole (5 bytes)
                              @ 4   org.openjdk.jmh.results.ResultRole::isPrimary (13 bytes)
                              @ 22   java.util.Collections::singleton (9 bytes)
                                @ 5   java.util.Collections$SingletonSet::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 35   java.util.Collection::size (0 bytes)   no static binding
                              @ 49   java.util.ArrayList::&lt;init&gt; (61 bytes)   callee is too large
                              @ 58   java.util.ArrayList::addAll (54 bytes)   callee is too large
                              @ 66   java.util.ArrayList::add (29 bytes)
                                @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)
                                  @ 6   java.util.ArrayList::calculateCapacity (16 bytes)
                                    @ 10   java.lang.Math::max (11 bytes)
                                  @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)
                                    @ 22   java.util.ArrayList::grow (45 bytes)   callee is too large
                              @ 85   java.util.Collection::add (0 bytes)   no static binding
                              @ 92   org.openjdk.jmh.results.Result::getRole (5 bytes)
                              @ 95   org.openjdk.jmh.results.ResultRole::isSecondary (20 bytes)
                              @ 116   org.openjdk.jmh.util.TreeMultimap::&lt;init&gt; (12 bytes)
                                @ 5   java.util.TreeMap::&lt;init&gt; (20 bytes)
                                  @ 1   java.util.AbstractMap::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 8   org.openjdk.jmh.util.DelegatingMultimap::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 127   org.openjdk.jmh.results.Result::getLabel (5 bytes)
                              @ 131   org.openjdk.jmh.util.DelegatingMultimap::put (44 bytes)   callee is too large
  12020  652       3       org.openjdk.jmh.infra.ControlL4::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139652430313216'/>
  12027  534   !   3       org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   made not entrant
  12028  752       4       java.util.concurrent.TimeUnit::x (27 bytes)
  12029  533       3       java.util.concurrent.TimeUnit::x (27 bytes)   made not entrant
  12029  751       4       java.util.ArrayList::add (29 bytes)
<writer thread='139652429260544'/>
  12032  642       3       java.util.concurrent.locks.LockSupport::park (23 bytes)
                              @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 6   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
                              @ 14   sun.misc.Unsafe::park (0 bytes)   native method
                              @ 19   java.util.concurrent.locks.LockSupport::setBlocker (12 bytes)
                                @ 8   sun.misc.Unsafe::putObject (0 bytes)   intrinsic
  12038  653       3       org.openjdk.jmh.infra.ControlL3::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12042  654       3       org.openjdk.jmh.infra.ControlL2::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12044  733       3       org.openjdk.jmh.results.ResultRole::isPrimary (13 bytes)
  12044  734       3       java.util.Collections::singleton (9 bytes)
                              @ 5   java.util.Collections$SingletonSet::&lt;init&gt; (10 bytes)
                                @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12046  735       3       java.util.Collections$SingletonSet::&lt;init&gt; (10 bytes)
                              @ 1   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12048  736       3       org.openjdk.jmh.results.ResultRole::isSecondary (20 bytes)
<writer thread='139652430313216'/>
                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                  @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                  @ 22   java.util.ArrayList::grow (45 bytes)   inline (hot)
                                    @ 38   java.util.Arrays::copyOf (13 bytes)   inline (hot)
                                      @ 3   java.lang.Object::getClass (0 bytes)   (intrinsic)
                                      @ 6   java.util.Arrays::copyOf (46 bytes)   (intrinsic)
<writer thread='139652429260544'/>
  12071  756       1       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)
  12072  730       3       java.util.concurrent.TimeUnit$1::toNanos (2 bytes)   made not entrant
  12072  757       1       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)
  12082  743       3       org.openjdk.jmh.results.IterationResultMetaData::getAllOps (5 bytes)   made not entrant
  12082  689       3       org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)
               !              @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   callee is too large
  12083  655       3       org.openjdk.jmh.infra.ControlL1::&lt;init&gt; (5 bytes)
                              @ 1   org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12084  656       3       org.openjdk.jmh.infra.ControlL0::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12087  737   !   3       org.openjdk.jmh.runner.BenchmarkHandler::stopProfilers (66 bytes)
                              @ 4   java.util.List::iterator (0 bytes)   no static binding
                              @ 13   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 23   java.util.Iterator::next (0 bytes)   no static binding
                              @ 39   org.openjdk.jmh.profile.InternalProfiler::afterIteration (0 bytes)   not inlineable
                              @ 44   org.openjdk.jmh.results.IterationResult::addResults (35 bytes)
                                @ 1   java.util.Collection::iterator (0 bytes)   no static binding
                                @ 8   java.util.Iterator::hasNext (0 bytes)   no static binding
                                @ 17   java.util.Iterator::next (0 bytes)   no static binding
<writer thread='139652430313216'/>
  12089  289       3       java.util.ArrayList::add (29 bytes)   made not entrant
  12089  755   !   4       org.openjdk.jmh.runner.BenchmarkHandler::runIteration (628 bytes)
<writer thread='139652429260544'/>
                                @ 28   org.openjdk.jmh.results.IterationResult::addResult (137 bytes)   callee is too large
                              @ 58   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
  12101  661       3       org.openjdk.jmh.runner.InfraControl::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                  @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
  12107  662       3       org.openjdk.jmh.runner.InfraControlL4::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                                @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
  12108  665       3       org.openjdk.jmh.runner.InfraControlL3::&lt;init&gt; (14 bytes)
                              @ 10   org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)   callee is too large
  12119  690   !   3       org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)
                              @ 1   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)
                              @ 14   java.lang.ThreadLocal::get (38 bytes)   callee is too large
                              @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)
                              @ 50   java.lang.reflect.Method::invoke (62 bytes)   callee is too large
                              @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
                              @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   callee is too large
                              @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   callee is too large
                              @ 127   java.lang.Exception::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
<writer thread='139652431365888'/>
  12138  611       3       java.io.ObjectStreamClass::writeNonProxy (161 bytes)   made not entrant
  12140  680       4       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)
               !m             @ 4   java.util.concurrent.ConcurrentHashMap::putVal (362 bytes)   hot method too big
  12158   59       3       java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   made not entrant
  12158  754       4       java.util.ArrayList$Itr::next (66 bytes)
                              @ 1   java.util.ArrayList$Itr::checkForComodification (23 bytes)   inline (hot)
                              @ 14   java.util.ArrayList::access$000 (5 bytes)   accessor
<writer thread='139652429260544'/>
  12166  666       3       org.openjdk.jmh.runner.InfraControlL2::&lt;init&gt; (116 bytes)
                              @ 1   org.openjdk.jmh.runner.InfraControlL1::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 9   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.util.concurrent.atomic.AtomicInteger::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 32   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 44   java.util.concurrent.CountDownLatch::&lt;init&gt; (31 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 24   java.util.concurrent.CountDownLatch$Sync::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 6   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)
                              @ 52   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
<writer thread='139652431365888'/>
  12183  540       3       java.util.ArrayList$Itr::next (66 bytes)   made not entrant
  12184  760   !   4       java.util.concurrent.FutureTask::run (126 bytes)
<writer thread='139652429260544'/>
                              @ 60   org.openjdk.jmh.infra.BenchmarkParams::getThreads (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getThreads (5 bytes)
  12222  671       3       org.openjdk.jmh.runner.InfraControlL0::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12224  672       3       org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)
  12224  677       3       org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::&lt;init&gt; (15 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
  12248  691       3       org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)
                              @ 43   org.openjdk.jmh.infra.Blackhole::&lt;init&gt; (24 bytes)   disallowed by CompilerOracle
                              @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)
                              @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontrolinlineactualtest0_0 (39 bytes)   callee is too large
               !              @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                                @ 23   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
                              @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)
                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
                              @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                              @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)
                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                    @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                    @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   callee is too large
                              @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)
                              @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
                              @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                  @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)
                              @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)
                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
                              @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   callee is too large
                              @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)
                                @ 5   java.util.Collection::add (0 bytes)   no static binding
                              @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                              @ 212   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
  12357  681       2       java.util.concurrent.TimeUnit$5::toNanos (11 bytes)
                              @ 7   java.util.concurrent.TimeUnit::x (27 bytes)
  12359  682   !   2       org.openjdk.jmh.runner.BenchmarkHandler::startProfilers (58 bytes)
                              @ 4   java.util.List::iterator (0 bytes)   no static binding
                              @ 11   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 20   java.util.Iterator::next (0 bytes)   no static binding
                              @ 34   org.openjdk.jmh.profile.InternalProfiler::beforeIteration (0 bytes)   not inlineable
                              @ 50   org.openjdk.jmh.runner.BenchmarkException::&lt;init&gt; (11 bytes)   not inlineable
  12361  684       2       java.util.concurrent.ExecutorCompletionService::submit (38 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 14   java.util.concurrent.ExecutorCompletionService::newTaskFor (25 bytes)
                                @ 12   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                @ 21   java.util.concurrent.AbstractExecutorService::newTaskFor (9 bytes)
                                  @ 5   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                    @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.util.concurrent.ExecutorCompletionService$QueueingFuture::&lt;init&gt; (17 bytes)
                                @ 8   java.util.concurrent.FutureTask::&lt;init&gt; (19 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 7   java.util.concurrent.Executors::callable (22 bytes)
                                    @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                    @ 18   java.util.concurrent.Executors$RunnableAdapter::&lt;init&gt; (15 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 31   java.util.concurrent.Executor::execute (0 bytes)   not inlineable
  12384  685       2       java.util.concurrent.ExecutorCompletionService::newTaskFor (25 bytes)
                              @ 12   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 21   java.util.concurrent.AbstractExecutorService::newTaskFor (9 bytes)
                                @ 5   java.util.concurrent.FutureTask::&lt;init&gt; (27 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 12   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
  12405  697       2       java.util.concurrent.ThreadPoolExecutor::execute (132 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 16   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 21   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
               !              @ 34   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
                              @ 45   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 50   java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
                              @ 61   java.util.concurrent.BlockingQueue::offer (0 bytes)   not inlineable
                              @ 73   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 78   java.util.concurrent.ThreadPoolExecutor::isRunning (10 bytes)
                              @ 86   java.util.concurrent.ThreadPoolExecutor::remove (17 bytes)
                                @ 5   java.util.concurrent.BlockingQueue::remove (0 bytes)   not inlineable
               !                @ 12   java.util.concurrent.ThreadPoolExecutor::tryTerminate (161 bytes)   callee is too large
                              @ 94   java.util.concurrent.ThreadPoolExecutor::reject (12 bytes)
                                @ 6   java.util.concurrent.ThreadPoolExecutor$AbortPolicy::rejectedExecution (42 bytes)   callee is too large
                              @ 101   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
               !              @ 110   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
               !              @ 120   java.util.concurrent.ThreadPoolExecutor::addWorker (292 bytes)   callee is too large
                              @ 128   java.util.concurrent.ThreadPoolExecutor::reject (12 bytes)
                                @ 6   java.util.concurrent.ThreadPoolExecutor$AbortPolicy::rejectedExecution (42 bytes)   callee is too large
  12440  698       2       java.util.concurrent.ThreadPoolExecutor$Worker::lock (6 bytes)
                              @ 2   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)
                                @ 2   java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire (20 bytes)
                                  @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                                  @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   callee is too large
               !                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   callee is too large
                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)
                                  @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
               !m                 @ 3   java.lang.Thread::interrupt (56 bytes)   callee is too large
  12443  699       2       java.util.concurrent.ThreadPoolExecutor$Worker::tryAcquire (20 bytes)
                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 10   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)
  12445  700       2       java.util.concurrent.ThreadPoolExecutor::runStateAtLeast (11 bytes)
  12445  701       2       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)
  12446  702       2       org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontrolinlineactualtest0_0 (39 bytes)
                              @ 11   org.openjdk.jmh.runner.FailureAssistException::&lt;init&gt; (5 bytes)   not inlineable
                              @ 28   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_jmhType::&lt;init&gt; (5 bytes)
                                @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_jmhType_B3::&lt;init&gt; (5 bytes)
                                  @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_jmhType_B2::&lt;init&gt; (5 bytes)
                                    @ 1   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_jmhType_B1::&lt;init&gt; (5 bytes)
                                      @ 1   org.openjdk.jmh.it.ccontrol.CompilerControlInlineActualTest::&lt;init&gt; (5 bytes)
                                        @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12448  704   !   2       org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)
                              @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                  @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                  @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
                              @ 23   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
  12496  705       2       org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12497  706       2       org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)
                              @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)
  12497  707       2       org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)
                              @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)
                                  @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   callee is too large
                                  @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   callee is too large
                              @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)
                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)
                                  @ 0   java.lang.Thread::interrupted (8 bytes)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                    @ 4   java.lang.Thread::isInterrupted (0 bytes)   native method
                                  @ 10   java.lang.InterruptedException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                                  @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)
                                    @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)
               !                  @ 24   java.util.concurrent.locks.AbstractQueuedSynchronizer::doAcquireSharedInterruptibly (103 bytes)   callee is too large
  12518  738   !   2       com.sun.proxy.$Proxy0::iterationResult (52 bytes)
                              @ 23   java.lang.Integer::valueOf (32 bytes)
                                @ 28   java.lang.Integer::&lt;init&gt; (10 bytes)
                                  @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 32   org.openjdk.jmh.runner.link.BinaryLinkClient$1::invoke (21 bytes)
                                @ 9   org.openjdk.jmh.runner.link.ClassConventions::getMethodName (100 bytes)   callee is too large
                                @ 13   org.openjdk.jmh.runner.link.OutputFormatFrame::&lt;init&gt; (15 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 16   org.openjdk.jmh.runner.link.BinaryLinkClient::access$000 (6 bytes)
               !m                 @ 2   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
                              @ 48   java.lang.reflect.UndeclaredThrowableException::&lt;init&gt; (14 bytes)   not inlineable
  12523  745       2       org.openjdk.jmh.runner.link.BinaryLinkClient::pushResults (13 bytes)
                              @ 6   org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
               !m             @ 9   org.openjdk.jmh.runner.link.BinaryLinkClient::pushFrame (91 bytes)   callee is too large
  12524  746       2       org.openjdk.jmh.runner.link.ResultsFrame::&lt;init&gt; (10 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12540  708       2       org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)
  12541  709       2       org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)
                                @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)
                                  @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12543  711       2       org.openjdk.jmh.results.RawResults::getTime (26 bytes)
  12543  712       2       org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)
                              @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)
  12544  713       2       org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)
                              @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)
                                @ 2   java.util.concurrent.TimeUnit::toNanos (8 bytes)   no static binding
                              @ 18   org.openjdk.jmh.results.Result::of (9 bytes)
                                @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)
                                  @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   callee is too large
                              @ 33   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 38   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 41   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)
                                @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   callee is too large
  12548  714       2       org.openjdk.jmh.results.Result::of (9 bytes)
                              @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)
                                @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12549  715       2       org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)
                              @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
  12590  768       3       java.util.Arrays::fill (28 bytes)
                              @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
  12594  717       2       org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)
                              @ 4   java.lang.Enum::ordinal (5 bytes)
  12599  719       2       org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                                @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
                              @ 29   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)
                                @ 6   java.util.concurrent.ConcurrentMap::putIfAbsent (0 bytes)   no static binding
  12607  721       2       org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)
                              @ 5   java.util.Collection::add (0 bytes)   no static binding
  12611  722       2       org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)
                              @ 3   java.lang.String::equals (81 bytes)   callee is too large
                              @ 15   java.lang.IllegalStateException::&lt;init&gt; (6 bytes)   not inlineable
  12616  723       2       java.util.concurrent.FutureTask::done (1 bytes)
  12618  725       2       java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)
                              @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)
                              @ 11   java.util.concurrent.BlockingQueue::add (0 bytes)   not inlineable
  12620  624   !   2       sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)
                              @ 8  java/lang/NullPointerException::&lt;init&gt; (not loaded)   not inlineable
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 52   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 60   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   callee is too large
                              @ 69   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
  12632  726       2       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)
  12633  727   !   2       java.util.concurrent.ThreadPoolExecutor::getTask (179 bytes)
                              @ 6   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                              @ 11   java.util.concurrent.ThreadPoolExecutor::runStateOf (5 bytes)
                              @ 29   java.util.concurrent.BlockingQueue::isEmpty (10 bytes)   not inlineable
                              @ 38   java.util.concurrent.ThreadPoolExecutor::decrementWorkerCount (15 bytes)
                                @ 5   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)
                                @ 8   java.util.concurrent.ThreadPoolExecutor::compareAndDecrementWorkerCount (12 bytes)
                                  @ 8   java.util.concurrent.atomic.AtomicInteger::compareAndSet (13 bytes)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
                              @ 44   java.util.concurrent.ThreadPoolExecutor::workerCountOf (5 bytes)
                              @ 100   java.util.concurrent.BlockingQueue::isEmpty (10 bytes)   not inlineable
                              @ 134   java.util.concurrent.BlockingQueue::poll (0 bytes)   not inlineable
                              @ 149   java.util.concurrent.BlockingQueue::take (0 bytes)   not inlineable
                              @ 110   java.util.concurrent.ThreadPoolExecutor::compareAndDecrementWorkerCount (12 bytes)
                                @ 8   java.util.concurrent.atomic.AtomicInteger::compareAndSet (13 bytes)
                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   intrinsic
  12656  769       3       java.util.Arrays::fill (21 bytes)
  12663  766       3       java.io.ObjectStreamClass::getSuperDesc (9 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
  12670  574       1       java.lang.Enum::name (5 bytes)
  12678  595       1       java.io.SerialCallbackContext::getDesc (5 bytes)
  12679  659       1       java.util.TreeMap::access$100 (5 bytes)
  12680  771       3       java.util.TreeMap::writeObject (65 bytes)
                              @ 1   java.io.ObjectOutputStream::defaultWriteObject (54 bytes)   callee is too large
                              @ 9   java.io.ObjectOutputStream::writeInt (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
                              @ 13   java.util.TreeMap::entrySet (27 bytes)
                                @ 19   java.util.TreeMap$EntrySet::&lt;init&gt; (10 bytes)
                                  @ 6   java.util.AbstractSet::&lt;init&gt; (5 bytes)
                                    @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)
                                      @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 16   java.util.Set::iterator (0 bytes)   no static binding
                              @ 23   java.util.Iterator::hasNext (0 bytes)   no static binding
                              @ 32   java.util.Iterator::next (0 bytes)   no static binding
                              @ 43   java.util.Map$Entry::getKey (0 bytes)   not inlineable
               !              @ 48   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
                              @ 53   java.util.Map$Entry::getValue (0 bytes)   not inlineable
               !              @ 58   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
  12707  772       3       java.io.ObjectOutputStream::writeEnum (63 bytes)
                              @ 6   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 10   java.io.ObjectStreamClass::getSuperDesc (9 bytes)
                                @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                  @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 18   java.io.ObjectStreamClass::forClass (52 bytes)   callee is too large
                              @ 33   java.io.ObjectOutputStream::writeClassDesc (60 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$HandleTable::assign (52 bytes)   callee is too large
                              @ 55   java.lang.Enum::name (5 bytes)
                              @ 59   java.io.ObjectOutputStream::writeString (74 bytes)   callee is too large
  12732  352   !   3       java.util.zip.Inflater::inflate (113 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.util.zip.Inflater::ensureOpen (47 bytes)   callee is too large
                              @ 59   java.util.zip.ZStreamRef::address (5 bytes)
                              @ 65   java.util.zip.Inflater::inflateBytes (0 bytes)   native method
                              @ 32  java/lang/ArrayIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
  12748  773   !   3       sun.reflect.GeneratedMethodAccessor2::invoke (66 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 53   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 40   java.util.TreeMap::writeObject (65 bytes)   callee is too large
                              @ 62   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
  12764  753       1       java.io.ObjectOutputStream$HandleTable::size (5 bytes)
  12779  774       3       java.util.Arrays::rangeCheck (74 bytes)
                              @ 13   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 18   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 22   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 27   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 31   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 36   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 39   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 42   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 55  java/lang/ArrayIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 69  java/lang/ArrayIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
  12842  778       2       java.io.SerialCallbackContext::getObj (9 bytes)
                              @ 1   java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                                @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
  12844  779       2       java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                              @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                              @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
  12860  781       2       java.io.ObjectOutputStream::defaultWriteObject (54 bytes)
                              @ 15  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
                              @ 20   java.io.SerialCallbackContext::getObj (9 bytes)
                                @ 1   java.io.SerialCallbackContext::checkAndSetUsed (26 bytes)
                                  @ 4   java.lang.Thread::currentThread (0 bytes)   intrinsic
                                  @ 16  java/io/NotActiveException::&lt;init&gt; (not loaded)   not inlineable
                              @ 25   java.io.SerialCallbackContext::getDesc (5 bytes)
                              @ 34   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
               !              @ 41   java.io.ObjectOutputStream::defaultWriteFields (270 bytes)   callee is too large
                              @ 49   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
  12864  782       2       java.io.ObjectOutputStream::writeInt (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
  12888  785       1       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)
  12889  701       2       java.util.concurrent.ThreadPoolExecutor::beforeExecute (1 bytes)   made not entrant
  12932  788   !   2       java.io.ObjectStreamClass::invokeWriteObject (79 bytes)
                              @ 1   java.io.ObjectStreamClass::requireInitialized (18 bytes)
                                @ 13  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 24   java.lang.reflect.Method::invoke (62 bytes)   callee is too large
                              @ 33   java.lang.reflect.InvocationTargetException::getTargetException (5 bytes)   not inlineable
                              @ 54   java.io.ObjectStreamClass::throwMiscException (43 bytes)   callee is too large
                              @ 66  java/lang/InternalError::&lt;init&gt; (not loaded)   not inlineable
                              @ 74  java/lang/UnsupportedOperationException::&lt;init&gt; (not loaded)   not inlineable
  12958  791       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeBlockHeader (70 bytes)
                              @ 33   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 53   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 66   java.io.OutputStream::write (79 bytes)   no static binding
  12981  795       1       java.util.concurrent.FutureTask::done (1 bytes)
  12982  723       2       java.util.concurrent.FutureTask::done (1 bytes)   made not entrant
  13009  798       1       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)
  13010  726       2       java.util.concurrent.ThreadPoolExecutor::afterExecute (1 bytes)   made not entrant
  13210  800       2       java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                              @ 5   java.util.Arrays::fill (21 bytes)
                              @ 18   java.util.Arrays::fill (28 bytes)
                                @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
  13213    4       3       java.lang.Object::&lt;init&gt; (1 bytes)   made zombie
  13213    3       3       java.lang.String::length (6 bytes)   made zombie
  13213    2       3       java.lang.String::equals (81 bytes)   made zombie
  13213    1       3       java.lang.String::hashCode (55 bytes)   made zombie
  13213    5       3       java.lang.String::charAt (29 bytes)   made zombie
  13213    6       3       java.lang.String::indexOf (70 bytes)   made zombie
  13213    7       3       java.lang.Math::min (11 bytes)   made zombie
  13213    8       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   made zombie
  13213   17       3       java.lang.System::getSecurityManager (4 bytes)   made zombie
  13213   19       3       java.lang.String::lastIndexOf (52 bytes)   made zombie
  13219  801       2       java.io.ObjectOutputStream::clear (15 bytes)
                              @ 4   java.io.ObjectOutputStream$ReplaceTable::clear (24 bytes)
                                @ 9   java.io.ObjectOutputStream$HandleTable::size (5 bytes)
                                @ 13   java.util.Arrays::fill (28 bytes)
                                  @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
                                @ 20   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                  @ 5   java.util.Arrays::fill (21 bytes)
                                  @ 18   java.util.Arrays::fill (28 bytes)   callee is too large
                              @ 11   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                @ 5   java.util.Arrays::fill (21 bytes)
                                @ 18   java.util.Arrays::fill (28 bytes)
                                  @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
  13225   45       3       jdk.internal.org.objectweb.asm.ByteVector::putUTF8 (142 bytes)   made zombie
  13225   64       3       java.lang.String::replace (127 bytes)   made zombie
  13225  802       2       java.util.ArrayList::writeObject (60 bytes)
                              @ 6   java.io.ObjectOutputStream::defaultWriteObject (54 bytes)   callee is too large
                              @ 14   java.io.ObjectOutputStream::writeInt (9 bytes)
                                @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeInt (46 bytes)   callee is too large
               !              @ 34   java.io.ObjectOutputStream::writeObject (38 bytes)   callee is too large
                              @ 55  java/util/ConcurrentModificationException::&lt;init&gt; (not loaded)   not inlineable
  13237  803       2       java.util.TreeMap$EntrySet::iterator (19 bytes)
                              @ 12   java.util.TreeMap::getFirstEntry (26 bytes)
                              @ 15   java.util.TreeMap$EntryIterator::&lt;init&gt; (12 bytes)
                                @ 8   java.util.TreeMap$PrivateEntryIterator::&lt;init&gt; (28 bytes)
                                  @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                  @ 11   java.util.TreeMap::access$100 (5 bytes)
  13240  804       2       java.util.TreeMap::getFirstEntry (26 bytes)
  13241  188       3       sun.reflect.ClassFileAssembler::emitByte (11 bytes)   made zombie
  13241  189       3       sun.reflect.ByteVectorImpl::add (38 bytes)   made zombie
  13241  805       2       java.util.TreeMap$EntryIterator::&lt;init&gt; (12 bytes)
                              @ 8   java.util.TreeMap$PrivateEntryIterator::&lt;init&gt; (28 bytes)
                                @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 11   java.util.TreeMap::access$100 (5 bytes)
  13255  807       2       java.util.TreeMap$PrivateEntryIterator::hasNext (13 bytes)
  13257  806       2       java.util.TreeMap$PrivateEntryIterator::&lt;init&gt; (28 bytes)
                              @ 6   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 11   java.util.TreeMap::access$100 (5 bytes)
  13296  808 %     3       java.util.Arrays::fill @ 10 (28 bytes)
                              @ 4   java.util.Arrays::rangeCheck (74 bytes)   callee is too large
  13349  809   !   2       sun.reflect.GeneratedMethodAccessor3::invoke (66 bytes)
                              @ 8   java.lang.NullPointerException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 28   java.lang.IllegalArgumentException::&lt;init&gt; (5 bytes)   don&apos;t inline Throwable constructors
                              @ 45   java.lang.Object::toString (36 bytes)   callee is too large
                              @ 53   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 40   java.util.ArrayList::writeObject (60 bytes)   callee is too large
                              @ 62   java.lang.reflect.InvocationTargetException::&lt;init&gt; (14 bytes)   not inlineable
  13470  810       2       java.io.ObjectOutputStream$BlockDataOutputStream::writeInts (104 bytes)
                              @ 43   java.lang.Math::min (11 bytes)
                              @ 68   java.io.Bits::putInt (36 bytes)   callee is too large
                              @ 97   java.io.DataOutputStream::writeInt (65 bytes)   callee is too large
  13504  811       2       java.io.ObjectOutputStream::reset (49 bytes)
                              @ 13   java.io.IOException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 22   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 32   java.io.ObjectOutputStream$BlockDataOutputStream::writeByte (33 bytes)
                                @ 11   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
                              @ 36   java.io.ObjectOutputStream::clear (15 bytes)
                                @ 4   java.io.ObjectOutputStream$ReplaceTable::clear (24 bytes)
                                  @ 9   java.io.ObjectOutputStream$HandleTable::size (5 bytes)
                                  @ 13   java.util.Arrays::fill (28 bytes)   callee is too large
                                  @ 20   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                    @ 5   java.util.Arrays::fill (21 bytes)
                                    @ 18   java.util.Arrays::fill (28 bytes)   callee is too large
                                @ 11   java.io.ObjectOutputStream$HandleTable::clear (27 bytes)
                                  @ 5   java.util.Arrays::fill (21 bytes)
                                  @ 18   java.util.Arrays::fill (28 bytes)   callee is too large
                              @ 44   java.io.ObjectOutputStream$BlockDataOutputStream::setBlockDataMode (35 bytes)
                                @ 14   java.io.ObjectOutputStream$BlockDataOutputStream::drain (45 bytes)   callee is too large
<writer thread='139652869576448'/>
  13588  812     n 0       sun.misc.Unsafe::putLong (native)   
<writer thread='139652429260544'/>
  13605  813       2       java.nio.DirectLongBufferU::get (16 bytes)
                              @ 6   java.nio.Buffer::checkIndex (22 bytes)   intrinsic
                              @ 9   java.nio.DirectLongBufferU::ix (10 bytes)
                              @ 12   sun.misc.Unsafe::getLong (0 bytes)   intrinsic
<writer thread='139652869576448'/>
  13607  814     n 0       sun.misc.Unsafe::getLong (native)   
<writer thread='139652429260544'/>
  13607  815       2       java.nio.DirectLongBufferU::put (18 bytes)
                              @ 6   java.nio.Buffer::checkIndex (22 bytes)   intrinsic
                              @ 9   java.nio.DirectLongBufferU::ix (10 bytes)
                              @ 13   sun.misc.Unsafe::putLong (0 bytes)   intrinsic
<writer thread='139652869576448'/>
  13609  521   !   4       java.io.ObjectStreamClass::lookup (335 bytes)   made not entrant
<writer thread='139652429260544'/>
  13617  816       2       java.lang.Long::valueOf (40 bytes)
                              @ 36   java.lang.Long::&lt;init&gt; (10 bytes)
                                @ 1   java.lang.Number::&lt;init&gt; (5 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<writer thread='139652869576448'/>
  13620  817     n 0       java.lang.Class::isAssignableFrom (native)   
<writer thread='139652429260544'/>
  13625  818       2       sun.reflect.ClassFileAssembler::emitConstantPoolClass (23 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
  13636  819       2       sun.reflect.ClassFileAssembler::emitConstantPoolNameAndType (28 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 13   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
  13640  820       2       java.lang.Class::getDeclaredMethod (67 bytes)
                              @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                              @ 11   java.lang.Class::privateGetDeclaredMethods (67 bytes)   callee is too large
                              @ 16   java.lang.Class::searchMethods (90 bytes)   callee is too large
                              @ 32   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 36   java.lang.Class::getName (21 bytes)
                                @ 11   java.lang.Class::getName0 (0 bytes)   native method
                              @ 39  
<writer thread='139652869576448'/>
  13646  484   !   4       java.io.ObjectOutputStream::writeObject0 (619 bytes)   made not entrant
  13649  720       4       java.io.ObjectStreamClass::writeNonProxy (161 bytes)   made not entrant
  13650  543   !   4       java.io.ObjectOutputStream::writeOrdinaryObject (175 bytes)   made not entrant
<writer thread='139652429260544'/>
 java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 44   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 48   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 52   java.lang.Class::argumentTypesToString (79 bytes)   callee is too large
                              @ 55   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 58   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 61   java.lang.NoSuchMethodException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
  13657  821       2       java.io.DataOutputStream::writeUTF (435 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 22   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 83   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 88   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 92   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 97   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 100   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (82 bytes)   callee is too large
                              @ 103  java/io/UTFDataFormatException::&lt;init&gt; (not loaded)   not inlineable
                              @ 220   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 267   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 426   java.io.DataOutput::write (0 bytes)   not inlineable
<writer thread='139652869576448'/>
  13675  622       4       java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   made not entrant
<writer thread='139652429260544'/>
  13736  822  s    2       java.io.DataOutputStream::write (16 bytes)
                              @ 7   java.io.OutputStream::write (79 bytes)   no static binding
                              @ 12   java.io.DataOutputStream::incCount (20 bytes)
  13744  823       2       java.io.File::getName (42 bytes)
                              @ 7   java.lang.String::lastIndexOf (13 bytes)
                                @ 9   java.lang.String::lastIndexOf (52 bytes)   callee is too large
                              @ 27   java.lang.String::substring (56 bytes)   callee is too large
                              @ 38   java.lang.String::substring (56 bytes)   callee is too large
  13754  827       2       sun.reflect.AccessorGenerator::sub (5 bytes)
  13755  826       2       sun.reflect.ClassFileAssembler::emitConstantPoolMethodref (28 bytes)
                              @ 3   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 8   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
<writer thread='139652431365888'/>
                              @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                              @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                              @ 42   java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)   inline (hot)
                              @ 42   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)   inline (hot)
                               \-&gt; TypeProfile (4719/9438 counts) = org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask
                               \-&gt; TypeProfile (4719/9438 counts) = java/util/concurrent/Executors$RunnableAdapter
               !                @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   inline (hot)
                                  @ 1   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)   accessor
                                  @ 14   java.lang.ThreadLocal::get (38 bytes)   inline (hot)
                                    @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                    @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                                     \-&gt; TypeProfile (4991/5331 counts) = org/openjdk/jmh/runner/BenchmarkHandler$1
                                    @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                      @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                        @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                        @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                        @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                                    @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                                  @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)   accessor
                                  @ 50   java.lang.reflect.Method::invoke (62 bytes)   inline (hot)
                                    @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)   inline (hot)
                                      @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   (intrinsic)
                                      @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                                    @ 56   sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)   inline (hot)
                                     \-&gt; TypeProfile (4936/4936 counts) = sun/reflect/DelegatingMethodAccessorImpl
               !                      @ 6   sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)   inline (hot)
                                       \-&gt; TypeProfile (4537/4936 counts) = sun/reflect/GeneratedMethodAccessor1
                                        @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   inline (hot)
                                          @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)   accessor
                                          @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontrolinlineactualtest0_0 (39 bytes)   inline (hot)
               !                          @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   inline (hot)
                                            @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inline (hot)
                                                @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                          @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)   inline (hot)
                                            @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                          @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)   accessor
                                          @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                                          @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.CountDownLatch$Sync::tryReleaseShared (37 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 18   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                @ 9   java.util.concurrent.locks.AbstractQueuedSynchronizer::doReleaseShared (79 bytes)   inline (hot)
                                            @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inline (hot)
                                                @ 0   java.lang.Thread::interrupted (8 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 4   java.lang.Thread::isInterrupted (0 bytes)   (intrinsic)
                                                @ 16   java.util.concurrent.CountDownLatch$Sync::tryAcquireShared (13 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                          @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)   accessor
                                          @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)   accessor
                                          @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)   inline (hot)
                                            @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)   inline (hot)
                                              @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inline (hot)
                                                @ 1   java.util.AbstractCollection::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                          @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)   inline (hot)
                                          @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)   inline (hot)
                                            @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)   accessor
                                          @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   inline (hot)
                                            @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.TimeUnit$5::toNanos (11 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.TimeUnit$4::toNanos (11 bytes)   inline (hot)
                                               \-&gt; TypeProfile (5082/10164 counts) = java/util/concurrent/TimeUnit$4
                                               \-&gt; TypeProfile (5082/10164 counts) = java/util/concurrent/TimeUnit$5
                                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
                                                @ 7   java.util.concurrent.TimeUnit::x (27 bytes)   inline (hot)
                                            @ 18   org.openjdk.jmh.results.Result::of (9 bytes)   inline (hot)
                                              @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.util.AbstractStatistics::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                            @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)   inline (hot)
                                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   inline (hot)
                                              @ 4   java.lang.Enum::ordinal (5 bytes)   accessor
                                            @ 33   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inlining too deep
                                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inlining too deep
                                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 38   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inline (hot)
                                                @ 10   java.lang.String::length (6 bytes)   inline (hot)
                                                @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (27 bytes)   inline (hot)
                                                  @ 17   java.lang.AbstractStringBuilder::newCapacity (39 bytes)   inlining too deep
                                                  @ 20   java.util.Arrays::copyOf (19 bytes)   inlining too deep
                                                @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                                  @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 41   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                              @ 13   java.lang.String::&lt;init&gt; (82 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 75   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                                  @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                                  @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                                            @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)   inline (hot)
                                              @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 14   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)   inline (hot)
                                                  @ 6   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (10558/10558 counts) = java/util/concurrent/ConcurrentHashMap
                                                @ 29   org.openjdk.jmh.util.Deduplicator::dedup (20 bytes)   inline (hot)
                                                  @ 6   java.util.concurrent.ConcurrentHashMap::putIfAbsent (8 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (10558/10558 counts) = java/util/concurrent/ConcurrentHashMap
                                          @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)   inline (hot)
                                            @ 5   java.util.ArrayList::add (29 bytes)   inline (hot)
                                             \-&gt; TypeProfile (5024/5024 counts) = java/util/ArrayList
                                              @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inline (hot)
                                                @ 6   java.util.ArrayList::calculateCapacity (16 bytes)   inline (hot)
                                                  @ 10   java.lang.Math::max (11 bytes)   (intrinsic)
                                                @ 9   java.util.ArrayList::ensureExplicitCapacity (26 bytes)   inline (hot)
                                                  @ 22   java.util.ArrayList::grow (45 bytes)   inlining too deep
                                          @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                                  @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)   never executed
                                  @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)   never executed
                                  @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)   accessor
                                  @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   too big
                                  @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)   inline (hot)
                                    @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   too big
               !                @ 4   java.util.concurrent.FutureTask::run (126 bytes)   inline (hot)
                                 \-&gt; TypeProfile (5147/5147 counts) = java/util/concurrent/FutureTask
                                  @ 15   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                  @ 18   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                  @ 42   java.util.concurrent.Executors$RunnableAdapter::call (14 bytes)   inline (hot)
                                  @ 42   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (5 bytes)   inline (hot)
                                   \-&gt; TypeProfile (4719/9438 counts) = org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask
                                   \-&gt; TypeProfile (4719/9438 counts) = java/util/concurrent/Executors$RunnableAdapter
               !                    @ 1   org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask::call (139 bytes)   inline (hot)
                                      @ 1   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                      @ 11   org.openjdk.jmh.runner.BenchmarkHandler::access$200 (5 bytes)   accessor
                                      @ 14   java.lang.ThreadLocal::get (38 bytes)   inline (hot)
                                        @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                        @ 6   java.lang.ThreadLocal::getMap (5 bytes)   inline (hot)
                                         \-&gt; TypeProfile (4991/5331 counts) = org/openjdk/jmh/runner/BenchmarkHandler$1
                                        @ 16   java.lang.ThreadLocal$ThreadLocalMap::access$000 (6 bytes)   inline (hot)
                                          @ 2   java.lang.ThreadLocal$ThreadLocalMap::getEntry (42 bytes)   inline (hot)
                                            @ 1   java.lang.ThreadLocal::access$400 (5 bytes)   accessor
                                            @ 25   java.lang.ref.Reference::get (5 bytes)   (intrinsic)
                                            @ 38   java.lang.ThreadLocal$ThreadLocalMap::getEntryAfterMiss (63 bytes)   too big
                                        @ 34   java.lang.ThreadLocal::setInitialValue (36 bytes)   too big
                                      @ 25   org.openjdk.jmh.runner.BenchmarkHandler::access$300 (5 bytes)   accessor
                                      @ 50   java.lang.reflect.Method::invoke (62 bytes)   inline (hot)
                                        @ 15   sun.reflect.Reflection::quickCheckMemberAccess (10 bytes)   inline (hot)
                                          @ 1   sun.reflect.Reflection::getClassAccessFlags (0 bytes)   (intrinsic)
                                          @ 6   java.lang.reflect.Modifier::isPublic (12 bytes)   inline (hot)
                                        @ 56   sun.reflect.DelegatingMethodAccessorImpl::invoke (10 bytes)   inline (hot)
                                         \-&gt; TypeProfile (4936/4936 counts) = sun/reflect/DelegatingMethodAccessorImpl
               !                          @ 6   sun.reflect.GeneratedMethodAccessor1::invoke (73 bytes)   inline (hot)
                                           \-&gt; TypeProfile (4537/4936 counts) = sun/reflect/GeneratedMethodAccessor1
                                            @ 48   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_SingleShotTime (216 bytes)   inline (hot)
                                              @ 50   org.openjdk.jmh.infra.ThreadParams::getSubgroupIndex (5 bytes)   accessor
                                              @ 58   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::_jmh_tryInit_f_compilercontrolinlineactualtest0_0 (39 bytes)   inline (hot)
               !                              @ 63   org.openjdk.jmh.runner.InfraControl::preSetup (28 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inlining too deep
                                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inlining too deep
                                              @ 78   org.openjdk.jmh.results.RawResults::&lt;init&gt; (5 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                              @ 87   org.openjdk.jmh.infra.IterationParams::getBatchSize (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.IterationParamsL2::getBatchSize (5 bytes)   accessor
                                              @ 119   org.openjdk.jmh.it.ccontrol.generated.CompilerControlInlineActualTest_compilerControlSpecimen_jmhTest::compilerControlSpecimen_ss_jmhStub (53 bytes)   disallowed by CompilerOracle
                                              @ 123   org.openjdk.jmh.runner.InfraControl::preTearDown (15 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.CountDownLatch::countDown (10 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared (16 bytes)   inlining too deep
                                                @ 11   java.util.concurrent.CountDownLatch::await (9 bytes)   inline (hot)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireSharedInterruptibly (28 bytes)   inlining too deep
                                              @ 127   org.openjdk.jmh.runner.InfraControl::isLastIteration (5 bytes)   accessor
                                              @ 142   org.openjdk.jmh.infra.BenchmarkParams::getOpsPerInvocation (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getOpsPerInvocation (5 bytes)   accessor
                                              @ 160   org.openjdk.jmh.results.BenchmarkTaskResult::&lt;init&gt; (26 bytes)   inline (hot)
                                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                                @ 19   java.util.ArrayList::&lt;init&gt; (12 bytes)   inline (hot)
                                                  @ 1   java.util.AbstractList::&lt;init&gt; (10 bytes)   inlining too deep
                                              @ 178   org.openjdk.jmh.results.RawResults::getTime (26 bytes)   inline (hot)
                                              @ 185   org.openjdk.jmh.infra.BenchmarkParams::getTimeUnit (5 bytes)   inline (hot)
                                                @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::getTimeUnit (5 bytes)   accessor
                                              @ 188   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (48 bytes)   inline (hot)
                                                @ 13   java.util.concurrent.TimeUnit$1::convert (6 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.TimeUnit$5::toNanos (11 bytes)   inlining too deep
                                                  @ 2   java.util.concurrent.TimeUnit$4::toNanos (11 bytes)   inlining too deep
                                                   \-&gt; TypeProfile (5082/10164 counts) = java/util/concurrent/TimeUnit$4
                                                   \-&gt; TypeProfile (5082/10164 counts) = java/util/concurrent/TimeUnit$5
                                                @ 18   org.openjdk.jmh.results.Result::of (9 bytes)   inline (hot)
                                                  @ 5   org.openjdk.jmh.util.SingletonStatistics::&lt;init&gt; (10 bytes)   inlining too deep
                                                @ 25   java.lang.StringBuilder::&lt;init&gt; (7 bytes)   inline (hot)
                                                  @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)   inlining too deep
                                                @ 30   org.openjdk.jmh.runner.options.TimeValue::tuToString (76 bytes)   inline (hot)
                                                  @ 4   java.lang.Enum::ordinal (5 bytes)   accessor
                                                @ 33   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inlining too deep
                                                @ 38   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   inlining too deep
                                                @ 41   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
                                                  @ 13   java.lang.String::&lt;init&gt; (82 bytes)   inlining too deep
                                                @ 44   org.openjdk.jmh.results.SingleShotResult::&lt;init&gt; (13 bytes)   inline (hot)
                                                  @ 9   org.openjdk.jmh.results.Result::&lt;init&gt; (50 bytes)   inlining too deep
                                              @ 191   org.openjdk.jmh.results.BenchmarkTaskResult::add (12 bytes)   inline (hot)
                                                @ 5   java.util.ArrayList::add (29 bytes)   inline (hot)
                                                 \-&gt; TypeProfile (5024/5024 counts) = java/util/ArrayList
                                                  @ 7   java.util.ArrayList::ensureCapacityInternal (13 bytes)   inlining too deep
                                              @ 200   org.openjdk.jmh.infra.Blackhole::evaporate (25 bytes)   disallowed by CompilerOracle
                                      @ 77   org.openjdk.jmh.runner.InfraControl::preSetupForce (8 bytes)   never executed
                                      @ 84   org.openjdk.jmh.runner.InfraControl::preTearDownForce (8 bytes)   never executed
                                      @ 94   org.openjdk.jmh.infra.BenchmarkParams::shouldSynchIterations (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.infra.BenchmarkParamsL2::shouldSynchIterations (5 bytes)   accessor
                                      @ 104   org.openjdk.jmh.runner.InfraControl::announceWarmupReady (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmupReady (55 bytes)   too big
                                      @ 115   org.openjdk.jmh.runner.InfraControl::announceWarmdownReady (5 bytes)   inline (hot)
                                        @ 1   org.openjdk.jmh.runner.InfraControlL2::announceWarmdownReady (55 bytes)   too big
               !                    @ 4   java.util.concurrent.FutureTask::run (126 bytes)   recursive inlining is too deep
                                     \-&gt; TypeProfile (5147/5147 counts) = java/util/concurrent/FutureTask
                                  @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   too big
                                  @ 71   java.util.concurrent.FutureTask::set (36 bytes)   inline (hot)
                                    @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                    @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   (intrinsic)
                                    @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   inline (hot)
                                      @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                                      @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                                       \-&gt; TypeProfile (5792/11584 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                                       \-&gt; TypeProfile (5792/11584 counts) = java/util/concurrent/FutureTask
                                        @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                        @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                         \-&gt; TypeProfile (5536/5536 counts) = java/util/concurrent/LinkedBlockingQueue
               !                          @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   inline (hot)
                                            @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                            @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                            @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                              @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                                @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inlining too deep
                                                  @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                                  @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                                  @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                            @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                            @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                                            @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                              @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                                            @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                             \-&gt; TypeProfile (11584/11584 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                              @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                               \-&gt; TypeProfile (17098/17098 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                                @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                                @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                                  @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inlining too deep
                                                  @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                            @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                              @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                                  @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inlining too deep
                                                @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                                  @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inlining too deep
                                                  @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inlining too deep
               !                            @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                              @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                                  @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                  @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inlining too deep
                                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                               \-&gt; TypeProfile (12246/12246 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                                @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                                 \-&gt; TypeProfile (17098/17098 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                                  @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                                  @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inlining too deep
                                              @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                                @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inlining too deep
                                                  @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inlining too deep
                                              @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                            @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                  @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)   never executed
                              @ 62   java.util.concurrent.FutureTask::setException (36 bytes)   too big
                              @ 71   java.util.concurrent.FutureTask::set (36 bytes)   inline (hot)
                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                @ 28   sun.misc.Unsafe::putOrderedInt (0 bytes)   (intrinsic)
                                @ 32   java.util.concurrent.FutureTask::finishCompletion (74 bytes)   inline (hot)
                                  @ 65   java.util.concurrent.FutureTask::done (1 bytes)   inline (hot)
                                  @ 65   java.util.concurrent.ExecutorCompletionService$QueueingFuture::done (18 bytes)   inline (hot)
                                   \-&gt; TypeProfile (5792/11584 counts) = java/util/concurrent/ExecutorCompletionService$QueueingFuture
                                   \-&gt; TypeProfile (5792/11584 counts) = java/util/concurrent/FutureTask
                                    @ 4   java.util.concurrent.ExecutorCompletionService::access$000 (5 bytes)   accessor
                                    @ 11   java.util.AbstractQueue::add (20 bytes)   inline (hot)
                                     \-&gt; TypeProfile (5536/5536 counts) = java/util/concurrent/LinkedBlockingQueue
               !                      @ 2   java.util.concurrent.LinkedBlockingQueue::offer (130 bytes)   inline (hot)
                                        @ 18   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                        @ 37   java.util.concurrent.LinkedBlockingQueue$Node::&lt;init&gt; (10 bytes)   inline (hot)
                                          @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                                        @ 50   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                          @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                            @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                              @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                            @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                            @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inline (hot)
                                                  @ 0   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                  @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                  @ 16   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inlining too deep
                                                  @ 24   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inlining too deep
                                                  @ 31   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                  @ 60   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inlining too deep
                                              @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                              @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                              @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                        @ 54   java.util.concurrent.atomic.AtomicInteger::get (5 bytes)   accessor
                                        @ 67   java.util.concurrent.LinkedBlockingQueue::enqueue (14 bytes)   inline (hot)
                                        @ 71   java.util.concurrent.atomic.AtomicInteger::getAndIncrement (12 bytes)   inline (hot)
                                          @ 8   sun.misc.Unsafe::getAndAddInt (27 bytes)   (intrinsic)
                                        @ 89   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                         \-&gt; TypeProfile (11584/11584 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                          @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                           \-&gt; TypeProfile (17098/17098 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                            @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                            @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                          @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                            @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                              @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                                @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inline (hot)
                                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inlining too deep
                                                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   executed &lt; MinInliningThreshold times
                                                @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapObject (0 bytes)   (intrinsic)
                                              @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                        @ 96   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                          @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                            @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                              @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                              @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                            @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                              @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                                @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
               !                        @ 117   java.util.concurrent.LinkedBlockingQueue::signalNotEmpty (33 bytes)   inline (hot)
                                          @ 6   java.util.concurrent.locks.ReentrantLock::lock (8 bytes)   inline (hot)
                                            @ 4   java.util.concurrent.locks.ReentrantLock$NonfairSync::lock (25 bytes)   inline (hot)
                                              @ 3   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetState (13 bytes)   inline (hot)
                                                @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                              @ 10   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                              @ 13   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                              @ 21   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquire (27 bytes)   inline (hot)
                                                @ 2   java.util.concurrent.locks.ReentrantLock$NonfairSync::tryAcquire (6 bytes)   inline (hot)
                                                  @ 2   java.util.concurrent.locks.ReentrantLock$Sync::nonfairTryAcquire (67 bytes)   inlining too deep
                                                @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer::addWaiter (50 bytes)   too big
               !                                @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::acquireQueued (93 bytes)   too big
                                                @ 23   java.util.concurrent.locks.AbstractQueuedSynchronizer::selfInterrupt (7 bytes)   never executed
                                          @ 13   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::signal (33 bytes)   inline (hot)
                                           \-&gt; TypeProfile (12246/12246 counts) = java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject
                                            @ 4   java.util.concurrent.locks.ReentrantLock$Sync::isHeldExclusively (16 bytes)   inline (hot)
                                             \-&gt; TypeProfile (17098/17098 counts) = java/util/concurrent/locks/ReentrantLock$NonfairSync
                                              @ 1   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                              @ 4   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                            @ 29   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject::doSignal (43 bytes)   inline (hot)
                                              @ 27   java.util.concurrent.locks.AbstractQueuedSynchronizer::transferForSignal (45 bytes)   inline (hot)
                                                @ 4   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer::enq (58 bytes)   inline (hot)
                                                  @ 14   java.util.concurrent.locks.AbstractQueuedSynchronizer$Node::&lt;init&gt; (5 bytes)   inlining too deep
                                                  @ 17   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetHead (13 bytes)   executed &lt; MinInliningThreshold times
                                                  @ 42   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetTail (13 bytes)   inlining too deep
                                                @ 30   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                          @ 19   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   inline (hot)
                                            @ 5   java.util.concurrent.locks.AbstractQueuedSynchronizer::release (33 bytes)   inline (hot)
                                              @ 2   java.util.concurrent.locks.ReentrantLock$Sync::tryRelease (45 bytes)   inline (hot)
                                                @ 1   java.util.concurrent.locks.AbstractQueuedSynchronizer::getState (5 bytes)   accessor
                                                @ 7   java.lang.Thread::currentThread (0 bytes)   (intrinsic)
                                                @ 11   java.util.concurrent.locks.AbstractOwnableSynchronizer::getExclusiveOwnerThread (5 bytes)   accessor
                                                @ 35   java.util.concurrent.locks.AbstractOwnableSynchronizer::setExclusiveOwnerThread (6 bytes)   inline (hot)
                                                @ 40   java.util.concurrent.locks.AbstractQueuedSynchronizer::setState (6 bytes)   inline (hot)
                                              @ 26   java.util.concurrent.locks.AbstractQueuedSynchronizer::unparkSuccessor (84 bytes)   inline (hot)
                                                @ 12   java.util.concurrent.locks.AbstractQueuedSynchronizer::compareAndSetWaitStatus (13 bytes)   inline (hot)
                                                  @ 9   sun.misc.Unsafe::compareAndSwapInt (0 bytes)   (intrinsic)
                                                @ 80   java.util.concurrent.locks.LockSupport::unpark (12 bytes)   inline (hot)
                                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   failed to inline (intrinsic)
                                                  @ 8   sun.misc.Unsafe::unpark (0 bytes)   native method
                                          @ 27   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                                        @ 106   java.util.concurrent.locks.ReentrantLock::unlock (10 bytes)   already compiled into a medium method
                              @ 119   java.util.concurrent.FutureTask::handlePossibleCancellationInterrupt (20 bytes)   never executed
<writer thread='139652420601600'/>
  13774  554   !   4       java.io.ObjectOutputStream::writeSerialData (221 bytes)   made not entrant
<writer thread='139652429260544'/>
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                              @ 13   sun.reflect.ClassFileAssembler::emitShort (24 bytes)
                                @ 10   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
                                @ 20   sun.reflect.ClassFileAssembler::emitByte (11 bytes)
                                  @ 5   sun.reflect.ByteVectorImpl::add (38 bytes)   callee is too large
<writer thread='139652420601600'/>
  13776  747  s    4       java.io.BufferedOutputStream::flush (12 bytes)   made not entrant
<writer thread='139652429260544'/>
  13779  828       2       java.io.ObjectOutputStream::writeLong (9 bytes)
<writer thread='139652420601600'/>
<dependency_failed type='leaf_type' ctxk='java/net/SocketException' witness='sun/net/ConnectionResetException' stamp='13.780'/>
<writer thread='139652429260544'/>
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeLong (48 bytes)   callee is too large
  13786  829       2       java.io.ObjectOutputStream::writeShort (9 bytes)
                              @ 5   java.io.ObjectOutputStream$BlockDataOutputStream::writeShort (47 bytes)   callee is too large
  13787  824       2       java.lang.Class::getDeclaredField (34 bytes)
                              @ 2   sun.reflect.Reflection::getCallerClass (0 bytes)   native method
                              @ 6   java.lang.Class::checkMemberAccess (49 bytes)   callee is too large
                              @ 11   java.lang.Class::privateGetDeclaredFields (67 bytes)   callee is too large
                              @ 15   java.lang.Class::searchFields (41 bytes)   callee is too large
                              @ 28   java.lang.NoSuchFieldException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
  13788  825       1       java.lang.reflect.Constructor::getModifiers (5 bytes)
<writer thread='139652869576448'/>
C1 Runtime statistics:
 _resolve_invoke_virtual_cnt:     113
 _resolve_invoke_opt_virtual_cnt: 435
 _resolve_invoke_static_cnt:      116
 _handle_wrong_method_cnt:        77
 _ic_miss_cnt:                    48
 _generic_arraycopy_cnt:          0
 _generic_arraycopystub_cnt:      0
 _byte_arraycopy_cnt:             0
 _short_arraycopy_cnt:            0
 _int_arraycopy_cnt:              0
 _long_arraycopy_cnt:             0
 _primitive_arraycopy_cnt:        0
 _oop_arraycopy_cnt (C):          0
 _oop_arraycopy_cnt (stub):       0
 _arraycopy_slowcase_cnt:         0
 _arraycopy_checkcast_cnt:        0
 _arraycopy_checkcast_attempt_cnt:0
 _new_type_array_slowcase_cnt:    0
 _new_object_array_slowcase_cnt:  0
 _new_instance_slowcase_cnt:      0
 _new_multi_array_slowcase_cnt:   0
 _monitorenter_slowcase_cnt:      1
 _monitorexit_slowcase_cnt:       0
 _patch_code_slowcase_cnt:        3
 _throw_range_check_exception_count:            0:
 _throw_index_exception_count:                  0:
 _throw_div0_exception_count:                   0:
 _throw_null_pointer_exception_count:           0:
 _throw_class_cast_exception_count:             0:
 _throw_incompatible_class_change_error_count:  0:
 _throw_array_store_exception_count:            0:
 _throw_count:                                  0:

<statistics type='deoptimization'>
Deoptimization traps recorded:
    10 (100.0%) total
     null_check/make_not_entrant/checkcast: 1 (10.0%)
   null_assert/make_not_entrant/instanceof: 1 (10.0%)
                       constraint/none/nop: 3 (30.0%)
         unstable_if/reinterpret/ifnonnull: 4 (40.0%)
              unstable_if/reinterpret/ifne: 1 (10.0%)
</statistics>
<statistics type='SharedRuntime'>
    4 monitor enter slow
    3 new instance requires GC
    9 new array requires GC
   48 inline cache miss in compiled
   77 wrong method
  116 unresolved static call site
  113 unresolved virtual call site
  435 unresolved opt virtual call site
  217 slow partial subtype
197846 byte array copies
275705 short array copies
16421 int array copies
   12 long array copies
    1 find exception handler
AdapterHandlerTable: empty 147 longest 3 total 201 average 1.376712
AdapterHandlerTable: lookups 11293 buckets 11713 equals 10815 hits 10815 compact 10815
</statistics>
<statistics type='nmethod'>
Statistics for 81 native nmethods:
 N. total size  = 77536
 N. relocation  = 6952
 N. main code   = 45232
Statistics for 635 bytecoded nmethods:
 total in heap  = 2104736
 relocation     = 134496
 constants      = 736
 main code      = 1052224
 stub code      = 126984
 oops           = 1064
 scopes data    = 202480
 scopes pcs     = 325264
 dependencies   = 5528
 handler table  = 21768
 nul chk table  = 14776
Debug Data Chunks: 51062, shared 6086+19246, non-SP&apos;s elided 456
PcDesc Statistics:  2418 queries, 8.36 comparisons per query
  caches=635 queries=2418/0, hits=0+740, tests=8288+11923, adds=1678
</statistics>
<statistics type='opto'>
--- Compiler Statistics ---
Methods seen: 946  Methods parsed: 946  Nodes created: 170177
Blocks parsed: 2573  Blocks seen: 3260
3454 original NULL checks - 2680 elided (77%); optimizer leaves 512,
344 made implicit (67%)
CCP: 95  constants found: 0
Total frameslots = 944, Max frameslots = 40
Inserted 0 spill loads, 0 spill stores, 0 mem-mem moves and 0 copies.
Total load cost=      0, store cost =      0, mem-mem cost =  0.00, copy cost =     0.
Adjusted spill cost =       0.
Conservatively coalesced 531 copies, 0 pairs, 3892 post alloc.
Used cisc instruction  78,  remained in register 1194
Average allocation trips 1.709091
High Pressure Blocks = 0, Low Pressure Blocks = 0
Nops added 0 bytes to total of 107922 bytes, for 0.00%
Peephole: peephole rules applied: 0
PhaseIdealLoop=415, sum _unique=401841
</statistics>
<statistics type='intrinsic'>
Compiler intrinsic usage:
     1 ( 0.5%) _hashCode (worked,virtual)
     7 ( 3.3%) _getClass (worked)
    20 ( 9.4%) _min (worked)
     3 ( 1.4%) _max (worked)
     3 ( 1.4%) _doubleToLongBits (worked)
    14 ( 6.6%) _identityHashCode (worked)
     3 ( 1.4%) _nanoTime (worked)
    30 (14.2%) _arraycopy (worked)
     3 ( 1.4%) _isInterrupted (worked)
    37 (17.5%) _currentThread (worked)
     2 ( 0.9%) _isInstance (worked)
     1 ( 0.5%) _isArray (worked)
     1 ( 0.5%) _isPrimitive (worked)
     1 ( 0.5%) _getComponentType (worked)
     2 ( 0.9%) _getClassAccessFlags (worked)
     4 ( 1.9%) _copyOf (worked)
     1 ( 0.5%) _equals (worked)
     8 ( 3.8%) _Reference_get (worked)
     0 ( 0.0%) _unpark (failed)
     3 ( 1.4%) _getObject (worked)
     3 ( 1.4%) _getBoolean (worked)
     3 ( 1.4%) _getByte (worked)
     3 ( 1.4%) _getShort (worked)
     3 ( 1.4%) _getChar (worked)
     3 ( 1.4%) _getInt (worked)
     3 ( 1.4%) _getLong (worked)
     3 ( 1.4%) _getFloat (worked)
     3 ( 1.4%) _getDouble (worked)
     5 ( 2.4%) _getObjectVolatile (worked)
     1 ( 0.5%) _putObjectVolatile (worked)
     6 ( 2.8%) _compareAndSwapObject (worked)
     1 ( 0.5%) _compareAndSwapLong (worked)
    26 (12.3%) _compareAndSwapInt (worked)
     2 ( 0.9%) _putOrderedInt (worked)
     3 ( 1.4%) _getAndAddInt (worked)
   212 (100.0%) total (worked,failed,virtual)
</statistics>
<writer thread='139652445861632'/>
<destroy_vm stamp='13.803'/>
<tty_done stamp='13.920'/>
</tty>
<hotspot_log_done stamp='13.920'/>
</hotspot_log>
